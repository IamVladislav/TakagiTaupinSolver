//
//  main.cpp
//  TakagiTaupinSolver
//
//  Created by Владислав Метель on 29.07.2018.
//  Copyright © 2018 Владислав Метель. All rights reserved.
//

#include <iostream>
#include <cmath>
#include <vector>
#include "Vector_And_Operations.hpp"

const double PI_2=1.5708;
const double PI=3.14159;

class System_Replacment{
public:
    double xc, yc, zc;
    double xcinv, ycinv, zcinv;
    virtual void Basis(double x, double y, double z) = 0;
    virtual void Basis_Inverse(double x, double y, double z) = 0;
};

class Rotation_Matrix_Z: public System_Replacment{
public:
    double phi;
    Rotation_Matrix_Z(double phi){
        this->phi=phi;
    }
    void Basis(double x, double y, double z) override {
        xc=x*cos(phi)+y*sin(phi);
        yc=-x*sin(phi)+y*cos(phi);
        zc=z;
    }
    void Basis_Inverse(double x, double y, double z) override {
        xcinv=x*cos(phi)-y*sin(phi);
        ycinv=x*sin(phi)+y*cos(phi);
        zcinv=z;
    }
};

class Rotation_Matrix_Z_Vector{
public:
    double phi;
    Vector<double> vector,vector_inv;
    Rotation_Matrix_Z_Vector(double phi){
        this->phi=phi;
    }
    void Basis(Vector<double> input_vector) {
        vector.c[0]=input_vector.c[0]*cos(phi)+input_vector.c[1]*sin(phi);
        vector.c[1]=-input_vector.c[0]*sin(phi)+input_vector.c[1]*cos(phi);
        vector.c[2]=input_vector.c[2];
    }
    void Basis_Inverse(Vector<double> input_vector) {
        vector_inv.c[0]=input_vector.c[0]*cos(phi)-input_vector.c[1]*sin(phi);
        vector_inv.c[1]=input_vector.c[0]*sin(phi)+input_vector.c[1]*cos(phi);
        vector_inv.c[2]=input_vector.c[2];
    }
};

class Rotation_Matrix_Y: public System_Replacment{
public:
    double phi;
    Rotation_Matrix_Y(double phi){
        this->phi=phi;
    }
    void Basis(double x, double y, double z) override {
        xc=x*cos(phi)+z*sin(phi);
        yc=y;
        zc=-x*sin(phi)+z*cos(phi);
    }
    void Basis_Inverse(double x, double y, double z) override {
        xcinv=x*cos(phi)-z*sin(phi);
        ycinv=y;
        zcinv=x*sin(phi)+z*cos(phi);
    }
};

class Rotation_Matrix_Y_Vector{
public:
    double phi;
    Vector<double> vector,vector_inv;
    Rotation_Matrix_Y_Vector(double phi){
        this->phi=phi;
    }
    void Basis(Vector<double> input_vector) {
        vector.c[0]=input_vector.c[0]*cos(phi)+input_vector.c[2]*sin(phi);
        vector.c[1]=input_vector.c[1];
        vector.c[2]=-input_vector.c[0]*sin(phi)+input_vector.c[2]*cos(phi);
    }
    void Basis_Inverse(Vector<double> input_vector) {
        vector_inv.c[0]=input_vector.c[0]*cos(phi)-input_vector.c[2]*sin(phi);
        vector_inv.c[1]=input_vector.c[1];
        vector_inv.c[2]=input_vector.c[0]*sin(phi)+input_vector.c[2]*cos(phi);
    }
};

class Parallel_Shfit: public System_Replacment{
public:
    double x_shift, y_shift, z_shift;
    Parallel_Shfit(double x_shift,double y_shift,double z_shift){
        this->x_shift=x_shift;
        this->y_shift=y_shift;
        this->z_shift=z_shift;
    }
    void Basis(double x, double y, double z) override {
        xc=x-x_shift;
        yc=y-y_shift;
        zc=z-z_shift;
    }
    void Basis_Inverse(double x, double y, double z) override {
        xcinv=x+x_shift;
        ycinv=y+y_shift;
        zcinv=z+z_shift;
    }
};


class DisplacmentGradient{
public:
    virtual ~DisplacmentGradient(){}
    Vector<double> burgers_vector;
    double depth, nu, kappa;
    double segment_lenght;
    virtual double uxxcalc(double x, double y, double z) = 0;
    virtual double uxycalc(double x, double y, double z) = 0;
    virtual double uxzcalc(double x, double y, double z) = 0;
    virtual double uyxcalc(double x, double y, double z) = 0;
    virtual double uyycalc(double x, double y, double z) = 0;
    virtual double uyzcalc(double x, double y, double z) = 0;
    virtual double uzxcalc(double x, double y, double z) = 0;
    virtual double uzycalc(double x, double y, double z) = 0;
    virtual double uzzcalc(double x, double y, double z) = 0;
};

class BeamDislocation: public DisplacmentGradient{//untested
public:
    double theta;
    Parallel_Shfit *parallel_shift;
    BeamDislocation(double kappa, Vector<double> exit_point_coordinate, Vector<double> burgers_vector){
        this->kappa=kappa;
        theta=kappa-PI_2;
        parallel_shift = new Parallel_Shfit(sqrt(pow(exit_point_coordinate.c[0],2)+pow(exit_point_coordinate.c[1],2)), 0, exit_point_coordinate.c[2]);
        Rotation_Matrix_Y_Vector *burgers_vector_rotate = new Rotation_Matrix_Y_Vector(theta);
        burgers_vector_rotate->Basis(burgers_vector);
        this->burgers_vector=burgers_vector_rotate->vector;
    }
    double uxxcalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = pow(x,3);
        double r6 = sin(theta);
        double r7 = cos(theta);
        double r8 = atan(y/(-(z*r7) + x*r6));
        double r9 = sin(2*r8);
        double r10 = sqrt(r2 + r1 + r3);
        double r11 = atan(y/x);
        double r12 = cos(2*r11);
        double r13 = sin(2*r11);
        double r14 = 1/tan(theta);
        double r15 = 1/cos(theta);
        double r16 = tan(theta);
        double r17 = pow(z + r10,2);
        double r18 = pow(-z + r10,2);
        double r19 = pow(1 - r6,2);
        double r20 = pow(z + r10,4);
        double r21 = pow(1 + r6,2);
        double r22 = pow(z + r10,3);
        double r23 = pow(r14,2);
        double r24 = pow(r6,3);
        double r25 = pow(r15,2);
        double r26 = pow(r7,2);
        double r27 = pow(r16,2);
        double r28 = pow(r6,2);
        double r29 = pow(-(z*r7) + x*r6,2);
        double r30 = pow(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r31 = pow(1 - (1 - r6)/(1 + r6),2);
        double r32 = pow(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),3);
        double r33 = pow(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r34 = pow(1 + (1 - r6)/(1 + r6),2);
        double r35 = pow(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)),3);
        double r36 = pow(1 - (r2*r26*r34)/(r17*r33),2);
        double uxx=r6*((burgers_vector.c[1]*(1 - 2*nu)*r6*(-(z*r7) + x*r6))/(4.*PI*(1 - nu)*(r1 + r29)) - (burgers_vector.c[1]*y*r6*r9)/(4.*PI*(1 - nu)*(r1 + r29))) + (burgers_vector.c[1]*(-(z*(((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*(-((x*(1 + z/r10))/(r10*r17)) - (x*z)/(r4*(z + r10)) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((6*x*(1 + z/r10)*r18*r19)/(r10*r20*r21) - (4*x*(-1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) - (4*x*(1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r10)*r19)/(r10*r17*r21) - (2*x*z*(-z + r10)*r19)/(r4*r17*r21) - (4*x*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r22*(1 + r6)) + (2*x*(-1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) + (2*x*(1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*z*(-z + r10)*r12*(1 - r6))/(r4*r17*(1 + r6)) + (2*x*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r17*(1 + r6)) - (4*y*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(4.*(1 - r6)*r30)))/2. + ((1 + r23)*r24*(-((x*(1 + z/r10))/(r10*r17)) - (x*z)/(r4*(z + r10)) + ((6*x*(1 + z/r10)*r18*r19)/(r10*r20*r21) - (4*x*(-1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) - (4*x*(1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r10)*r19)/(r10*r17*r21) - (2*x*z*(-z + r10)*r19)/(r4*r17*r21) - (4*x*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r22*(1 + r6)) + (2*x*(-1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) + (2*x*(1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*z*(-z + r10)*r12*(1 - r6))/(r4*r17*(1 + r6)) + (2*x*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r17*(1 + r6)) - (4*y*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/(2.*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r25*r31*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r31)*((6*x*(1 + z/r10)*r18*r19)/(r10*r20*r21) - (4*x*(-1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) - (4*x*(1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r10)*r19)/(r10*r17*r21) - (2*x*z*(-z + r10)*r19)/(r4*r17*r21) - (4*x*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r22*(1 + r6)) + (2*x*(-1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) + (2*x*(1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*z*(-z + r10)*r12*(1 - r6))/(r4*r17*(1 + r6)) + (2*x*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r17*(1 + r6)) - (4*y*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r30 - (((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(2.*r30) + (r25*r31*(-(((-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - ((((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r31)*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r30 - (2*r25*r31*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r31)*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r32 - (r25*r31*(-(((-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - (((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) - (((2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) - (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) - (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) - (((-2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) + (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) + (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((6*x*(1 + z/r10)*r18*r19)/(r10*r20*r21) - (4*x*(-1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) - (4*x*(1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r10)*r19)/(r10*r17*r21) - (2*x*z*(-z + r10)*r19)/(r4*r17*r21) - (4*x*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r22*(1 + r6)) + (2*x*(-1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) + (2*x*(1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*z*(-z + r10)*r12*(1 - r6))/(r4*r17*(1 + r6)) + (2*x*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r17*(1 + r6)) - (4*y*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/r31))/(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))) + (r25*r31*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - (((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/r31))/r30))/2.)) - (1 - 2*nu)*(((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*(x/(r10*(z + r10)) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))))/2. + ((1 + r23)*r24*(x/(r10*(z + r10)) + ((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/(2.*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r25*r31*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r31)*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r30 - (r25*r31*(-(((-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - (((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/r31))/(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))))/2.) - 2*(1 - nu)*(r2/(r10*r17) - 1/(z + r10) + (r15*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r33)) - (r2*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r7*(1 + (1 - r6)/(1 + r6)))/((z + r10)*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))))/(1 - (r2*r26*r34)/(r17*r33)))*r16 + r14*(z*((-1 + nu)*((r6*((2*x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r35) - (x*r7*(1 + (1 - r6)/(1 + r6))*((2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) - (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) - (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*r33) + (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r33) + (r2*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*r33) - (r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) + (2*r2*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r22*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r2*z*r7*(1 + (1 - r6)/(1 + r6)))/(r4*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) - (r6*((2*r2*r26*r34*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r35) + (2*r5*r26*r34)/(r10*r22*r33) - (2*x*r26*r34)/(r17*r33))*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/r36 - ((-2*r2*(1 + z/r10))/(r10*r22) - (r2*z)/(r4*r17) + (1 + z/r10)/r17 + (r15*((2*x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r35) - (x*r7*(1 + (1 - r6)/(1 + r6))*((2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) - (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) - (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*r33) + (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r33) + (r2*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*r33) - (r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) + (2*r2*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r22*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r2*z*r7*(1 + (1 - r6)/(1 + r6)))/(r4*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))))/(1 - (r2*r26*r34)/(r17*r33)) - (r15*((2*r2*r26*r34*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r35) + (2*r5*r26*r34)/(r10*r22*r33) - (2*x*r26*r34)/(r17*r33))*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))))/r36)*r27) + (1 + r23)*((r27*((x*(1 - (1 - r6)/(1 + r6))*((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r30) - (r2*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*r30) + ((1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r30) - (x*(1 - (1 - r6)/(1 + r6))*((-2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) + (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) + (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r2*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (2*r2*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r22*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (r2*z*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r4*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + ((1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((6*x*(1 + z/r10)*r18*r19)/(r10*r20*r21) - (4*x*(-1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) - (4*x*(1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r10)*r19)/(r10*r17*r21) - (2*x*z*(-z + r10)*r19)/(r4*r17*r21) - (4*x*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r22*(1 + r6)) + (2*x*(-1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) + (2*x*(1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*z*(-z + r10)*r12*(1 - r6))/(r4*r17*(1 + r6)) + (2*x*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r17*(1 + r6)) - (4*y*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) - (2*x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r32) + (x*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) - (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(r17*r30) + (r6*((2*x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r35) - (x*r7*(1 + (1 - r6)/(1 + r6))*((2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) - (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) - (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*r33) + (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r33) + (r2*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*r33) - (r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) + (2*r2*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r22*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r2*z*r7*(1 + (1 - r6)/(1 + r6)))/(r4*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) - (r6*((2*r2*r26*r34*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r35) + (2*r5*r26*r34)/(r10*r22*r33) - (2*x*r26*r34)/(r17*r33))*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/r36))/2. + (r28*(-((x*(1 - (1 - r6)/(1 + r6))*((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r30)) + (r2*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*r30) - ((1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r30) + (x*(1 - (1 - r6)/(1 + r6))*((-2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) + (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) + (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (r2*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + ((1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (2*r2*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r22*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r2*z*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r4*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((6*x*(1 + z/r10)*r18*r19)/(r10*r20*r21) - (4*x*(-1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) - (4*x*(1 + z/r10)*(-z + r10)*r19)/(r10*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r10)*r19)/(r10*r17*r21) - (2*x*z*(-z + r10)*r19)/(r4*r17*r21) - (4*x*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r22*(1 + r6)) + (2*x*(-1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) + (2*x*(1 + z/r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*z*(-z + r10)*r12*(1 - r6))/(r4*r17*(1 + r6)) + (2*x*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r17*(1 + r6)) - (4*y*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) + (2*x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r18*r19)/(r22*r21) + (2*(-1 + z/r10)*(-z + r10)*r19)/(r17*r21) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r32) - (x*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) + (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(r17*r30) + (r6*((2*x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r35) - (x*r7*(1 + (1 - r6)/(1 + r6))*((2*x*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r22*(1 + r6)) - (x*(-1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 + z/r10)*(1 - r6))/(r10*r17*(1 + r6)) + (x*z*(-z + r10)*(1 - r6))/(r4*r17*(1 + r6)) - (x*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*r33) + (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r33) + (r2*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*r33) - (r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) + (2*r2*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r22*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r2*z*r7*(1 + (1 - r6)/(1 + r6)))/(r4*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) - (r6*((2*r2*r26*r34*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r17*r35) + (2*r5*r26*r34)/(r10*r22*r33) - (2*x*r26*r34)/(r17*r33))*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r17*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r7*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/r36))/2.)) + 2*(1 - nu)*((-1 + nu)*((r6*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r33)) - (r2*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r7*(1 + (1 - r6)/(1 + r6)))/((z + r10)*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) - (r2/(r10*r17) - 1/(z + r10) + (r15*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r33)) - (r2*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r7*(1 + (1 - r6)/(1 + r6)))/((z + r10)*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))))/(1 - (r2*r26*r34)/(r17*r33)))*r27) + (1 + r23)*((r28*((x*(1 - (1 - r6)/(1 + r6))*((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (r2*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + ((1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) + (r6*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r33)) - (r2*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r7*(1 + (1 - r6)/(1 + r6)))/((z + r10)*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/(1 - (r2*r26*r34)/(r17*r33))))/2. + (r27*(-((x*(1 - (1 - r6)/(1 + r6))*((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6)) - (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))) + (r2*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - ((1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*x*r18*r19)/(r10*r22*r21) + (2*x*(-z + r10)*r19)/(r10*r17*r21) + (2*x*(-z + r10)*r12*(1 - r6))/(r10*r17*(1 + r6)) - (2*x*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) - (4*y*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) + (r6*(-((x*r7*(1 + (1 - r6)/(1 + r6))*(-((x*(-z + r10)*(1 - r6))/(r10*r17*(1 + r6))) + (x*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r33)) - (r2*r7*(1 + (1 - r6)/(1 + r6)))/(r10*r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (r7*(1 + (1 - r6)/(1 + r6)))/((z + r10)*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r16)/(1 - (r2*r26*r34)/(r17*r33))))/2.)))))/(2.*PI*(1 - nu));
        return uxx;
    }
    double uxycalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = sin(theta);
        double r6 = cos(theta);
        double r7 = atan(y/(-(z*r6) + x*r5));
        double r8 = sin(2*r7);
        double r9 = sqrt(r2 + r1 + r3);
        double r10 = atan(y/x);
        double r11 = cos(2*r10);
        double r12 = sin(2*r10);
        double r13 = 1/tan(theta);
        double r14 = 1/cos(theta);
        double r15 = tan(theta);
        double r16 = pow(z + r9,2);
        double r17 = pow(-z + r9,2);
        double r18 = pow(1 - r5,2);
        double r19 = pow(z + r9,4);
        double r20 = pow(1 + r5,2);
        double r21 = pow(z + r9,3);
        double r22 = pow(r13,2);
        double r23 = pow(r5,3);
        double r24 = pow(r14,2);
        double r25 = pow(r6,2);
        double r26 = pow(r15,2);
        double r27 = pow(r5,2);
        double r28 = pow(-(z*r6) + x*r5,2);
        double r29 = pow(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)),2);
        double r30 = pow(1 - (1 - r5)/(1 + r5),2);
        double r31 = pow(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)),3);
        double r32 = pow(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)),2);
        double r33 = pow(1 + (1 - r5)/(1 + r5),2);
        double r34 = pow(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)),3);
        double r35 = pow(1 - (r2*r25*r33)/(r16*r32),2);
        double uxy=r5*((burgers_vector.c[1]*(1 - 2*nu)*y)/(4.*PI*(1 - nu)*(r1 + r28)) + (burgers_vector.c[1]*(-(z*r6) + x*r5)*r8)/(4.*PI*(1 - nu)*(r1 + r28))) + (burgers_vector.c[1]*(-(z*(((-1 + nu)*r5*(1 - (1 - r5)/(1 + r5))*(-((y*(1 + z/r9))/(r9*r16)) - (y*z)/(r4*(z + r9)) - ((1 + r5)*(1 - (1 - r5)/(1 + r5))*((6*y*(1 + z/r9)*r17*r18)/(r9*r19*r20) - (4*y*(-1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) - (4*y*(1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r9)*r18)/(r9*r16*r20) - (2*y*z*(-z + r9)*r18)/(r4*r16*r20) - (4*y*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r9*r21*(1 + r5)) + (2*y*(-1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) + (2*y*(1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*z*(-z + r9)*r11*(1 - r5))/(r4*r16*(1 + r5)) + (2*y*z*r11*(1 - r5))/(r4*(z + r9)*(1 + r5)) - (4*x*(1 + z/r9)*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*r16*(1 + r5)) + (4*x*(-1 + z/r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/(4.*(1 - r5)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + ((1 + r5)*(1 - (1 - r5)/(1 + r5))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/(4.*(1 - r5)*r29)))/2. + ((1 + r22)*r23*(-((y*(1 + z/r9))/(r9*r16)) - (y*z)/(r4*(z + r9)) + ((6*y*(1 + z/r9)*r17*r18)/(r9*r19*r20) - (4*y*(-1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) - (4*y*(1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r9)*r18)/(r9*r16*r20) - (2*y*z*(-z + r9)*r18)/(r4*r16*r20) - (4*y*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r9*r21*(1 + r5)) + (2*y*(-1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) + (2*y*(1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*z*(-z + r9)*r11*(1 - r5))/(r4*r16*(1 + r5)) + (2*y*z*r11*(1 - r5))/(r4*(z + r9)*(1 + r5)) - (4*x*(1 + z/r9)*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*r16*(1 + r5)) + (4*x*(-1 + z/r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5)))/(2.*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r24*r30*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r30)*((6*y*(1 + z/r9)*r17*r18)/(r9*r19*r20) - (4*y*(-1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) - (4*y*(1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r9)*r18)/(r9*r16*r20) - (2*y*z*(-z + r9)*r18)/(r4*r16*r20) - (4*y*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r9*r21*(1 + r5)) + (2*y*(-1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) + (2*y*(1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*z*(-z + r9)*r11*(1 - r5))/(r4*r16*(1 + r5)) + (2*y*z*r11*(1 - r5))/(r4*(z + r9)*(1 + r5)) - (4*x*(1 + z/r9)*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*r16*(1 + r5)) + (4*x*(-1 + z/r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/r29 - (((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/(2.*r29) + (r24*r30*(-(((-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - ((((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r30)*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/r29 - (2*r24*r30*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r30)*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/r31 - (r24*r30*(-(((-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - (((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) - (((2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) - (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) - (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) - (((-2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) + (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) + (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((6*y*(1 + z/r9)*r17*r18)/(r9*r19*r20) - (4*y*(-1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) - (4*y*(1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r9)*r18)/(r9*r16*r20) - (2*y*z*(-z + r9)*r18)/(r4*r16*r20) - (4*y*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r9*r21*(1 + r5)) + (2*y*(-1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) + (2*y*(1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*z*(-z + r9)*r11*(1 - r5))/(r4*r16*(1 + r5)) + (2*y*z*r11*(1 - r5))/(r4*(z + r9)*(1 + r5)) - (4*x*(1 + z/r9)*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*r16*(1 + r5)) + (4*x*(-1 + z/r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5)))/r30))/(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))) + (r24*r30*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*(-(((-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - (((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5)))/r30))/r29))/2.)) - (1 - 2*nu)*(((-1 + nu)*r5*(1 - (1 - r5)/(1 + r5))*(y/(r9*(z + r9)) - ((1 + r5)*(1 - (1 - r5)/(1 + r5))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/(4.*(1 - r5)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))))/2. + ((1 + r22)*r23*(y/(r9*(z + r9)) + ((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5)))/(2.*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r24*r30*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r30)*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/r29 - (r24*r30*(-(((-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - (((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5)))/r30))/(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))))/2.) - 2*(1 - nu)*((x*y)/(r9*r16) + (r14*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*y*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r25*r33)/(r16*r32)))*r15 + r13*(2*(1 - nu)*((-1 + nu)*((r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*y*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/(1 - (r2*r25*r33)/(r16*r32)) - ((x*y)/(r9*r16) + (r14*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*y*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r25*r33)/(r16*r32)))*r26) + (1 + r22)*((r27*((x*(1 - (1 - r5)/(1 + r5))*((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*y*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r29) + (r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*y*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/(1 - (r2*r25*r33)/(r16*r32))))/2. + (r26*(-((x*(1 - (1 - r5)/(1 + r5))*((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))) + (x*y*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r29) + (r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*y*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/(1 - (r2*r25*r33)/(r16*r32))))/2.)) + z*((-1 + nu)*((r5*((2*x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) - (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) - (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5))))/((z + r9)*r32) + (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r32) + (x*y*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*r32) + (2*x*y*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r21*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) + (x*y*z*r6*(1 + (1 - r5)/(1 + r5)))/(r4*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/(1 - (r2*r25*r33)/(r16*r32)) - (r5*((2*r2*r25*r33*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r34) + (2*r2*y*r25*r33)/(r9*r21*r32))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/r35 - ((-2*x*y*(1 + z/r9))/(r9*r21) - (x*y*z)/(r4*r16) + (r14*((2*x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) - (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) - (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5))))/((z + r9)*r32) + (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r32) + (x*y*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*r32) + (2*x*y*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r21*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) + (x*y*z*r6*(1 + (1 - r5)/(1 + r5)))/(r4*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r25*r33)/(r16*r32)) - (r14*((2*r2*r25*r33*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r34) + (2*r2*y*r25*r33)/(r9*r21*r32))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/r35)*r26) + (1 + r22)*((r26*((x*(1 - (1 - r5)/(1 + r5))*((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) - (x*y*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*r29) - (x*(1 - (1 - r5)/(1 + r5))*((-2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) + (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) + (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5))))/((z + r9)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*y*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (2*x*y*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r21*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*y*z*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r4*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((6*y*(1 + z/r9)*r17*r18)/(r9*r19*r20) - (4*y*(-1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) - (4*y*(1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r9)*r18)/(r9*r16*r20) - (2*y*z*(-z + r9)*r18)/(r4*r16*r20) - (4*y*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r9*r21*(1 + r5)) + (2*y*(-1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) + (2*y*(1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*z*(-z + r9)*r11*(1 - r5))/(r4*r16*(1 + r5)) + (2*y*z*r11*(1 - r5))/(r4*(z + r9)*(1 + r5)) - (4*x*(1 + z/r9)*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*r16*(1 + r5)) + (4*x*(-1 + z/r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r29) - (2*x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r31) + (x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r29) - (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/(r16*r29) + (r5*((2*x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) - (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) - (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5))))/((z + r9)*r32) + (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r32) + (x*y*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*r32) + (2*x*y*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r21*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) + (x*y*z*r6*(1 + (1 - r5)/(1 + r5)))/(r4*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/(1 - (r2*r25*r33)/(r16*r32)) - (r5*((2*r2*r25*r33*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r34) + (2*r2*y*r25*r33)/(r9*r21*r32))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/r35))/2. + (r27*(-((x*(1 - (1 - r5)/(1 + r5))*((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29)) + (x*y*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*r29) + (x*(1 - (1 - r5)/(1 + r5))*((-2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) + (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) + (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5))))/((z + r9)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*y*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (2*x*y*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r21*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*y*z*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r4*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((6*y*(1 + z/r9)*r17*r18)/(r9*r19*r20) - (4*y*(-1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) - (4*y*(1 + z/r9)*(-z + r9)*r18)/(r9*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r9)*r18)/(r9*r16*r20) - (2*y*z*(-z + r9)*r18)/(r4*r16*r20) - (4*y*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r9*r21*(1 + r5)) + (2*y*(-1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) + (2*y*(1 + z/r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*z*(-z + r9)*r11*(1 - r5))/(r4*r16*(1 + r5)) + (2*y*z*r11*(1 - r5))/(r4*(z + r9)*(1 + r5)) - (4*x*(1 + z/r9)*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*r16*(1 + r5)) + (4*x*(-1 + z/r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r29) + (2*x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r17*r18)/(r21*r20) + (2*(-1 + z/r9)*(-z + r9)*r18)/(r16*r20) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r16*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r31) - (x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/((z + r9)*r29) + (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*y*r17*r18)/(r9*r21*r20) + (2*y*(-z + r9)*r18)/(r9*r16*r20) + (2*y*(-z + r9)*r11*(1 - r5))/(r9*r16*(1 + r5)) - (2*y*r11*(1 - r5))/(r9*(z + r9)*(1 + r5)) + (4*x*(-z + r9)*(1 - r5)*r12)/((r2 + r1)*(z + r9)*(1 + r5))))/(r16*r29) + (r5*((2*x*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5)))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*y*(1 + z/r9)*(-z + r9)*(1 - r5))/(r9*r21*(1 + r5)) - (y*(-1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) - (y*(1 + z/r9)*(1 - r5))/(r9*r16*(1 + r5)) + (y*z*(-z + r9)*(1 - r5))/(r4*r16*(1 + r5)) - (y*z*(1 - r5))/(r4*(z + r9)*(1 + r5))))/((z + r9)*r32) + (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r32) + (x*y*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r9*r16*r32) + (2*x*y*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r9*r21*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) + (x*y*z*r6*(1 + (1 - r5)/(1 + r5)))/(r4*r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/(1 - (r2*r25*r33)/(r16*r32)) - (r5*((2*r2*r25*r33*(-((y*(-z + r9)*(1 - r5))/(r9*r16*(1 + r5))) + (y*(1 - r5))/(r9*(z + r9)*(1 + r5))))/(r16*r34) + (2*r2*y*r25*r33)/(r9*r21*r32))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r16*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r32)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r16*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r15)/r35))/2.)))))/(2.*PI*(1 - nu));
        return uxy;
    }
    double uxzcalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = sin(theta);
        double r6 = cos(theta);
        double r7 = atan(y/(-(z*r6) + x*r5));
        double r8 = sin(2*r7);
        double r9 = sqrt(r2 + r1 + r3);
        double r10 = atan(y/x);
        double r11 = cos(2*r10);
        double r12 = 1/tan(theta);
        double r13 = 1/cos(theta);
        double r14 = tan(theta);
        double r15 = pow(-z + r9,2);
        double r16 = pow(1 - r5,2);
        double r17 = pow(z + r9,3);
        double r18 = pow(1 + r5,2);
        double r19 = pow(z + r9,2);
        double r20 = pow(r12,2);
        double r21 = pow(r5,3);
        double r22 = pow(r13,2);
        double r23 = pow(z + r9,4);
        double r24 = pow(r6,2);
        double r25 = pow(r14,2);
        double r26 = pow(r5,2);
        double r27 = pow(-(z*r6) + x*r5,2);
        double r28 = pow(1 - (1 - r5)/(1 + r5),2);
        double r29 = pow(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)),2);
        double r30 = pow(1 + z/r9,2);
        double r31 = pow((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)),2);
        double r32 = pow(-1 + z/r9,2);
        double r33 = pow(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)),3);
        double r34 = pow(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)),2);
        double r35 = pow(1 + (1 - r5)/(1 + r5),2);
        double r36 = pow(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)),2);
        double r37 = pow(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)),3);
        double r38 = pow(1 - (r2*r24*r35)/(r19*r34),2);
        double uxz=r5*(-(burgers_vector.c[1]*(1 - 2*nu)*r6*(-(z*r6) + x*r5))/(4.*PI*(1 - nu)*(r1 + r27)) + (burgers_vector.c[1]*y*r6*r8)/(4.*PI*(1 - nu)*(r1 + r27))) + (burgers_vector.c[1]*(-((-1 + nu)*r5*(1 - (1 - r5)/(1 + r5))*((1 + z/r9)/(z + r9) - ((1 + r5)*(1 - (1 - r5)/(1 + r5))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(4.*(1 - r5)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))))/2. - ((1 + r20)*r21*((1 + z/r9)/(z + r9) + ((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/(2.*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (r22*r28*(-(((-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - ((((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))) + (r22*r28*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/r29))/2. - z*(((-1 + nu)*r5*(1 - (1 - r5)/(1 + r5))*(-(r30/r19) + (-(r3/r4) + 1/r9)/(z + r9) + ((1 + r5)*(1 - (1 - r5)/(1 + r5))*r31)/(4.*(1 - r5)*r29) - ((1 + r5)*(1 - (1 - r5)/(1 + r5))*((6*r30*r15*r16)/(r23*r18) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r9)*r15*r16)/(r17*r18) + (2*r32*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r16)/(r19*r18) - (4*r30*(-z + r9)*r11*(1 - r5))/(r17*(1 + r5)) + (4*(-1 + z/r9)*(1 + z/r9)*r11*(1 - r5))/(r19*(1 + r5)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-(r3/r4) + 1/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(4.*(1 - r5)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))))/2. + ((1 + r20)*r21*(-(r30/r19) + (-(r3/r4) + 1/r9)/(z + r9) - r31/(2.*r29) + ((6*r30*r15*r16)/(r23*r18) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r9)*r15*r16)/(r17*r18) + (2*r32*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r16)/(r19*r18) - (4*r30*(-z + r9)*r11*(1 - r5))/(r17*(1 + r5)) + (4*(-1 + z/r9)*(1 + z/r9)*r11*(1 - r5))/(r19*(1 + r5)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-(r3/r4) + 1/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/(2.*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (r22*r28*((-2*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) - (((2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) - (((-2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) + (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((6*r30*r15*r16)/(r23*r18) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r9)*r15*r16)/(r17*r18) + (2*r32*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r16)/(r19*r18) - (4*r30*(-z + r9)*r11*(1 - r5))/(r17*(1 + r5)) + (4*(-1 + z/r9)*(1 + z/r9)*r11*(1 - r5))/(r19*(1 + r5)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-(r3/r4) + 1/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))) + (2*r22*r28*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*(-(((-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - ((((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/r29 - (2*r22*r28*r31*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/r33 + (r22*r28*((6*r30*r15*r16)/(r23*r18) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r9)*r15*r16)/(r17*r18) + (2*r32*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r16)/(r19*r18) - (4*r30*(-z + r9)*r11*(1 - r5))/(r17*(1 + r5)) + (4*(-1 + z/r9)*(1 + z/r9)*r11*(1 - r5))/(r19*(1 + r5)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-(r3/r4) + 1/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/r29))/2.) - (1 - 2*nu)*(((-1 + nu)*r5*(1 - (1 - r5)/(1 + r5))*((1 + z/r9)/(z + r9) - ((1 + r5)*(1 - (1 - r5)/(1 + r5))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(4.*(1 - r5)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))))/2. + ((1 + r20)*r21*((1 + z/r9)/(z + r9) + ((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/(2.*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (r22*r28*(-(((-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) - ((((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5))) + ((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5))) + (r22*r28*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))*(-(((1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/((1 - (1 - r5)/(1 + r5))*(1 + (1 - r5)/(1 + r5)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))/r28))/r29))/2.) - 2*(1 - nu)*((x*(1 + z/r9))/r19 + (r13*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r24*r35)/(r19*r34)))*r14 + r12*((-1 + nu)*((r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34)) - ((x*(1 + z/r9))/r19 + (r13*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r24*r35)/(r19*r34)))*r25) + (1 + r20)*((r26*(-((x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29)) + (x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34))))/2. + (r25*((x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) - (x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34))))/2.) + z*((-1 + nu)*((r5*((2*x*r6*(1 + (1 - r5)/(1 + r5))*r36)/((z + r9)*r37) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) + (2*x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r34) + (2*x*r30*r6*(1 + (1 - r5)/(1 + r5)))/(r17*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(-(r3/r4) + 1/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34)) - (r5*((2*r2*r24*r35*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r37) + (2*r2*(1 + z/r9)*r24*r35)/(r17*r34))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/r38 - ((-2*x*r30)/r17 + (x*(-(r3/r4) + 1/r9))/r19 + (r13*((2*x*r6*(1 + (1 - r5)/(1 + r5))*r36)/((z + r9)*r37) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) + (2*x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r34) + (2*x*r30*r6*(1 + (1 - r5)/(1 + r5)))/(r17*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(-(r3/r4) + 1/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r24*r35)/(r19*r34)) - (r13*((2*r2*r24*r35*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r37) + (2*r2*(1 + z/r9)*r24*r35)/(r17*r34))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/r38)*r25) + (1 + r20)*((r26*((2*x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*r31)/((z + r9)*r33) - (x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((6*r30*r15*r16)/(r23*r18) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r9)*r15*r16)/(r17*r18) + (2*r32*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r16)/(r19*r18) - (4*r30*(-z + r9)*r11*(1 - r5))/(r17*(1 + r5)) + (4*(-1 + z/r9)*(1 + z/r9)*r11*(1 - r5))/(r19*(1 + r5)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-(r3/r4) + 1/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) - (2*x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) + (2*x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r29) + (x*(1 - (1 - r5)/(1 + r5))*((-2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) + (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (2*x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (2*x*r30*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r17*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(-(r3/r4) + 1/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r5*((2*x*r6*(1 + (1 - r5)/(1 + r5))*r36)/((z + r9)*r37) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) + (2*x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r34) + (2*x*r30*r6*(1 + (1 - r5)/(1 + r5)))/(r17*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(-(r3/r4) + 1/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34)) - (r5*((2*r2*r24*r35*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r37) + (2*r2*(1 + z/r9)*r24*r35)/(r17*r34))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/r38))/2. + (r25*((-2*x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*r31)/((z + r9)*r33) + (x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((6*r30*r15*r16)/(r23*r18) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r9)*r15*r16)/(r17*r18) + (2*r32*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r16)/(r19*r18) - (4*r30*(-z + r9)*r11*(1 - r5))/(r17*(1 + r5)) + (4*(-1 + z/r9)*(1 + z/r9)*r11*(1 - r5))/(r19*(1 + r5)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-(r3/r4) + 1/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) + (2*x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) - (2*x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r29) - (x*(1 - (1 - r5)/(1 + r5))*((-2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) + (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (2*x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (2*x*r30*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r17*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*(-(r3/r4) + 1/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r5*((2*x*r6*(1 + (1 - r5)/(1 + r5))*r36)/((z + r9)*r37) - (x*r6*(1 + (1 - r5)/(1 + r5))*((2*r30*(-z + r9)*(1 - r5))/(r17*(1 + r5)) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r5))/(r19*(1 + r5)) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) + ((-(r3/r4) + 1/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34) + (2*x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r34) + (2*x*r30*r6*(1 + (1 - r5)/(1 + r5)))/(r17*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(-(r3/r4) + 1/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34)) - (r5*((2*r2*r24*r35*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*r37) + (2*r2*(1 + z/r9)*r24*r35)/(r17*r34))*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/r38))/2.)) + 2*(1 - nu)*((-1 + nu)*((r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34)) - ((x*(1 + z/r9))/r19 + (r13*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))))/(1 - (r2*r24*r35)/(r19*r34)))*r25) + (1 + r20)*((r26*(-((x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29)) + (x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) - (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34))))/2. + (r25*((x*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))*((-2*(1 + z/r9)*r15*r16)/(r17*r18) + (2*(-1 + z/r9)*(-z + r9)*r16)/(r19*r18) + (2*(1 + z/r9)*(-z + r9)*r11*(1 - r5))/(r19*(1 + r5)) - (2*(-1 + z/r9)*r11*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r29) - (x*(1 - (1 - r5)/(1 + r5))*(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5)) - ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (x*(1 + z/r9)*(1 - (1 - r5)/(1 + r5))*(1 - ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r9)*r11*(1 - r5))/((z + r9)*(1 + r5)))) + (r5*(-((x*r6*(1 + (1 - r5)/(1 + r5))*(-(((1 + z/r9)*(-z + r9)*(1 - r5))/(r19*(1 + r5))) + ((-1 + z/r9)*(1 - r5))/((z + r9)*(1 + r5))))/((z + r9)*r34)) - (x*(1 + z/r9)*r6*(1 + (1 - r5)/(1 + r5)))/(r19*(1 + ((-z + r9)*(1 - r5))/((z + r9)*(1 + r5)))))*r14)/(1 - (r2*r24*r35)/(r19*r34))))/2.)))))/(2.*PI*(1 - nu));
        return uxz;
    }
    double uyxcalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = sin(theta);
        double r6 = cos(theta);
        double r7 = atan(y/(-(z*r6) + x*r5));
        double r8 = cos(2*r7);
        double r9 = tan(theta);
        double r10 = sqrt(r2 + r1 + r3);
        double r11 = 1/tan(theta);
        double r12 = atan(y/x);
        double r13 = cos(2*r12);
        double r14 = sin(2*r12);
        double r15 = pow(z + r10,2);
        double r16 = pow(r11,2);
        double r17 = pow(-z + r10,2);
        double r18 = pow(1 - r5,2);
        double r19 = pow(1 + r5,2);
        double r20 = pow(z + r10,3);
        double r21 = pow(r9,2);
        double r22 = pow(r14,2);
        double r23 = pow(z + r10,4);
        double r24 = pow(-(z*r6) + x*r5,2);
        double r25 = pow(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)),2);
        double r26 = pow(1 - (1 - r5)/(1 + r5),2);
        double r27 = pow(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)),2);
        double r28 = pow(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)),2);
        double r29 = pow(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)),3);
        double r30 = pow(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)),3);
        double r31 = pow(1 + (r17*r18*r22)/(r15*r19*r28),2);
        double r32 = pow(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)),3);
        double r33 = pow(1 + (r1*r16*r26)/(r15*r25),2);
        double uyx=-(burgers_vector.c[1]*y*r5)/(2.*PI*(r1 + r24)) + (burgers_vector.c[1]*y*r8*r5)/(4.*PI*(1 - nu)*(r1 + r24)) - (burgers_vector.c[1]*(2*(1 - nu)*r9*((x*y)/(r10*r15) + ((-((y*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/((z + r10)*r25)) - (x*y*r11*(1 - (1 - r5)/(1 + r5)))/(r10*r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/(1 + (r1*r16*r26)/(r15*r25))) - (1 - 2*nu)*((y*(-z + r10)*r13*(1 + r16)*r5*r26)/(2.*(r2 + r1)*(z + r10)*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*(-z + r10)*(1 + r16)*r5*r26*r14)/(4.*r10*r15*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*(1 + r16)*r5*r26*r14)/(4.*r10*(z + r10)*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + ((-z + r10)*(1 + r16)*r5*r26*r14*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(4.*(z + r10)*r27) - ((-1 + nu)*((-2*y*(-z + r10)*r13*(1 - r5))/((r2 + r1)*(z + r10)*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*(-z + r10)*(1 - r5)*r14)/(r10*r15*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*(1 - r5)*r14)/(r10*(z + r10)*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - ((-z + r10)*(1 - r5)*r14*((x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (2*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + r5)*r28))*r21)/(1 + (r17*r18*r22)/(r15*r19*r28))) - z*(-(y*(-z + r10)*r13*(1 + r16)*r5*r26*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5))))/(2.*(r2 + r1)*(z + r10)*r27) - (y*(1 + z/r10)*(-z + r10)*r13*(1 + r16)*r5*r26)/(2.*(r2 + r1)*r15*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (y*(-1 + z/r10)*r13*(1 + r16)*r5*r26)/(2.*(r2 + r1)*(z + r10)*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*(-z + r10)*(1 + r16)*r5*r26*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14)/(4.*r10*r15*r27) + (x*(1 + r16)*r5*r26*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14)/(4.*r10*(z + r10)*r27) - (x*(1 + z/r10)*(-z + r10)*(1 + r16)*r5*r26*r14)/(2.*r10*r20*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*(-1 + z/r10)*(1 + r16)*r5*r26*r14)/(4.*r10*r15*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*(1 + z/r10)*(1 + r16)*r5*r26*r14)/(4.*r10*r15*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*z*(-z + r10)*(1 + r16)*r5*r26*r14)/(4.*r4*r15*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*z*(1 + r16)*r5*r26*r14)/(4.*r4*(z + r10)*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + ((-z + r10)*(1 + r16)*r5*r26*r14*((6*x*(1 + z/r10)*r17*r18)/(r10*r23*r19) - (4*x*(-1 + z/r10)*(-z + r10)*r18)/(r10*r20*r19) - (4*x*(1 + z/r10)*(-z + r10)*r18)/(r10*r20*r19) + (2*x*z*r17*r18)/(r4*r20*r19) + (2*x*(-1 + z/r10)*r18)/(r10*r15*r19) - (2*x*z*(-z + r10)*r18)/(r4*r15*r19) - (4*x*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r10*r20*(1 + r5)) + (2*x*(-1 + z/r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) + (2*x*(1 + z/r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*z*(-z + r10)*r13*(1 - r5))/(r4*r15*(1 + r5)) + (2*x*z*r13*(1 - r5))/(r4*(z + r10)*(1 + r5)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*r15*(1 + r5)) - (4*y*(-1 + z/r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(4.*(z + r10)*r27) - ((-z + r10)*(1 + r16)*r5*r26*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(2.*(z + r10)*r29) - ((1 + z/r10)*(-z + r10)*(1 + r16)*r5*r26*r14*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(4.*r15*r27) + ((-1 + z/r10)*(1 + r16)*r5*r26*r14*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(4.*(z + r10)*r27) - ((-1 + nu)*((2*y*(-z + r10)*r13*(1 - r5)*(((1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5))))/((r2 + r1)*(z + r10)*(1 + r5)*r28) + (2*y*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/((r2 + r1)*r15*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (2*y*(-1 + z/r10)*r13*(1 - r5))/((r2 + r1)*(z + r10)*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*(-z + r10)*(1 - r5)*(((1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14)/(r10*r15*(1 + r5)*r28) - (x*(1 - r5)*(((1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14)/(r10*(z + r10)*(1 + r5)*r28) + (2*x*(1 + z/r10)*(-z + r10)*(1 - r5)*r14)/(r10*r20*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*(-1 + z/r10)*(1 - r5)*r14)/(r10*r15*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*(1 + z/r10)*(1 - r5)*r14)/(r10*r15*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*z*(-z + r10)*(1 - r5)*r14)/(r4*r15*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*z*(1 - r5)*r14)/(r4*(z + r10)*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - ((-z + r10)*(1 - r5)*r14*((-2*x*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r10*r20*(1 + r5)) + (x*(-1 + z/r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) + (x*(1 + z/r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (x*z*(-z + r10)*r13*(1 - r5))/(r4*r15*(1 + r5)) + (x*z*r13*(1 - r5))/(r4*(z + r10)*(1 + r5)) + (2*y*(1 + z/r10)*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*r15*(1 + r5)) - (2*y*(-1 + z/r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + r5)*r28) + (2*(-z + r10)*(1 - r5)*(((1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14*((x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (2*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + r5)*r30) + ((1 + z/r10)*(-z + r10)*(1 - r5)*r14*((x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (2*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(r15*(1 + r5)*r28) - ((-1 + z/r10)*(1 - r5)*r14*((x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (2*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + r5)*r28))*r21)/(1 + (r17*r18*r22)/(r15*r19*r28)) + ((-1 + nu)*(-(((-z + r10)*(1 - r5)*(((1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*r14)/((z + r10)*(1 + r5)*r28)) - ((1 + z/r10)*(-z + r10)*(1 - r5)*r14)/(r15*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + ((-1 + z/r10)*(1 - r5)*r14)/((z + r10)*(1 + r5)*(1 - ((-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))))*((-4*y*r17*r13*r18*r14)/((r2 + r1)*r15*r19*r28) - (2*x*r17*r18*r22)/(r10*r20*r19*r28) + (2*x*(-z + r10)*r18*r22)/(r10*r15*r19*r28) - (2*r17*r18*r22*((x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (2*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(r15*r19*r30))*r21)/r31) + r11*(2*(1 - nu)*((-1 + nu)*r21*((x*y)/(r10*r15) + ((-((y*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/((z + r10)*r25)) - (x*y*r11*(1 - (1 - r5)/(1 + r5)))/(r10*r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/(1 + (r1*r16*r26)/(r15*r25))) - ((1 + r16)*r21*(-((y*r26*(-((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5))) + (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5))))) + (x*y*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5))))/(r10*r15*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (y*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*r27) + ((-((y*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/((z + r10)*r25)) - (x*y*r11*(1 - (1 - r5)/(1 + r5)))/(r10*r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/(1 + (r1*r16*r26)/(r15*r25))))/2.) + z*((-1 + nu)*r21*((-2*x*y*(1 + z/r10))/(r10*r20) - (x*y*z)/(r4*r15) + (((2*y*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5)))*(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/((z + r10)*r32) - (y*r11*(1 - (1 - r5)/(1 + r5))*((-2*x*(1 + z/r10)*(-z + r10)*(1 - r5))/(r10*r20*(1 + r5)) + (x*(-1 + z/r10)*(1 - r5))/(r10*r15*(1 + r5)) + (x*(1 + z/r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*z*(-z + r10)*(1 - r5))/(r4*r15*(1 + r5)) + (x*z*(1 - r5))/(r4*(z + r10)*(1 + r5))))/((z + r10)*r25) + (y*(1 + z/r10)*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/(r15*r25) + (x*y*r11*(1 - (1 - r5)/(1 + r5))*(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/(r10*r15*r25) + (2*x*y*(1 + z/r10)*r11*(1 - (1 - r5)/(1 + r5)))/(r10*r20*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))) + (x*y*z*r11*(1 - (1 - r5)/(1 + r5)))/(r4*r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/(1 + (r1*r16*r26)/(r15*r25)) - (((-2*r1*r16*r26*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/(r15*r32) - (2*x*r1*r16*r26)/(r10*r20*r25))*(-((y*r11*(1 - (1 - r5)/(1 + r5))*(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/((z + r10)*r25)) - (y*(1 + z/r10)*r11*(1 - (1 - r5)/(1 + r5)))/(r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/r33) - ((1 + r16)*r21*((y*r26*(-((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5))) + (x*(1 - r5))/(r10*(z + r10)*(1 + r5)))*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*r27) - (x*y*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5))))/(r10*r15*(1 + (1 - r5)/(1 + r5))*r27) - (y*r26*((2*x*(1 + z/r10)*(-z + r10)*(1 - r5))/(r10*r20*(1 + r5)) - (x*(-1 + z/r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 + z/r10)*(1 - r5))/(r10*r15*(1 + r5)) + (x*z*(-z + r10)*(1 - r5))/(r4*r15*(1 + r5)) - (x*z*(1 - r5))/(r4*(z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (y*(1 + z/r10)*r26*(-((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5))) + (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/(r15*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (x*y*r26*(-(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5))) + ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/(r10*r15*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (2*x*y*(1 + z/r10)*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5))))/(r10*r20*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) - (x*y*z*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5))))/(r4*r15*(1 + (1 - r5)/(1 + r5))*(1 + (r17*r18)/(r15*r19) - (2*(-z + r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))) + (y*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))*((6*x*(1 + z/r10)*r17*r18)/(r10*r23*r19) - (4*x*(-1 + z/r10)*(-z + r10)*r18)/(r10*r20*r19) - (4*x*(1 + z/r10)*(-z + r10)*r18)/(r10*r20*r19) + (2*x*z*r17*r18)/(r4*r20*r19) + (2*x*(-1 + z/r10)*r18)/(r10*r15*r19) - (2*x*z*(-z + r10)*r18)/(r4*r15*r19) - (4*x*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r10*r20*(1 + r5)) + (2*x*(-1 + z/r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) + (2*x*(1 + z/r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*z*(-z + r10)*r13*(1 - r5))/(r4*r15*(1 + r5)) + (2*x*z*r13*(1 - r5))/(r4*(z + r10)*(1 + r5)) + (4*y*(1 + z/r10)*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*r15*(1 + r5)) - (4*y*(-1 + z/r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*r27) - (2*y*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))*((-2*(1 + z/r10)*r17*r18)/(r20*r19) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r15*r19) + (2*(1 + z/r10)*(-z + r10)*r13*(1 - r5))/(r15*(1 + r5)) - (2*(-1 + z/r10)*r13*(1 - r5))/((z + r10)*(1 + r5)))*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*r29) + (y*r26*(-(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5))) + ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5)))*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/((z + r10)*(1 + (1 - r5)/(1 + r5))*r27) - (y*(1 + z/r10)*r26*(1 + ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))*((-2*x*r17*r18)/(r10*r20*r19) + (2*x*(-z + r10)*r18)/(r10*r15*r19) + (2*x*(-z + r10)*r13*(1 - r5))/(r10*r15*(1 + r5)) - (2*x*r13*(1 - r5))/(r10*(z + r10)*(1 + r5)) - (4*y*(-z + r10)*(1 - r5)*r14)/((r2 + r1)*(z + r10)*(1 + r5))))/(r15*(1 + (1 - r5)/(1 + r5))*r27) + (((2*y*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5)))*(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/((z + r10)*r32) - (y*r11*(1 - (1 - r5)/(1 + r5))*((-2*x*(1 + z/r10)*(-z + r10)*(1 - r5))/(r10*r20*(1 + r5)) + (x*(-1 + z/r10)*(1 - r5))/(r10*r15*(1 + r5)) + (x*(1 + z/r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*z*(-z + r10)*(1 - r5))/(r4*r15*(1 + r5)) + (x*z*(1 - r5))/(r4*(z + r10)*(1 + r5))))/((z + r10)*r25) + (y*(1 + z/r10)*r11*(1 - (1 - r5)/(1 + r5))*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/(r15*r25) + (x*y*r11*(1 - (1 - r5)/(1 + r5))*(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/(r10*r15*r25) + (2*x*y*(1 + z/r10)*r11*(1 - (1 - r5)/(1 + r5)))/(r10*r20*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))) + (x*y*z*r11*(1 - (1 - r5)/(1 + r5)))/(r4*r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/(1 + (r1*r16*r26)/(r15*r25)) - (((-2*r1*r16*r26*((x*(-z + r10)*(1 - r5))/(r10*r15*(1 + r5)) - (x*(1 - r5))/(r10*(z + r10)*(1 + r5))))/(r15*r32) - (2*x*r1*r16*r26)/(r10*r20*r25))*(-((y*r11*(1 - (1 - r5)/(1 + r5))*(((1 + z/r10)*(-z + r10)*(1 - r5))/(r15*(1 + r5)) - ((-1 + z/r10)*(1 - r5))/((z + r10)*(1 + r5))))/((z + r10)*r25)) - (y*(1 + z/r10)*r11*(1 - (1 - r5)/(1 + r5)))/(r15*(1 - ((-z + r10)*(1 - r5))/((z + r10)*(1 + r5)))))*r9)/r33))/2.))))/(2.*PI*(1 - nu));
        return uyx;
    }
    double uyycalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = pow(y,3);
        double r6 = cos(theta);
        double r7 = sin(theta);
        double r8 = atan(y/(-(z*r6) + x*r7));
        double r9 = cos(2*r8);
        double r10 = tan(theta);
        double r11 = sqrt(r2 + r1 + r3);
        double r12 = 1/tan(theta);
        double r13 = atan(y/x);
        double r14 = cos(2*r13);
        double r15 = sin(2*r13);
        double r16 = pow(z + r11,2);
        double r17 = pow(r12,2);
        double r18 = pow(-z + r11,2);
        double r19 = pow(1 - r7,2);
        double r20 = pow(1 + r7,2);
        double r21 = pow(z + r11,3);
        double r22 = pow(r10,2);
        double r23 = pow(r15,2);
        double r24 = pow(z + r11,4);
        double r25 = pow(-(z*r6) + x*r7,2);
        double r26 = pow(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)),2);
        double r27 = pow(1 - (1 - r7)/(1 + r7),2);
        double r28 = pow(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)),2);
        double r29 = pow(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)),2);
        double r30 = pow(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)),3);
        double r31 = pow(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)),3);
        double r32 = pow(1 + (r18*r19*r23)/(r16*r20*r29),2);
        double r33 = pow(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)),3);
        double r34 = pow(1 + (r1*r17*r27)/(r16*r26),2);
        double uyy=(burgers_vector.c[1]*(-(z*r6) + x*r7))/(2.*PI*(r1 + r25)) - (burgers_vector.c[1]*r9*(-(z*r6) + x*r7))/(4.*PI*(1 - nu)*(r1 + r25)) - (burgers_vector.c[1]*(2*(1 - nu)*r10*(r1/(r11*r16) - 1/(z + r11) + ((-((y*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*r26)) - (r1*r12*(1 - (1 - r7)/(1 + r7)))/(r11*r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r12*(1 - (1 - r7)/(1 + r7)))/((z + r11)*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/(1 + (r1*r17*r27)/(r16*r26))) - (1 - 2*nu)*(-(x*(-z + r11)*r14*(1 + r17)*r7*r27)/(2.*(r2 + r1)*(z + r11)*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*(-z + r11)*(1 + r17)*r7*r27*r15)/(4.*r11*r16*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*(1 + r17)*r7*r27*r15)/(4.*r11*(z + r11)*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + ((-z + r11)*(1 + r17)*r7*r27*r15*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*(z + r11)*r28) - ((-1 + nu)*((2*x*(-z + r11)*r14*(1 - r7))/((r2 + r1)*(z + r11)*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*(-z + r11)*(1 - r7)*r15)/(r11*r16*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*(1 - r7)*r15)/(r11*(z + r11)*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - ((-z + r11)*(1 - r7)*r15*((y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (2*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + r7)*r29))*r22)/(1 + (r18*r19*r23)/(r16*r20*r29))) - z*((x*(-z + r11)*r14*(1 + r17)*r7*r27*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7))))/(2.*(r2 + r1)*(z + r11)*r28) + (x*(1 + z/r11)*(-z + r11)*r14*(1 + r17)*r7*r27)/(2.*(r2 + r1)*r16*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (x*(-1 + z/r11)*r14*(1 + r17)*r7*r27)/(2.*(r2 + r1)*(z + r11)*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*(-z + r11)*(1 + r17)*r7*r27*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15)/(4.*r11*r16*r28) + (y*(1 + r17)*r7*r27*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15)/(4.*r11*(z + r11)*r28) - (y*(1 + z/r11)*(-z + r11)*(1 + r17)*r7*r27*r15)/(2.*r11*r21*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*(-1 + z/r11)*(1 + r17)*r7*r27*r15)/(4.*r11*r16*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*(1 + z/r11)*(1 + r17)*r7*r27*r15)/(4.*r11*r16*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*z*(-z + r11)*(1 + r17)*r7*r27*r15)/(4.*r4*r16*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*z*(1 + r17)*r7*r27*r15)/(4.*r4*(z + r11)*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + ((-z + r11)*(1 + r17)*r7*r27*r15*((6*y*(1 + z/r11)*r18*r19)/(r11*r24*r20) - (4*y*(-1 + z/r11)*(-z + r11)*r19)/(r11*r21*r20) - (4*y*(1 + z/r11)*(-z + r11)*r19)/(r11*r21*r20) + (2*y*z*r18*r19)/(r4*r21*r20) + (2*y*(-1 + z/r11)*r19)/(r11*r16*r20) - (2*y*z*(-z + r11)*r19)/(r4*r16*r20) - (4*y*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r11*r21*(1 + r7)) + (2*y*(-1 + z/r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) + (2*y*(1 + z/r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*z*(-z + r11)*r14*(1 - r7))/(r4*r16*(1 + r7)) + (2*y*z*r14*(1 - r7))/(r4*(z + r11)*(1 + r7)) - (4*x*(1 + z/r11)*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*r16*(1 + r7)) + (4*x*(-1 + z/r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*(z + r11)*r28) - ((-z + r11)*(1 + r17)*r7*r27*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(2.*(z + r11)*r30) - ((1 + z/r11)*(-z + r11)*(1 + r17)*r7*r27*r15*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*r16*r28) + ((-1 + z/r11)*(1 + r17)*r7*r27*r15*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*(z + r11)*r28) - ((-1 + nu)*((-2*x*(-z + r11)*r14*(1 - r7)*(((1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7))))/((r2 + r1)*(z + r11)*(1 + r7)*r29) - (2*x*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/((r2 + r1)*r16*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (2*x*(-1 + z/r11)*r14*(1 - r7))/((r2 + r1)*(z + r11)*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*(-z + r11)*(1 - r7)*(((1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15)/(r11*r16*(1 + r7)*r29) - (y*(1 - r7)*(((1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15)/(r11*(z + r11)*(1 + r7)*r29) + (2*y*(1 + z/r11)*(-z + r11)*(1 - r7)*r15)/(r11*r21*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*(-1 + z/r11)*(1 - r7)*r15)/(r11*r16*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*(1 + z/r11)*(1 - r7)*r15)/(r11*r16*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*z*(-z + r11)*(1 - r7)*r15)/(r4*r16*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (y*z*(1 - r7)*r15)/(r4*(z + r11)*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - ((-z + r11)*(1 - r7)*r15*((-2*y*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r11*r21*(1 + r7)) + (y*(-1 + z/r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) + (y*(1 + z/r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (y*z*(-z + r11)*r14*(1 - r7))/(r4*r16*(1 + r7)) + (y*z*r14*(1 - r7))/(r4*(z + r11)*(1 + r7)) - (2*x*(1 + z/r11)*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*r16*(1 + r7)) + (2*x*(-1 + z/r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + r7)*r29) + (2*(-z + r11)*(1 - r7)*(((1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15*((y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (2*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + r7)*r31) + ((1 + z/r11)*(-z + r11)*(1 - r7)*r15*((y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (2*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(r16*(1 + r7)*r29) - ((-1 + z/r11)*(1 - r7)*r15*((y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (2*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + r7)*r29))*r22)/(1 + (r18*r19*r23)/(r16*r20*r29)) + ((-1 + nu)*(-(((-z + r11)*(1 - r7)*(((1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*r15)/((z + r11)*(1 + r7)*r29)) - ((1 + z/r11)*(-z + r11)*(1 - r7)*r15)/(r16*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + ((-1 + z/r11)*(1 - r7)*r15)/((z + r11)*(1 + r7)*(1 - ((-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))))*((4*x*r18*r14*r19*r15)/((r2 + r1)*r16*r20*r29) - (2*y*r18*r19*r23)/(r11*r21*r20*r29) + (2*y*(-z + r11)*r19*r23)/(r11*r16*r20*r29) - (2*r18*r19*r23*((y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (2*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(r16*r20*r31))*r22)/r32) + r12*(z*((-1 + nu)*r22*((-2*r1*(1 + z/r11))/(r11*r21) - (r1*z)/(r4*r16) + (1 + z/r11)/r16 + (((2*y*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r33) - (y*r12*(1 - (1 - r7)/(1 + r7))*((-2*y*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r21*(1 + r7)) + (y*(-1 + z/r11)*(1 - r7))/(r11*r16*(1 + r7)) + (y*(1 + z/r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*z*(-z + r11)*(1 - r7))/(r4*r16*(1 + r7)) + (y*z*(1 - r7))/(r4*(z + r11)*(1 + r7))))/((z + r11)*r26) + (y*(1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r16*r26) + (r1*r12*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r16*r26) - (r12*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r26) + (2*r1*(1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7)))/(r11*r21*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r1*z*r12*(1 - (1 - r7)/(1 + r7)))/(r4*r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) - ((1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7)))/(r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/(1 + (r1*r17*r27)/(r16*r26)) - (((-2*r1*r17*r27*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r16*r33) - (2*r5*r17*r27)/(r11*r21*r26) + (2*y*r17*r27)/(r16*r26))*(-((y*r12*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r26)) - (y*(1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7)))/(r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/r34) - ((1 + r17)*r22*((y*r27*(-((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7))) + (y*(1 - r7))/(r11*(z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*r28) - (r1*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r16*(1 + (1 - r7)/(1 + r7))*r28) + (r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*r28) - (y*r27*((2*y*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r21*(1 + r7)) - (y*(-1 + z/r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 + z/r11)*(1 - r7))/(r11*r16*(1 + r7)) + (y*z*(-z + r11)*(1 - r7))/(r4*r16*(1 + r7)) - (y*z*(1 - r7))/(r4*(z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*(1 + z/r11)*r27*(-((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7))) + (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r16*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (r1*r27*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r16*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (r27*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (2*r1*(1 + z/r11)*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r21*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (r1*z*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r4*r16*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + ((1 + z/r11)*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r16*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((6*y*(1 + z/r11)*r18*r19)/(r11*r24*r20) - (4*y*(-1 + z/r11)*(-z + r11)*r19)/(r11*r21*r20) - (4*y*(1 + z/r11)*(-z + r11)*r19)/(r11*r21*r20) + (2*y*z*r18*r19)/(r4*r21*r20) + (2*y*(-1 + z/r11)*r19)/(r11*r16*r20) - (2*y*z*(-z + r11)*r19)/(r4*r16*r20) - (4*y*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r11*r21*(1 + r7)) + (2*y*(-1 + z/r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) + (2*y*(1 + z/r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*z*(-z + r11)*r14*(1 - r7))/(r4*r16*(1 + r7)) + (2*y*z*r14*(1 - r7))/(r4*(z + r11)*(1 + r7)) - (4*x*(1 + z/r11)*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*r16*(1 + r7)) + (4*x*(-1 + z/r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*r28) - (2*y*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r21*r20) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r16*r20) + (2*(1 + z/r11)*(-z + r11)*r14*(1 - r7))/(r16*(1 + r7)) - (2*(-1 + z/r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*r30) + (y*r27*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*r28) - (y*(1 + z/r11)*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/(r16*(1 + (1 - r7)/(1 + r7))*r28) + (((2*y*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r33) - (y*r12*(1 - (1 - r7)/(1 + r7))*((-2*y*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r21*(1 + r7)) + (y*(-1 + z/r11)*(1 - r7))/(r11*r16*(1 + r7)) + (y*(1 + z/r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*z*(-z + r11)*(1 - r7))/(r4*r16*(1 + r7)) + (y*z*(1 - r7))/(r4*(z + r11)*(1 + r7))))/((z + r11)*r26) + (y*(1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r16*r26) + (r1*r12*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r16*r26) - (r12*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r26) + (2*r1*(1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7)))/(r11*r21*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r1*z*r12*(1 - (1 - r7)/(1 + r7)))/(r4*r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) - ((1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7)))/(r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/(1 + (r1*r17*r27)/(r16*r26)) - (((-2*r1*r17*r27*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r16*r33) - (2*r5*r17*r27)/(r11*r21*r26) + (2*y*r17*r27)/(r16*r26))*(-((y*r12*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r16*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r26)) - (y*(1 + z/r11)*r12*(1 - (1 - r7)/(1 + r7)))/(r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/r34))/2.) + 2*(1 - nu)*((-1 + nu)*r22*(r1/(r11*r16) - 1/(z + r11) + ((-((y*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*r26)) - (r1*r12*(1 - (1 - r7)/(1 + r7)))/(r11*r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r12*(1 - (1 - r7)/(1 + r7)))/((z + r11)*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/(1 + (r1*r17*r27)/(r16*r26))) - ((1 + r17)*r22*(-((y*r27*(-((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7))) + (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7))))) + (r1*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r16*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) - (r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*(1 + (r18*r19)/(r16*r20) - (2*(-z + r11)*r14*(1 - r7))/((z + r11)*(1 + r7)))) + (y*r27*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*y*r18*r19)/(r11*r21*r20) + (2*y*(-z + r11)*r19)/(r11*r16*r20) + (2*y*(-z + r11)*r14*(1 - r7))/(r11*r16*(1 + r7)) - (2*y*r14*(1 - r7))/(r11*(z + r11)*(1 + r7)) + (4*x*(-z + r11)*(1 - r7)*r15)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*(1 + (1 - r7)/(1 + r7))*r28) + ((-((y*r12*(1 - (1 - r7)/(1 + r7))*((y*(-z + r11)*(1 - r7))/(r11*r16*(1 + r7)) - (y*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*r26)) - (r1*r12*(1 - (1 - r7)/(1 + r7)))/(r11*r16*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r12*(1 - (1 - r7)/(1 + r7)))/((z + r11)*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r10)/(1 + (r1*r17*r27)/(r16*r26))))/2.))))/(2.*PI*(1 - nu));
        return uyy;
    }
    double uyzcalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = cos(theta);
        double r6 = sin(theta);
        double r7 = atan(y/(-(z*r5) + x*r6));
        double r8 = cos(2*r7);
        double r9 = sqrt(r2 + r1 + r3);
        double r10 = 1/tan(theta);
        double r11 = atan(y/x);
        double r12 = cos(2*r11);
        double r13 = sin(2*r11);
        double r14 = tan(theta);
        double r15 = pow(r10,2);
        double r16 = pow(-z + r9,2);
        double r17 = pow(1 - r6,2);
        double r18 = pow(z + r9,3);
        double r19 = pow(1 + r6,2);
        double r20 = pow(z + r9,2);
        double r21 = pow(r14,2);
        double r22 = pow(r13,2);
        double r23 = pow(z + r9,4);
        double r24 = pow(-(z*r5) + x*r6,2);
        double r25 = pow(1 - (1 - r6)/(1 + r6),2);
        double r26 = pow(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)),2);
        double r27 = pow(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)),2);
        double r28 = pow(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)),2);
        double r29 = pow((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)),2);
        double r30 = pow(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)),3);
        double r31 = pow(1 + z/r9,2);
        double r32 = pow(-1 + z/r9,2);
        double r33 = pow(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)),3);
        double r34 = pow(1 + (r16*r17*r22)/(r20*r19*r27),2);
        double r35 = pow(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)),2);
        double r36 = pow(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6)),2);
        double r37 = pow(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)),3);
        double r38 = pow(1 + (r1*r15*r25)/(r20*r28),2);
        double uyz=(burgers_vector.c[1]*y*r5)/(2.*PI*(r1 + r24)) - (burgers_vector.c[1]*y*r5*r8)/(4.*PI*(1 - nu)*(r1 + r24)) - (burgers_vector.c[1]*(-((-z + r9)*(1 + r15)*r6*r25*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/(4.*(z + r9)*r26) - ((1 + z/r9)*(-z + r9)*(1 + r15)*r6*r25*r13)/(4.*r20*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + z/r9)*(1 + r15)*r6*r25*r13)/(4.*(z + r9)*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + nu)*(-(((-z + r9)*(1 - r6)*(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/((z + r9)*(1 + r6)*r27)) - ((1 + z/r9)*(-z + r9)*(1 - r6)*r13)/(r20*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + z/r9)*(1 - r6)*r13)/((z + r9)*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))))*r21)/(1 + (r16*r17*r22)/(r20*r19*r27)) + 2*(1 - nu)*r14*((y*(1 + z/r9))/r20 + ((-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28))) - z*(-((-z + r9)*(1 + r15)*r6*r25*r29*r13)/(2.*(z + r9)*r30) + ((-z + r9)*(1 + r15)*r6*r25*((6*r31*r16*r17)/(r23*r19) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r17)/(r18*r19) - (2*(-(r3/r4) + 1/r9)*r16*r17)/(r18*r19) + (2*r32*r17)/(r20*r19) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r17)/(r20*r19) - (4*r31*(-z + r9)*r12*(1 - r6))/(r18*(1 + r6)) + (4*(-1 + z/r9)*(1 + z/r9)*r12*(1 - r6))/(r20*(1 + r6)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-(r3/r4) + 1/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/(4.*(z + r9)*r26) - ((1 + z/r9)*(-z + r9)*(1 + r15)*r6*r25*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/(2.*r20*r26) + ((-1 + z/r9)*(1 + r15)*r6*r25*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/(2.*(z + r9)*r26) - (r31*(-z + r9)*(1 + r15)*r6*r25*r13)/(2.*r18*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + z/r9)*(1 + z/r9)*(1 + r15)*r6*r25*r13)/(2.*r20*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-(r3/r4) + 1/r9)*(-z + r9)*(1 + r15)*r6*r25*r13)/(4.*r20*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) - ((-(r3/r4) + 1/r9)*(1 + r15)*r6*r25*r13)/(4.*(z + r9)*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + nu)*(-(((-z + r9)*(1 - r6)*(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/((z + r9)*(1 + r6)*r27)) - ((1 + z/r9)*(-z + r9)*(1 - r6)*r13)/(r20*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + z/r9)*(1 - r6)*r13)/((z + r9)*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))))*((-2*r16*r17*(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r22)/(r20*r19*r33) - (2*(1 + z/r9)*r16*r17*r22)/(r18*r19*r27) + (2*(-1 + z/r9)*(-z + r9)*r17*r22)/(r20*r19*r27))*r21)/r34 - ((-1 + nu)*((2*(-z + r9)*(1 - r6)*r35*r13)/((z + r9)*(1 + r6)*r33) - ((-z + r9)*(1 - r6)*((-2*r31*(-z + r9)*r12*(1 - r6))/(r18*(1 + r6)) + (2*(-1 + z/r9)*(1 + z/r9)*r12*(1 - r6))/(r20*(1 + r6)) + ((-(r3/r4) + 1/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-(r3/r4) + 1/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/((z + r9)*(1 + r6)*r27) + (2*(1 + z/r9)*(-z + r9)*(1 - r6)*(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/(r20*(1 + r6)*r27) - (2*(-1 + z/r9)*(1 - r6)*(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/((z + r9)*(1 + r6)*r27) + (2*r31*(-z + r9)*(1 - r6)*r13)/(r18*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r6)*r13)/(r20*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r6)*r13)/(r20*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-(r3/r4) + 1/r9)*(1 - r6)*r13)/((z + r9)*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))))*r21)/(1 + (r16*r17*r22)/(r20*r19*r27))) - (1 - 2*nu)*(((-z + r9)*(1 + r15)*r6*r25*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/(4.*(z + r9)*r26) + ((1 + z/r9)*(-z + r9)*(1 + r15)*r6*r25*r13)/(4.*r20*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) - ((-1 + z/r9)*(1 + r15)*r6*r25*r13)/(4.*(z + r9)*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) - ((-1 + nu)*(-(((-z + r9)*(1 - r6)*(((1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))*r13)/((z + r9)*(1 + r6)*r27)) - ((1 + z/r9)*(-z + r9)*(1 - r6)*r13)/(r20*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-1 + z/r9)*(1 - r6)*r13)/((z + r9)*(1 + r6)*(1 - ((-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))))*r21)/(1 + (r16*r17*r22)/(r20*r19*r27))) + r10*((-1 + nu)*r21*((y*(1 + z/r9))/r20 + ((-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28))) - ((1 + r15)*r21*((y*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*r26) - (y*r25*(-(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6))) + ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + (y*(1 + z/r9)*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28))))/2. + z*((-1 + nu)*r21*((-2*y*r31)/r18 + (y*(-(r3/r4) + 1/r9))/r20 + (((2*y*r10*(1 - (1 - r6)/(1 + r6))*r36)/((z + r9)*r37) - (y*r10*(1 - (1 - r6)/(1 + r6))*((-2*r31*(-z + r9)*(1 - r6))/(r18*(1 + r6)) + (2*(-1 + z/r9)*(1 + z/r9)*(1 - r6))/(r20*(1 + r6)) + ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-(r3/r4) + 1/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28) + (2*y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*r28) + (2*y*r31*r10*(1 - (1 - r6)/(1 + r6)))/(r18*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))) - (y*(-(r3/r4) + 1/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28)) - (((-2*r1*r15*r25*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*r37) - (2*r1*(1 + z/r9)*r15*r25)/(r18*r28))*(-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/r38) - ((1 + r15)*r21*((-2*y*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))*r29)/((z + r9)*(1 + (1 - r6)/(1 + r6))*r30) + (y*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))*((6*r31*r16*r17)/(r23*r19) - (8*(-1 + z/r9)*(1 + z/r9)*(-z + r9)*r17)/(r18*r19) - (2*(-(r3/r4) + 1/r9)*r16*r17)/(r18*r19) + (2*r32*r17)/(r20*r19) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r17)/(r20*r19) - (4*r31*(-z + r9)*r12*(1 - r6))/(r18*(1 + r6)) + (4*(-1 + z/r9)*(1 + z/r9)*r12*(1 - r6))/(r20*(1 + r6)) + (2*(-(r3/r4) + 1/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-(r3/r4) + 1/r9)*r12*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*r26) + (2*y*r25*(-(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6))) + ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6)))*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*r26) - (2*y*(1 + z/r9)*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6))))/(r20*(1 + (1 - r6)/(1 + r6))*r26) - (y*r25*((2*r31*(-z + r9)*(1 - r6))/(r18*(1 + r6)) - (2*(-1 + z/r9)*(1 + z/r9)*(1 - r6))/(r20*(1 + r6)) - ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) + ((-(r3/r4) + 1/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + (2*y*(1 + z/r9)*r25*(-(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6))) + ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) - (2*y*r31*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r18*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + (y*(-(r3/r4) + 1/r9)*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + (((2*y*r10*(1 - (1 - r6)/(1 + r6))*r36)/((z + r9)*r37) - (y*r10*(1 - (1 - r6)/(1 + r6))*((-2*r31*(-z + r9)*(1 - r6))/(r18*(1 + r6)) + (2*(-1 + z/r9)*(1 + z/r9)*(1 - r6))/(r20*(1 + r6)) + ((-(r3/r4) + 1/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-(r3/r4) + 1/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28) + (2*y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*r28) + (2*y*r31*r10*(1 - (1 - r6)/(1 + r6)))/(r18*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))) - (y*(-(r3/r4) + 1/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28)) - (((-2*r1*r15*r25*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*r37) - (2*r1*(1 + z/r9)*r15*r25)/(r18*r28))*(-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/r38))/2.) + 2*(1 - nu)*((-1 + nu)*r21*((y*(1 + z/r9))/r20 + ((-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28))) - ((1 + r15)*r21*((y*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))*((-2*(1 + z/r9)*r16*r17)/(r18*r19) + (2*(-1 + z/r9)*(-z + r9)*r17)/(r20*r19) + (2*(1 + z/r9)*(-z + r9)*r12*(1 - r6))/(r20*(1 + r6)) - (2*(-1 + z/r9)*r12*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*r26) - (y*r25*(-(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6))) + ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + (y*(1 + z/r9)*r25*(1 + ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6))))/(r20*(1 + (1 - r6)/(1 + r6))*(1 + (r16*r17)/(r20*r19) - (2*(-z + r9)*r12*(1 - r6))/((z + r9)*(1 + r6)))) + ((-((y*r10*(1 - (1 - r6)/(1 + r6))*(((1 + z/r9)*(-z + r9)*(1 - r6))/(r20*(1 + r6)) - ((-1 + z/r9)*(1 - r6))/((z + r9)*(1 + r6))))/((z + r9)*r28)) - (y*(1 + z/r9)*r10*(1 - (1 - r6)/(1 + r6)))/(r20*(1 - ((-z + r9)*(1 - r6))/((z + r9)*(1 + r6)))))*r14)/(1 + (r1*r15*r25)/(r20*r28))))/2.))))/(2.*PI*(1 - nu));
        return uyz;
    }
    double uzxcalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = pow(x,3);
        double r6 = cos(theta);
        double r7 = sin(theta);
        double r8 = atan(y/(-(z*r6) + x*r7));
        double r9 = sin(2*r8);
        double r10 = 1/tan(theta);
        double r11 = sqrt(r2 + r1 + r3);
        double r12 = atan(y/x);
        double r13 = cos(2*r12);
        double r14 = sin(2*r12);
        double r15 = 1/cos(theta);
        double r16 = tan(theta);
        double r17 = pow(z + r11,2);
        double r18 = pow(-z + r11,2);
        double r19 = pow(1 - r7,2);
        double r20 = pow(z + r11,4);
        double r21 = pow(1 + r7,2);
        double r22 = pow(z + r11,3);
        double r23 = pow(r10,2);
        double r24 = pow(r7,3);
        double r25 = pow(r15,2);
        double r26 = pow(r6,2);
        double r27 = pow(r7,2);
        double r28 = pow(-(z*r6) + x*r7,2);
        double r29 = pow(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)),2);
        double r30 = pow(1 - (1 - r7)/(1 + r7),2);
        double r31 = pow(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)),3);
        double r32 = pow(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)),3);
        double r33 = pow(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)),2);
        double r34 = pow(1 + (1 - r7)/(1 + r7),2);
        double r35 = pow(1 - (r2*r26*r34)/(r17*r33),2);
        double uzx=-(r6*((burgers_vector.c[1]*(1 - 2*nu)*r7*(-(z*r6) + x*r7))/(4.*PI*(1 - nu)*(r1 + r28)) - (burgers_vector.c[1]*y*r7*r9)/(4.*PI*(1 - nu)*(r1 + r28)))) + (burgers_vector.c[1]*(r10*(-(z*(((-1 + nu)*r7*(1 - (1 - r7)/(1 + r7))*(-((x*(1 + z/r11))/(r11*r17)) - (x*z)/(r4*(z + r11)) - ((1 + r7)*(1 - (1 - r7)/(1 + r7))*((6*x*(1 + z/r11)*r18*r19)/(r11*r20*r21) - (4*x*(-1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) - (4*x*(1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r11)*r19)/(r11*r17*r21) - (2*x*z*(-z + r11)*r19)/(r4*r17*r21) - (4*x*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r11*r22*(1 + r7)) + (2*x*(-1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) + (2*x*(1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*z*(-z + r11)*r13*(1 - r7))/(r4*r17*(1 + r7)) + (2*x*z*r13*(1 - r7))/(r4*(z + r11)*(1 + r7)) + (4*y*(1 + z/r11)*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*r17*(1 + r7)) - (4*y*(-1 + z/r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*(1 - r7)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + ((1 + r7)*(1 - (1 - r7)/(1 + r7))*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*(1 - r7)*r29)))/2. + ((1 + r23)*r24*(-((x*(1 + z/r11))/(r11*r17)) - (x*z)/(r4*(z + r11)) + ((6*x*(1 + z/r11)*r18*r19)/(r11*r20*r21) - (4*x*(-1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) - (4*x*(1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r11)*r19)/(r11*r17*r21) - (2*x*z*(-z + r11)*r19)/(r4*r17*r21) - (4*x*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r11*r22*(1 + r7)) + (2*x*(-1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) + (2*x*(1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*z*(-z + r11)*r13*(1 - r7))/(r4*r17*(1 + r7)) + (2*x*z*r13*(1 - r7))/(r4*(z + r11)*(1 + r7)) + (4*y*(1 + z/r11)*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*r17*(1 + r7)) - (4*y*(-1 + z/r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7)))/(2.*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + (r25*r30*(-(((1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) + (1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))/r30)*((6*x*(1 + z/r11)*r18*r19)/(r11*r20*r21) - (4*x*(-1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) - (4*x*(1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r11)*r19)/(r11*r17*r21) - (2*x*z*(-z + r11)*r19)/(r4*r17*r21) - (4*x*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r11*r22*(1 + r7)) + (2*x*(-1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) + (2*x*(1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*z*(-z + r11)*r13*(1 - r7))/(r4*r17*(1 + r7)) + (2*x*z*r13*(1 - r7))/(r4*(z + r11)*(1 + r7)) + (4*y*(1 + z/r11)*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*r17*(1 + r7)) - (4*y*(-1 + z/r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/r29 - (((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/(2.*r29) + (r25*r30*(-(((-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7)))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) - ((((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7))) + ((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))/r30)*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/r29 - (2*r25*r30*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))*(-(((1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) + (1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))/r30)*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/r31 - (r25*r30*(-(((-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) - (((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7))) - (((2*x*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r22*(1 + r7)) - (x*(-1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) + (x*z*(-z + r11)*(1 - r7))/(r4*r17*(1 + r7)) - (x*z*(1 - r7))/(r4*(z + r11)*(1 + r7)))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7))) - (((-2*x*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r22*(1 + r7)) + (x*(-1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) + (x*(1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*z*(-z + r11)*(1 - r7))/(r4*r17*(1 + r7)) + (x*z*(1 - r7))/(r4*(z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7))) + ((6*x*(1 + z/r11)*r18*r19)/(r11*r20*r21) - (4*x*(-1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) - (4*x*(1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r11)*r19)/(r11*r17*r21) - (2*x*z*(-z + r11)*r19)/(r4*r17*r21) - (4*x*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r11*r22*(1 + r7)) + (2*x*(-1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) + (2*x*(1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*z*(-z + r11)*r13*(1 - r7))/(r4*r17*(1 + r7)) + (2*x*z*r13*(1 - r7))/(r4*(z + r11)*(1 + r7)) + (4*y*(1 + z/r11)*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*r17*(1 + r7)) - (4*y*(-1 + z/r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7)))/r30))/(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7))) + (r25*r30*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))*(-(((-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) - (((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7))) + ((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7)))/r30))/r29))/2.)) + (1 - 2*nu)*(((-1 + nu)*r7*(1 - (1 - r7)/(1 + r7))*(x/(r11*(z + r11)) - ((1 + r7)*(1 - (1 - r7)/(1 + r7))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/(4.*(1 - r7)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7))))))/2. + ((1 + r23)*r24*(x/(r11*(z + r11)) + ((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7)))/(2.*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + (r25*r30*(-(((1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) + (1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))/r30)*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/r29 - (r25*r30*(-(((-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7)))) - (((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((1 - (1 - r7)/(1 + r7))*(1 + (1 - r7)/(1 + r7))) + ((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7)))/r30))/(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))))/2.)) - z*(((-1 + nu)*r7*((2*x*r6*(1 + (1 - r7)/(1 + r7))*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r32) - (x*r6*(1 + (1 - r7)/(1 + r7))*((2*x*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r22*(1 + r7)) - (x*(-1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) + (x*z*(-z + r11)*(1 - r7))/(r4*r17*(1 + r7)) - (x*z*(1 - r7))/(r4*(z + r11)*(1 + r7))))/((z + r11)*r33) + (x*(1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7))*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r17*r33) + (r2*r6*(1 + (1 - r7)/(1 + r7))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r17*r33) - (r6*(1 + (1 - r7)/(1 + r7))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r33) + (2*r2*(1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7)))/(r11*r22*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r2*z*r6*(1 + (1 - r7)/(1 + r7)))/(r4*r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) - ((1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7)))/(r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) - ((-1 + nu)*r7*((2*r2*r26*r34*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r17*r32) + (2*r5*r26*r34)/(r11*r22*r33) - (2*x*r26*r34)/(r17*r33))*(-((x*r6*(1 + (1 - r7)/(1 + r7))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r33)) - (x*(1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7)))/(r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r16)/r35 + ((1 + r23)*r27*(-((x*(1 - (1 - r7)/(1 + r7))*((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r29)) + (r2*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r17*r29) - ((1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r29) + (x*(1 - (1 - r7)/(1 + r7))*((-2*x*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r22*(1 + r7)) + (x*(-1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) + (x*(1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*z*(-z + r11)*(1 - r7))/(r4*r17*(1 + r7)) + (x*z*(1 - r7))/(r4*(z + r11)*(1 + r7))))/((z + r11)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) - (x*(1 + z/r11)*(1 - (1 - r7)/(1 + r7))*((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) - (r2*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + ((1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + (2*r2*(1 + z/r11)*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r22*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + (r2*z*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r4*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) - ((1 + z/r11)*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) - (x*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((6*x*(1 + z/r11)*r18*r19)/(r11*r20*r21) - (4*x*(-1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) - (4*x*(1 + z/r11)*(-z + r11)*r19)/(r11*r22*r21) + (2*x*z*r18*r19)/(r4*r22*r21) + (2*x*(-1 + z/r11)*r19)/(r11*r17*r21) - (2*x*z*(-z + r11)*r19)/(r4*r17*r21) - (4*x*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r11*r22*(1 + r7)) + (2*x*(-1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) + (2*x*(1 + z/r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*z*(-z + r11)*r13*(1 - r7))/(r4*r17*(1 + r7)) + (2*x*z*r13*(1 - r7))/(r4*(z + r11)*(1 + r7)) + (4*y*(1 + z/r11)*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*r17*(1 + r7)) - (4*y*(-1 + z/r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*r29) + (2*x*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*(1 + z/r11)*r18*r19)/(r22*r21) + (2*(-1 + z/r11)*(-z + r11)*r19)/(r17*r21) + (2*(1 + z/r11)*(-z + r11)*r13*(1 - r7))/(r17*(1 + r7)) - (2*(-1 + z/r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*r31) - (x*(1 - (1 - r7)/(1 + r7))*(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7)) - ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*r29) + (x*(1 + z/r11)*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/(r17*r29) + (r7*((2*x*r6*(1 + (1 - r7)/(1 + r7))*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7)))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r32) - (x*r6*(1 + (1 - r7)/(1 + r7))*((2*x*(1 + z/r11)*(-z + r11)*(1 - r7))/(r11*r22*(1 + r7)) - (x*(-1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 + z/r11)*(1 - r7))/(r11*r17*(1 + r7)) + (x*z*(-z + r11)*(1 - r7))/(r4*r17*(1 + r7)) - (x*z*(1 - r7))/(r4*(z + r11)*(1 + r7))))/((z + r11)*r33) + (x*(1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7))*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r17*r33) + (r2*r6*(1 + (1 - r7)/(1 + r7))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r17*r33) - (r6*(1 + (1 - r7)/(1 + r7))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r33) + (2*r2*(1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7)))/(r11*r22*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r2*z*r6*(1 + (1 - r7)/(1 + r7)))/(r4*r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) - ((1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7)))/(r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) - (r7*((2*r2*r26*r34*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/(r17*r32) + (2*r5*r26*r34)/(r11*r22*r33) - (2*x*r26*r34)/(r17*r33))*(-((x*r6*(1 + (1 - r7)/(1 + r7))*(-(((1 + z/r11)*(-z + r11)*(1 - r7))/(r17*(1 + r7))) + ((-1 + z/r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*r33)) - (x*(1 + z/r11)*r6*(1 + (1 - r7)/(1 + r7)))/(r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r16)/r35))/2.) + 2*(1 - nu)*(((-1 + nu)*r7*(-((x*r6*(1 + (1 - r7)/(1 + r7))*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*r33)) - (r2*r6*(1 + (1 - r7)/(1 + r7)))/(r11*r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r6*(1 + (1 - r7)/(1 + r7)))/((z + r11)*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r16)/(1 - (r2*r26*r34)/(r17*r33)) + ((1 + r23)*r27*((x*(1 - (1 - r7)/(1 + r7))*((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7)) - (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) - (r2*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/(r11*r17*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) + ((1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7))))/((z + r11)*(1 + (r18*r19)/(r17*r21) - (2*(-z + r11)*r13*(1 - r7))/((z + r11)*(1 + r7)))) - (x*(1 - (1 - r7)/(1 + r7))*(1 - ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))*((-2*x*r18*r19)/(r11*r22*r21) + (2*x*(-z + r11)*r19)/(r11*r17*r21) + (2*x*(-z + r11)*r13*(1 - r7))/(r11*r17*(1 + r7)) - (2*x*r13*(1 - r7))/(r11*(z + r11)*(1 + r7)) - (4*y*(-z + r11)*(1 - r7)*r14)/((r2 + r1)*(z + r11)*(1 + r7))))/((z + r11)*r29) + (r7*(-((x*r6*(1 + (1 - r7)/(1 + r7))*(-((x*(-z + r11)*(1 - r7))/(r11*r17*(1 + r7))) + (x*(1 - r7))/(r11*(z + r11)*(1 + r7))))/((z + r11)*r33)) - (r2*r6*(1 + (1 - r7)/(1 + r7)))/(r11*r17*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))) + (r6*(1 + (1 - r7)/(1 + r7)))/((z + r11)*(1 + ((-z + r11)*(1 - r7))/((z + r11)*(1 + r7)))))*r16)/(1 - (r2*r26*r34)/(r17*r33))))/2.)))/(2.*PI*(1 - nu));
        return uzx;
    }
    double uzycalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = cos(theta);
        double r6 = sin(theta);
        double r7 = atan(y/(-(z*r5) + x*r6));
        double r8 = sin(2*r7);
        double r9 = 1/tan(theta);
        double r10 = sqrt(r2 + r1 + r3);
        double r11 = atan(y/x);
        double r12 = cos(2*r11);
        double r13 = sin(2*r11);
        double r14 = 1/cos(theta);
        double r15 = tan(theta);
        double r16 = pow(z + r10,2);
        double r17 = pow(-z + r10,2);
        double r18 = pow(1 - r6,2);
        double r19 = pow(z + r10,4);
        double r20 = pow(1 + r6,2);
        double r21 = pow(z + r10,3);
        double r22 = pow(r9,2);
        double r23 = pow(r6,3);
        double r24 = pow(r14,2);
        double r25 = pow(r5,2);
        double r26 = pow(r6,2);
        double r27 = pow(-(z*r5) + x*r6,2);
        double r28 = pow(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r29 = pow(1 - (1 - r6)/(1 + r6),2);
        double r30 = pow(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),3);
        double r31 = pow(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r32 = pow(1 + (1 - r6)/(1 + r6),2);
        double r33 = pow(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)),3);
        double r34 = pow(1 - (r2*r25*r32)/(r16*r31),2);
        double uzy=-(r5*((burgers_vector.c[1]*(1 - 2*nu)*y)/(4.*PI*(1 - nu)*(r1 + r27)) + (burgers_vector.c[1]*(-(z*r5) + x*r6)*r8)/(4.*PI*(1 - nu)*(r1 + r27)))) + (burgers_vector.c[1]*(r9*(-(z*(((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*(-((y*(1 + z/r10))/(r10*r16)) - (y*z)/(r4*(z + r10)) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((6*y*(1 + z/r10)*r17*r18)/(r10*r19*r20) - (4*y*(-1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) - (4*y*(1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r10)*r18)/(r10*r16*r20) - (2*y*z*(-z + r10)*r18)/(r4*r16*r20) - (4*y*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r21*(1 + r6)) + (2*y*(-1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) + (2*y*(1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*z*(-z + r10)*r12*(1 - r6))/(r4*r16*(1 + r6)) + (2*y*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) - (4*x*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r16*(1 + r6)) + (4*x*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(4.*(1 - r6)*r28)))/2. + ((1 + r22)*r23*(-((y*(1 + z/r10))/(r10*r16)) - (y*z)/(r4*(z + r10)) + ((6*y*(1 + z/r10)*r17*r18)/(r10*r19*r20) - (4*y*(-1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) - (4*y*(1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r10)*r18)/(r10*r16*r20) - (2*y*z*(-z + r10)*r18)/(r4*r16*r20) - (4*y*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r21*(1 + r6)) + (2*y*(-1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) + (2*y*(1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*z*(-z + r10)*r12*(1 - r6))/(r4*r16*(1 + r6)) + (2*y*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) - (4*x*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r16*(1 + r6)) + (4*x*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/(2.*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r24*r29*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r29)*((6*y*(1 + z/r10)*r17*r18)/(r10*r19*r20) - (4*y*(-1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) - (4*y*(1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r10)*r18)/(r10*r16*r20) - (2*y*z*(-z + r10)*r18)/(r4*r16*r20) - (4*y*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r21*(1 + r6)) + (2*y*(-1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) + (2*y*(1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*z*(-z + r10)*r12*(1 - r6))/(r4*r16*(1 + r6)) + (2*y*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) - (4*x*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r16*(1 + r6)) + (4*x*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r28 - (((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(2.*r28) + (r24*r29*(-(((-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - ((((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r29)*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r28 - (2*r24*r29*((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r29)*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r30 - (r24*r29*(-(((-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - (((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) - (((2*y*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r21*(1 + r6)) - (y*(-1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) + (y*z*(-z + r10)*(1 - r6))/(r4*r16*(1 + r6)) - (y*z*(1 - r6))/(r4*(z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) - (((-2*y*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r21*(1 + r6)) + (y*(-1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) + (y*(1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*z*(-z + r10)*(1 - r6))/(r4*r16*(1 + r6)) + (y*z*(1 - r6))/(r4*(z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((6*y*(1 + z/r10)*r17*r18)/(r10*r19*r20) - (4*y*(-1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) - (4*y*(1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r10)*r18)/(r10*r16*r20) - (2*y*z*(-z + r10)*r18)/(r4*r16*r20) - (4*y*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r21*(1 + r6)) + (2*y*(-1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) + (2*y*(1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*z*(-z + r10)*r12*(1 - r6))/(r4*r16*(1 + r6)) + (2*y*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) - (4*x*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r16*(1 + r6)) + (4*x*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/r29))/(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))) + (r24*r29*((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - (((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/r29))/r28))/2.)) + (1 - 2*nu)*(((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*(y/(r10*(z + r10)) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))))/2. + ((1 + r22)*r23*(y/(r10*(z + r10)) + ((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/(2.*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r24*r29*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r29)*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/r28 - (r24*r29*(-(((-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - (((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6)))/r29))/(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))))/2.)) + 2*(1 - nu)*(((-1 + nu)*r6*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r31)) - (x*y*r5*(1 + (1 - r6)/(1 + r6)))/(r10*r16*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r15)/(1 - (r2*r25*r32)/(r16*r31)) + ((1 + r22)*r26*((x*(1 - (1 - r6)/(1 + r6))*((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*y*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r28) + (r6*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/((z + r10)*r31)) - (x*y*r5*(1 + (1 - r6)/(1 + r6)))/(r10*r16*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r15)/(1 - (r2*r25*r32)/(r16*r31))))/2.) - z*(((-1 + nu)*r6*((2*x*r5*(1 + (1 - r6)/(1 + r6))*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) - (x*r5*(1 + (1 - r6)/(1 + r6))*((2*y*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r21*(1 + r6)) - (y*(-1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) + (y*z*(-z + r10)*(1 - r6))/(r4*r16*(1 + r6)) - (y*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*r31) + (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6))*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r16*r31) + (x*y*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r16*r31) + (2*x*y*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r10*r21*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (x*y*z*r5*(1 + (1 - r6)/(1 + r6)))/(r4*r16*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r15)/(1 - (r2*r25*r32)/(r16*r31)) - ((-1 + nu)*r6*((2*r2*r25*r32*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r16*r33) + (2*r2*y*r25*r32)/(r10*r21*r31))*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r31)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r16*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r15)/r34 + ((1 + r22)*r26*(-((x*(1 - (1 - r6)/(1 + r6))*((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r28)) + (x*y*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r16*r28) + (x*(1 - (1 - r6)/(1 + r6))*((-2*y*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r21*(1 + r6)) + (y*(-1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) + (y*(1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*z*(-z + r10)*(1 - r6))/(r4*r16*(1 + r6)) + (y*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*y*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (2*x*y*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r21*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (x*y*z*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r4*r16*(1 + (r17*r18)/(r16*r20) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((6*y*(1 + z/r10)*r17*r18)/(r10*r19*r20) - (4*y*(-1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) - (4*y*(1 + z/r10)*(-z + r10)*r18)/(r10*r21*r20) + (2*y*z*r17*r18)/(r4*r21*r20) + (2*y*(-1 + z/r10)*r18)/(r10*r16*r20) - (2*y*z*(-z + r10)*r18)/(r4*r16*r20) - (4*y*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r10*r21*(1 + r6)) + (2*y*(-1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) + (2*y*(1 + z/r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*z*(-z + r10)*r12*(1 - r6))/(r4*r16*(1 + r6)) + (2*y*z*r12*(1 - r6))/(r4*(z + r10)*(1 + r6)) - (4*x*(1 + z/r10)*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*r16*(1 + r6)) + (4*x*(-1 + z/r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r28) + (2*x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r17*r18)/(r21*r20) + (2*(-1 + z/r10)*(-z + r10)*r18)/(r16*r20) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r16*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r30) - (x*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/((z + r10)*r28) + (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*y*r17*r18)/(r10*r21*r20) + (2*y*(-z + r10)*r18)/(r10*r16*r20) + (2*y*(-z + r10)*r12*(1 - r6))/(r10*r16*(1 + r6)) - (2*y*r12*(1 - r6))/(r10*(z + r10)*(1 + r6)) + (4*x*(-z + r10)*(1 - r6)*r13)/((r2 + r1)*(z + r10)*(1 + r6))))/(r16*r28) + (r6*((2*x*r5*(1 + (1 - r6)/(1 + r6))*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) - (x*r5*(1 + (1 - r6)/(1 + r6))*((2*y*(1 + z/r10)*(-z + r10)*(1 - r6))/(r10*r21*(1 + r6)) - (y*(-1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) - (y*(1 + z/r10)*(1 - r6))/(r10*r16*(1 + r6)) + (y*z*(-z + r10)*(1 - r6))/(r4*r16*(1 + r6)) - (y*z*(1 - r6))/(r4*(z + r10)*(1 + r6))))/((z + r10)*r31) + (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6))*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r16*r31) + (x*y*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r10*r16*r31) + (2*x*y*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r10*r21*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) + (x*y*z*r5*(1 + (1 - r6)/(1 + r6)))/(r4*r16*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r15)/(1 - (r2*r25*r32)/(r16*r31)) - (r6*((2*r2*r25*r32*(-((y*(-z + r10)*(1 - r6))/(r10*r16*(1 + r6))) + (y*(1 - r6))/(r10*(z + r10)*(1 + r6))))/(r16*r33) + (2*r2*y*r25*r32)/(r10*r21*r31))*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r16*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r31)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r16*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r15)/r34))/2.)))/(2.*PI*(1 - nu));
        return uzy;
    }
    double uzzcalc(double x, double y, double z){
        parallel_shift->Basis(x, y, z);
        x=parallel_shift->xc;
        y=parallel_shift->yc;
        z=parallel_shift->zc;
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = cos(theta);
        double r6 = sin(theta);
        double r7 = atan(y/(-(z*r5) + x*r6));
        double r8 = sin(2*r7);
        double r9 = 1/tan(theta);
        double r10 = sqrt(r2 + r1 + r3);
        double r11 = atan(y/x);
        double r12 = cos(2*r11);
        double r13 = 1/cos(theta);
        double r14 = tan(theta);
        double r15 = pow(-z + r10,2);
        double r16 = pow(1 - r6,2);
        double r17 = pow(z + r10,3);
        double r18 = pow(1 + r6,2);
        double r19 = pow(z + r10,2);
        double r20 = pow(r9,2);
        double r21 = pow(r6,3);
        double r22 = pow(r13,2);
        double r23 = pow(z + r10,4);
        double r24 = pow(r5,2);
        double r25 = pow(r6,2);
        double r26 = pow(-(z*r5) + x*r6,2);
        double r27 = pow(1 - (1 - r6)/(1 + r6),2);
        double r28 = pow(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r29 = pow(1 + z/r10,2);
        double r30 = pow((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r31 = pow(-1 + z/r10,2);
        double r32 = pow(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)),3);
        double r33 = pow(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r34 = pow(1 + (1 - r6)/(1 + r6),2);
        double r35 = pow(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)),2);
        double r36 = pow(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)),3);
        double r37 = pow(1 - (r2*r24*r34)/(r19*r33),2);
        double uzz=-(r5*(-(burgers_vector.c[1]*(1 - 2*nu)*r5*(-(z*r5) + x*r6))/(4.*PI*(1 - nu)*(r1 + r26)) + (burgers_vector.c[1]*y*r5*r8)/(4.*PI*(1 - nu)*(r1 + r26)))) + (burgers_vector.c[1]*(r9*(-((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*((1 + z/r10)/(z + r10) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))))/2. - ((1 + r20)*r21*((1 + z/r10)/(z + r10) + ((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/(2.*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (r22*r27*(-(((-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - ((((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))) + (r22*r27*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/r28))/2. - z*(((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*(-(r29/r19) + (-(r3/r4) + 1/r10)/(z + r10) + ((1 + r6)*(1 - (1 - r6)/(1 + r6))*r30)/(4.*(1 - r6)*r28) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((6*r29*r15*r16)/(r23*r18) - (8*(-1 + z/r10)*(1 + z/r10)*(-z + r10)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r10)*r15*r16)/(r17*r18) + (2*r31*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r16)/(r19*r18) - (4*r29*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) + (4*(-1 + z/r10)*(1 + z/r10)*r12*(1 - r6))/(r19*(1 + r6)) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-(r3/r4) + 1/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))))/2. + ((1 + r20)*r21*(-(r29/r19) + (-(r3/r4) + 1/r10)/(z + r10) - r30/(2.*r28) + ((6*r29*r15*r16)/(r23*r18) - (8*(-1 + z/r10)*(1 + z/r10)*(-z + r10)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r10)*r15*r16)/(r17*r18) + (2*r31*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r16)/(r19*r18) - (4*r29*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) + (4*(-1 + z/r10)*(1 + z/r10)*r12*(1 - r6))/(r19*(1 + r6)) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-(r3/r4) + 1/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/(2.*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (r22*r27*((-2*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) - (((2*r29*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*(1 + z/r10)*(1 - r6))/(r19*(1 + r6)) - ((-(r3/r4) + 1/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) + ((-(r3/r4) + 1/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) - (((-2*r29*(-z + r10)*(1 - r6))/(r17*(1 + r6)) + (2*(-1 + z/r10)*(1 + z/r10)*(1 - r6))/(r19*(1 + r6)) + ((-(r3/r4) + 1/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-(r3/r4) + 1/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((6*r29*r15*r16)/(r23*r18) - (8*(-1 + z/r10)*(1 + z/r10)*(-z + r10)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r10)*r15*r16)/(r17*r18) + (2*r31*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r16)/(r19*r18) - (4*r29*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) + (4*(-1 + z/r10)*(1 + z/r10)*r12*(1 - r6))/(r19*(1 + r6)) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-(r3/r4) + 1/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))) + (2*r22*r27*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - ((((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/r28 - (2*r22*r27*r30*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/r32 + (r22*r27*((6*r29*r15*r16)/(r23*r18) - (8*(-1 + z/r10)*(1 + z/r10)*(-z + r10)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r10)*r15*r16)/(r17*r18) + (2*r31*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r16)/(r19*r18) - (4*r29*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) + (4*(-1 + z/r10)*(1 + z/r10)*r12*(1 - r6))/(r19*(1 + r6)) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-(r3/r4) + 1/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/r28))/2.) + (1 - 2*nu)*(((-1 + nu)*r6*(1 - (1 - r6)/(1 + r6))*((1 + z/r10)/(z + r10) - ((1 + r6)*(1 - (1 - r6)/(1 + r6))*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(4.*(1 - r6)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))))/2. + ((1 + r20)*r21*((1 + z/r10)/(z + r10) + ((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/(2.*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (r22*r27*(-(((-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) - ((((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6))) + ((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6))) + (r22*r27*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))*(-(((1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/((1 - (1 - r6)/(1 + r6))*(1 + (1 - r6)/(1 + r6)))) + (1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))/r27))/r28))/2.)) - ((-1 + nu)*r6*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/(1 - (r2*r24*r34)/(r19*r33)) - ((1 + r20)*r25*(-((x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r28)) + (x*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r6*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/(1 - (r2*r24*r34)/(r19*r33))))/2. - z*(((-1 + nu)*r6*((2*x*r5*(1 + (1 - r6)/(1 + r6))*r35)/((z + r10)*r36) - (x*r5*(1 + (1 - r6)/(1 + r6))*((2*r29*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*(1 + z/r10)*(1 - r6))/(r19*(1 + r6)) - ((-(r3/r4) + 1/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) + ((-(r3/r4) + 1/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) + (2*x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*r33) + (2*x*r29*r5*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(-(r3/r4) + 1/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/(1 - (r2*r24*r34)/(r19*r33)) - ((-1 + nu)*r6*((2*r2*r24*r34*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*r36) + (2*r2*(1 + z/r10)*r24*r34)/(r17*r33))*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/r37 + ((1 + r20)*r25*((2*x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*r30)/((z + r10)*r32) - (x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((6*r29*r15*r16)/(r23*r18) - (8*(-1 + z/r10)*(1 + z/r10)*(-z + r10)*r16)/(r17*r18) - (2*(-(r3/r4) + 1/r10)*r15*r16)/(r17*r18) + (2*r31*r16)/(r19*r18) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r16)/(r19*r18) - (4*r29*(-z + r10)*r12*(1 - r6))/(r17*(1 + r6)) + (4*(-1 + z/r10)*(1 + z/r10)*r12*(1 - r6))/(r19*(1 + r6)) + (2*(-(r3/r4) + 1/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-(r3/r4) + 1/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r28) - (2*x*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r28) + (2*x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/(r19*r28) + (x*(1 - (1 - r6)/(1 + r6))*((-2*r29*(-z + r10)*(1 - r6))/(r17*(1 + r6)) + (2*(-1 + z/r10)*(1 + z/r10)*(1 - r6))/(r19*(1 + r6)) + ((-(r3/r4) + 1/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-(r3/r4) + 1/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (2*x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (2*x*r29*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r17*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(-(r3/r4) + 1/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r6*((2*x*r5*(1 + (1 - r6)/(1 + r6))*r35)/((z + r10)*r36) - (x*r5*(1 + (1 - r6)/(1 + r6))*((2*r29*(-z + r10)*(1 - r6))/(r17*(1 + r6)) - (2*(-1 + z/r10)*(1 + z/r10)*(1 - r6))/(r19*(1 + r6)) - ((-(r3/r4) + 1/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) + ((-(r3/r4) + 1/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33) + (2*x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*r33) + (2*x*r29*r5*(1 + (1 - r6)/(1 + r6)))/(r17*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(-(r3/r4) + 1/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/(1 - (r2*r24*r34)/(r19*r33)) - (r6*((2*r2*r24*r34*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*r36) + (2*r2*(1 + z/r10)*r24*r34)/(r17*r33))*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/r37))/2.) + 2*(1 - nu)*(((-1 + nu)*r6*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/(1 - (r2*r24*r34)/(r19*r33)) + ((1 + r20)*r25*(-((x*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))*((-2*(1 + z/r10)*r15*r16)/(r17*r18) + (2*(-1 + z/r10)*(-z + r10)*r16)/(r19*r18) + (2*(1 + z/r10)*(-z + r10)*r12*(1 - r6))/(r19*(1 + r6)) - (2*(-1 + z/r10)*r12*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r28)) + (x*(1 - (1 - r6)/(1 + r6))*(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6)) - ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) - (x*(1 + z/r10)*(1 - (1 - r6)/(1 + r6))*(1 - ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6))))/(r19*(1 + (r15*r16)/(r19*r18) - (2*(-z + r10)*r12*(1 - r6))/((z + r10)*(1 + r6)))) + (r6*(-((x*r5*(1 + (1 - r6)/(1 + r6))*(-(((1 + z/r10)*(-z + r10)*(1 - r6))/(r19*(1 + r6))) + ((-1 + z/r10)*(1 - r6))/((z + r10)*(1 + r6))))/((z + r10)*r33)) - (x*(1 + z/r10)*r5*(1 + (1 - r6)/(1 + r6)))/(r19*(1 + ((-z + r10)*(1 - r6))/((z + r10)*(1 + r6)))))*r14)/(1 - (r2*r24*r34)/(r19*r33))))/2.)))/(2.*PI*(1 - nu));
        return uzz;
    }
};

class AngularDislocation: public DisplacmentGradient{
public:
    AngularDislocation(double kappa, Vector<double> burgers_vector){
        this->kappa=kappa;
        this->burgers_vector=burgers_vector;
    }
    double uxxcalc(double x, double y, double z) override
    {
        double r1 = pow(x,2);
        double r2 = pow(y,2);
        double r3 = pow(z,2);
        double r4 = pow(r1 + r2 + r3,1.5);
        double r5 = pow(2*depth + z,2);
        double r6 = pow(r1 + r2 + r5,1.5);
        double r7 = pow(r1 + r2 + r5,2);
        double r8 = pow(r1 + r2 + r5,2.5);
        double r9 = pow(x,3);
        double r10 = sin(kappa);
        double r11 = sqrt(r1 + r2 + r3);
        double r12 = cos(kappa);
        double r13 = sqrt(r1 + r2 + r5);
        double r14 = 1/tan(kappa);
        double r15 = 1/cos(kappa);
        double r16 = pow(r11 - z*r12 - x*r10,2);
        double r17 = pow(2*depth + z + r13,2);
        double r18 = pow(-z + r11,2);
        double r19 = pow(r14,2);
        double r20 = pow(r12,2);
        double r21 = pow(x*r12 - z*r10,2);
        double r22 = pow(r10,2);
        double r23 = pow(r13 + (2*depth + z)*r12 - x*r10,2);
        double r24 = pow(x*r12 + (2*depth + z)*r10,2);
        double r25 = pow(r2*r12 + x*(x*r12 - z*r10),2);
        double r26 = pow(r2*r12 + x*(x*r12 + (2*depth + z)*r10),2);
        double uxx=(burgers_vector.c[2]*(y*r10*((-1 + (x*r10)/r11)/(r11*(r11 - z*r12 - x*r10)) - ((x/r11 - r10)*(-x + r11*r10))/(r11*r16) - (x*(-x + r11*r10))/(r4*(r11 - z*r12 - x*r10)) + (-1 + (x*r10)/r13)/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - ((x/r13 - r10)*(-x + r13*r10))/(r13*r23) - (x*(-x + r13*r10))/(r6*(r13 + (2*depth + z)*r12 - x*r10))) + 2*(-((y*(depth + z)*((-2*depth*x)/r7 - x/(r13*r17)))/r13) + (x*y*(depth + z)*(depth/(r1 + r2 + r5) + 1/(2*depth + z + r13)))/r6 + (1 - 2*nu)*(-((x*y*(1 + depth/r13))/(r13*r17)) - (depth*x*y)/(r6*(2*depth + z + r13)) + (y*r12*(depth/r13 + r12)*(x/r13 - r10))/r23 + (depth*x*y*r12)/(r6*(r13 + (2*depth + z)*r12 - x*r10))) + (y*(depth + z)*r12*((-2*depth*x*(2*depth + z))/r7 - ((depth/r13 + r12)*(2*depth + z + r13*r12)*(x/r13 - r10))/r23 + (x*r12*(depth/r13 + r12))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - (depth*x*(2*depth + z + r13*r12))/(r6*(r13 + (2*depth + z)*r12 - x*r10))))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - (y*(depth + z)*r12*(x/r13 - r10)*((depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r13 + r12)*(2*depth + z + r13*r12))/(r13 + (2*depth + z)*r12 - x*r10)))/(r13*r23) - (x*y*(depth + z)*r12*((depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r13 + r12)*(2*depth + z + r13*r12))/(r13 + (2*depth + z)*r12 - x*r10)))/(r6*(r13 + (2*depth + z)*r12 - x*r10)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[1]*(r1*(-(x/((r1 + r2 + r3)*r18)) - x/(r4*(-z + r11)) - x/((r1 + r2 + r5)*r17) - x/(r6*(2*depth + z + r13))) + 2*x*(1/(r11*(-z + r11)) + 1/(r13*(2*depth + z + r13))) + (6*depth*r1*(depth + z)*r14)/r8 - (2*depth*(depth + z)*r14)/r6 + (2*(1 - 2*nu)*(-((r9*(nu + depth/r13))/(r13*r17)) - (depth*r9)/(r6*(2*depth + z + r13)) + (2*x*(nu + depth/r13))/(2*depth + z + r13) + (-1 + 2*nu)*r14 - (depth*r1*r14)/r6 + (depth*r14)/r13))/(2*depth + z + r13) - (2*(1 - 2*nu)*x*(-depth + nu*(2*depth + z) + (r1*(nu + depth/r13))/(2*depth + z + r13) + (-1 + 2*nu)*x*r14 + (depth*x*r14)/r13))/(r13*r17) + (2*(depth + z)*((3*depth*r9)/r8 - (2*depth*x)/r6 + (r9*(2*nu + depth/r11))/((r1 + r2 + r5)*r17) + (depth*r9)/(r4*r13*(2*depth + z + r13)) + (r9*(2*nu + depth/r11))/(r6*(2*depth + z + r13)) - (2*x*(2*nu + depth/r11))/(r13*(2*depth + z + r13)) + ((1 - 2*nu)*r14)/r13 - (x*(depth + (1 - 2*nu)*x*r14))/r6))/(2*depth + z + r13) - (2*x*(depth + z)*(2*nu - (depth*r1)/r6 - (r1*(2*nu + depth/r11))/(r13*(2*depth + z + r13)) + (depth + (1 - 2*nu)*x*r14)/r13))/(r13*r17) + ((x*r12 - z*r10)*(-1 + (x*r10)/r11))/(r11*(r11 - z*r12 - x*r10)) + (r12*(-x + r11*r10))/(r11*(r11 - z*r12 - x*r10)) - ((x/r11 - r10)*(x*r12 - z*r10)*(-x + r11*r10))/(r11*r16) - (x*(x*r12 - z*r10)*(-x + r11*r10))/(r4*(r11 - z*r12 - x*r10)) + ((x*r12 + (2*depth + z)*r10)*(-1 + (x*r10)/r13))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) + (r12*(-x + r13*r10))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - ((x/r13 - r10)*(x*r12 + (2*depth + z)*r10)*(-x + r13*r10))/(r13*r23) - (x*(x*r12 + (2*depth + z)*r10)*(-x + r13*r10))/(r6*(r13 + (2*depth + z)*r12 - x*r10)) + 2*(1 - 2*nu)*((x*(nu + 2*(1 - nu)*r19))/(r13*(2*depth + z + r13)) - (r12*(1 + 2*(1 - nu)*r19)*(x/r13 - r10))/(r13 + (2*depth + z)*r12 - x*r10)) - (2*(1 - 2*nu)*r14*(r20 - (depth*r15*(-1 + (x*r10)/r13))/r13 + (depth*x*r15*(-x + r13*r10))/r6))/(r13 + (2*depth + z)*r12 - x*r10) + (2*(1 - 2*nu)*r14*(x/r13 - r10)*(r12*(x*r12 + (2*depth + z)*r10) - (depth*r15*(-x + r13*r10))/r13))/r23 + (2*(depth + z)*r14*((-3*depth*r1*(2*depth + z)*r15)/r8 + (depth*(2*depth + z)*r15)/r6 + ((-x + r13*r10)*(((2*depth + z + r13*r12)*(1 + (depth*r15)/r13)*(x/r13 - r10))/r23 + (depth*x*(2*depth + z + r13*r12)*r15)/(r6*(r13 + (2*depth + z)*r12 - x*r10)) - (x*r12*(1 + (depth*r15)/r13))/(r13*(r13 + (2*depth + z)*r12 - x*r10))))/r13 + ((-1 + (x*r10)/r13)*(2*(1 - nu)*r12 - ((2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10)))/r13 - (x*(-x + r13*r10)*(2*(1 - nu)*r12 - ((2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10)))/r6))/(r13 + (2*depth + z)*r12 - x*r10) - (2*(depth + z)*r14*(x/r13 - r10)*((depth*x*(2*depth + z)*r15)/r6 - r12*r10 + ((-x + r13*r10)*(2*(1 - nu)*r12 - ((2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10)))/r13))/r23 + (-1 + 2*nu)*(x/(r11*(-z + r11)) + x/(r13*(2*depth + z + r13)) - r12*((x/r11 - r10)/(r11 - z*r12 - x*r10) + (x/r13 - r10)/(r13 + (2*depth + z)*r12 - x*r10)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(-(x*y*(-(x/((r1 + r2 + r3)*r18)) - x/(r4*(-z + r11)) - x/((r1 + r2 + r5)*r17) - x/(r6*(2*depth + z + r13)))) - y*(1/(r11*(-z + r11)) + 1/(r13*(2*depth + z + r13))) - y*r12*((-1 + (x*r10)/r11)/(r11*(r11 - z*r12 - x*r10)) - ((x/r11 - r10)*(-x + r11*r10))/(r11*r16) - (x*(-x + r11*r10))/(r4*(r11 - z*r12 - x*r10)) + (-1 + (x*r10)/r13)/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - ((x/r13 - r10)*(-x + r13*r10))/(r13*r23) - (x*(-x + r13*r10))/(r6*(r13 + (2*depth + z)*r12 - x*r10))) + 2*(1 - nu)*((2*y)/(r1 + r2) - (y*r12)/(r21*(1 + r2/r21)) - (y*r12)/(r24*(1 + r2/r24)) + (-((y*r11*r10*(2*x*r12 - z*r10))/r25) + (x*y*r10)/(r11*(r2*r12 + x*(x*r12 - z*r10))))/(1 + (r2*(r1 + r2 + r3)*r22)/r25) + (-((y*r13*r10*(2*x*r12 + (2*depth + z)*r10))/r26) + (x*y*r10)/(r13*(r2*r12 + x*(x*r12 + (2*depth + z)*r10))))/(1 + (r2*(r1 + r2 + r5)*r22)/r26)) + 2*((y*(depth + z)*((-2*depth*r1)/r7 + depth/(r1 + r2 + r5) - (r1*(2*nu + depth/r13))/(r13*r17) - (depth*r1)/(r6*(2*depth + z + r13)) + (2*nu + depth/r13)/(2*depth + z + r13)))/(r13*(2*depth + z + r13)) - (3*depth*x*y*(depth + z)*r14)/r8 - (x*y*(depth + z)*((depth*x)/(r1 + r2 + r5) + (x*(2*nu + depth/r13))/(2*depth + z + r13) + (-1 + 2*nu)*r14))/((r1 + r2 + r5)*r17) - (x*y*(depth + z)*((depth*x)/(r1 + r2 + r5) + (x*(2*nu + depth/r13))/(2*depth + z + r13) + (-1 + 2*nu)*r14))/(r6*(2*depth + z + r13)) + ((1 - 2*nu)*y*((r1*(nu + depth/r13))/(r13*r17) + (depth*r1)/(r6*(2*depth + z + r13)) - (nu + depth/r13)/(2*depth + z + r13) + (depth*x*r14)/r6))/(2*depth + z + r13) - ((1 - 2*nu)*x*y*(-((x*(nu + depth/r13))/(2*depth + z + r13)) + (1 - 2*nu - depth/r13)*r14))/(r13*r17) - ((1 - 2*nu)*y*r12*(depth/r13 + r12)*r14*(x/r13 - r10))/r23 - (depth*(1 - 2*nu)*x*y*r12*r14)/(r6*(r13 + (2*depth + z)*r12 - x*r10)) + (y*(depth + z)*((2*depth*x*(2*depth + z)*r12*r14)/r7 + (r12*((x*r12*(-(depth/r13) + (1 - 2*nu)*r12)*r14)/r13 + (depth*x*(2*depth + z + r13*r12)*r14)/r6 + 2*(1 - nu)*r12*(-1 + (x*r10)/r13)))/(r13 + (2*depth + z)*r12 - x*r10) - (r12*(x/r13 - r10)*((-(depth/r13) + (1 - 2*nu)*r12)*(2*depth + z + r13*r12)*r14 + 2*(1 - nu)*r12*(-x + r13*r10)))/r23))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - (y*(depth + z)*(x/r13 - r10)*(-((depth*(2*depth + z)*r12*r14)/(r1 + r2 + r5)) + (r12*((-(depth/r13) + (1 - 2*nu)*r12)*(2*depth + z + r13*r12)*r14 + 2*(1 - nu)*r12*(-x + r13*r10)))/(r13 + (2*depth + z)*r12 - x*r10)))/(r13*r23) - (x*y*(depth + z)*(-((depth*(2*depth + z)*r12*r14)/(r1 + r2 + r5)) + (r12*((-(depth/r13) + (1 - 2*nu)*r12)*(2*depth + z + r13*r12)*r14 + 2*(1 - nu)*r12*(-x + r13*r10)))/(r13 + (2*depth + z)*r12 - x*r10)))/(r6*(r13 + (2*depth + z)*r12 - x*r10)) - 2*(1 - 2*nu)*(1 - nu)*r19*(y/(r1 + r2) - (y*r12)/(r24*(1 + r2/r24)) + (-((y*r13*r10*(2*x*r12 + (2*depth + z)*r10))/r26) + (x*y*r10)/(r13*(r2*r12 + x*(x*r12 + (2*depth + z)*r10))))/(1 + (r2*(r1 + r2 + r5)*r22)/r26)))))/(8.*PI*(1 - nu));
        return uxx;
    }
    double uxycalc(double x, double y, double z) override
    {
        double r1 = pow(x,2);
        double r2 = pow(y,2);
        double r3 = pow(z,2);
        double r4 = pow(2*depth + z,2);
        double r5 = pow(r1 + r2 + r3,1.5);
        double r6 = pow(r1 + r2 + r4,1.5);
        double r7 = pow(r1 + r2 + r4,2);
        double r8 = pow(r1 + r2 + r4,2.5);
        double r9 = sin(kappa);
        double r10 = sqrt(r1 + r2 + r3);
        double r11 = cos(kappa);
        double r12 = sqrt(r1 + r2 + r4);
        double r13 = 1/tan(kappa);
        double r14 = 1/cos(kappa);
        double r15 = tan(kappa);
        double r16 = pow(r10 - z*r11 - x*r9,2);
        double r17 = pow(2*depth + z + r12,2);
        double r18 = pow(-z + r10,2);
        double r19 = pow(x*r11 - z*r9,2);
        double r20 = pow(r9,2);
        double r21 = pow(r13,2);
        double r22 = pow(r12 + (2*depth + z)*r11 - x*r9,2);
        double r23 = pow(x*r11 + (2*depth + z)*r9,2);
        double r24 = pow(r2*r11 + x*(x*r11 - z*r9),2);
        double r25 = pow(r2*r11 + x*(x*r11 + (2*depth + z)*r9),2);
        double uxy=(burgers_vector.c[2]*(y*r9*((y*r9)/((r1 + r2 + r3)*(r10 - z*r11 - x*r9)) + (y*r9)/((r1 + r2 + r4)*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(-x + r10*r9))/((r1 + r2 + r3)*r16) - (y*(-x + r10*r9))/(r5*(r10 - z*r11 - x*r9)) - (y*(-x + r12*r9))/((r1 + r2 + r4)*r22) - (y*(-x + r12*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) + r9*((-x + r10*r9)/(r10*(r10 - z*r11 - x*r9)) + (-x + r12*r9)/(r12*(r12 + (2*depth + z)*r11 - x*r9))) + 2*(-((y*(depth + z)*((-2*depth*y)/r7 - y/(r12*r17)))/r12) + (r2*(depth + z)*(depth/(r1 + r2 + r4) + 1/(2*depth + z + r12)))/r6 - ((depth + z)*(depth/(r1 + r2 + r4) + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*(-((r2*(1 + depth/r12))/(r12*r17)) - (depth*r2)/(r6*(2*depth + z + r12)) + (1 + depth/r12)/(2*depth + z + r12) + (r2*r11*(depth/r12 + r11))/(r12*r22) + (depth*r2*r11)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) - (r11*(depth/r12 + r11))/(r12 + (2*depth + z)*r11 - x*r9)) + (y*(depth + z)*r11*((-2*depth*y*(2*depth + z))/r7 - (y*(depth/r12 + r11)*(2*depth + z + r12*r11))/(r12*r22) + (y*r11*(depth/r12 + r11))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (depth*y*(2*depth + z + r12*r11))/(r6*(r12 + (2*depth + z)*r11 - x*r9))))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (r2*(depth + z)*r11*((depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r12 + r11)*(2*depth + z + r12*r11))/(r12 + (2*depth + z)*r11 - x*r9)))/((r1 + r2 + r4)*r22) - (r2*(depth + z)*r11*((depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r12 + r11)*(2*depth + z + r12*r11))/(r12 + (2*depth + z)*r11 - x*r9)))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + ((depth + z)*r11*((depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r12 + r11)*(2*depth + z + r12*r11))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(-(x*y*(-(y/((r1 + r2 + r3)*r18)) - y/(r5*(-z + r10)) - y/((r1 + r2 + r4)*r17) - y/(r6*(2*depth + z + r12)))) - x*(1/(r10*(-z + r10)) + 1/(r12*(2*depth + z + r12))) - y*r11*((y*r9)/((r1 + r2 + r3)*(r10 - z*r11 - x*r9)) + (y*r9)/((r1 + r2 + r4)*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(-x + r10*r9))/((r1 + r2 + r3)*r16) - (y*(-x + r10*r9))/(r5*(r10 - z*r11 - x*r9)) - (y*(-x + r12*r9))/((r1 + r2 + r4)*r22) - (y*(-x + r12*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) - r11*((-x + r10*r9)/(r10*(r10 - z*r11 - x*r9)) + (-x + r12*r9)/(r12*(r12 + (2*depth + z)*r11 - x*r9))) + 2*(1 - nu)*((-2*x)/(r1 + r2) + 1/((x*r11 - z*r9)*(1 + r2/r19)) + 1/((x*r11 + (2*depth + z)*r9)*(1 + r2/r23)) + ((-2*r2*r10*r11*r9)/r24 + (r2*r9)/(r10*(r2*r11 + x*(x*r11 - z*r9))) + (r10*r9)/(r2*r11 + x*(x*r11 - z*r9)))/(1 + (r2*(r1 + r2 + r3)*r20)/r24) + ((-2*r2*r12*r11*r9)/r25 + (r2*r9)/(r12*(r2*r11 + x*(x*r11 + (2*depth + z)*r9))) + (r12*r9)/(r2*r11 + x*(x*r11 + (2*depth + z)*r9)))/(1 + (r2*(r1 + r2 + r4)*r20)/r25)) + 2*((y*(depth + z)*((-2*depth*x*y)/r7 - (x*y*(2*nu + depth/r12))/(r12*r17) - (depth*x*y)/(r6*(2*depth + z + r12))))/(r12*(2*depth + z + r12)) - (3*depth*r2*(depth + z)*r13)/r8 + (depth*(depth + z)*r13)/r6 - (r2*(depth + z)*((depth*x)/(r1 + r2 + r4) + (x*(2*nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*r13))/((r1 + r2 + r4)*r17) - (r2*(depth + z)*((depth*x)/(r1 + r2 + r4) + (x*(2*nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*r13))/(r6*(2*depth + z + r12)) + ((depth + z)*((depth*x)/(r1 + r2 + r4) + (x*(2*nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*r13))/(r12*(2*depth + z + r12)) + ((1 - 2*nu)*y*((x*y*(nu + depth/r12))/(r12*r17) + (depth*x*y)/(r6*(2*depth + z + r12)) + (depth*y*r13)/r6))/(2*depth + z + r12) - ((1 - 2*nu)*r2*(-((x*(nu + depth/r12))/(2*depth + z + r12)) + (1 - 2*nu - depth/r12)*r13))/(r12*r17) + ((1 - 2*nu)*(-((x*(nu + depth/r12))/(2*depth + z + r12)) + (1 - 2*nu - depth/r12)*r13))/(2*depth + z + r12) - ((1 - 2*nu)*r2*r11*(depth/r12 + r11)*r13)/(r12*r22) - (depth*(1 - 2*nu)*r2*r11*r13)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + ((1 - 2*nu)*r11*(depth/r12 + r11)*r13)/(r12 + (2*depth + z)*r11 - x*r9) + (y*(depth + z)*((2*depth*y*(2*depth + z)*r11*r13)/r7 + (r11*((y*r11*(-(depth/r12) + (1 - 2*nu)*r11)*r13)/r12 + (depth*y*(2*depth + z + r12*r11)*r13)/r6 + (2*(1 - nu)*y*r11*r9)/r12))/(r12 + (2*depth + z)*r11 - x*r9) - (y*r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12*r22)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (r2*(depth + z)*(-((depth*(2*depth + z)*r11*r13)/(r1 + r2 + r4)) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12 + (2*depth + z)*r11 - x*r9)))/((r1 + r2 + r4)*r22) - (r2*(depth + z)*(-((depth*(2*depth + z)*r11*r13)/(r1 + r2 + r4)) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12 + (2*depth + z)*r11 - x*r9)))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + ((depth + z)*(-((depth*(2*depth + z)*r11*r13)/(r1 + r2 + r4)) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - 2*(1 - 2*nu)*(1 - nu)*r21*(-(x/(r1 + r2)) + 1/((x*r11 + (2*depth + z)*r9)*(1 + r2/r23)) + ((-2*r2*r12*r11*r9)/r25 + (r2*r9)/(r12*(r2*r11 + x*(x*r11 + (2*depth + z)*r9))) + (r12*r9)/(r2*r11 + x*(x*r11 + (2*depth + z)*r9)))/(1 + (r2*(r1 + r2 + r4)*r20)/r25)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[1]*(r1*(-(y/((r1 + r2 + r3)*r18)) - y/(r5*(-z + r10)) - y/((r1 + r2 + r4)*r17) - y/(r6*(2*depth + z + r12))) + (6*depth*x*y*(depth + z)*r13)/r8 + (2*(1 - 2*nu)*(-((r1*y*(nu + depth/r12))/(r12*r17)) - (depth*r1*y)/(r6*(2*depth + z + r12)) - (depth*x*y*r13)/r6))/(2*depth + z + r12) - (2*(1 - 2*nu)*y*(-depth + nu*(2*depth + z) + (r1*(nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*x*r13 + (depth*x*r13)/r12))/(r12*r17) + (2*(depth + z)*((3*depth*r1*y)/r8 + (r1*y*(2*nu + depth/r10))/((r1 + r2 + r4)*r17) + (depth*r1*y)/(r5*r12*(2*depth + z + r12)) + (r1*y*(2*nu + depth/r10))/(r6*(2*depth + z + r12)) - (y*(depth + (1 - 2*nu)*x*r13))/r6))/(2*depth + z + r12) - (2*y*(depth + z)*(2*nu - (depth*r1)/r6 - (r1*(2*nu + depth/r10))/(r12*(2*depth + z + r12)) + (depth + (1 - 2*nu)*x*r13)/r12))/(r12*r17) + (y*r9*(x*r11 - z*r9))/((r1 + r2 + r3)*(r10 - z*r11 - x*r9)) + (y*r9*(x*r11 + (2*depth + z)*r9))/((r1 + r2 + r4)*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(x*r11 - z*r9)*(-x + r10*r9))/((r1 + r2 + r3)*r16) - (y*(x*r11 - z*r9)*(-x + r10*r9))/(r5*(r10 - z*r11 - x*r9)) - (y*(x*r11 + (2*depth + z)*r9)*(-x + r12*r9))/((r1 + r2 + r4)*r22) - (y*(x*r11 + (2*depth + z)*r9)*(-x + r12*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + 2*(1 - 2*nu)*((y*(nu + 2*(1 - nu)*r21))/(r12*(2*depth + z + r12)) - (y*r11*(1 + 2*(1 - nu)*r21))/(r12*(r12 + (2*depth + z)*r11 - x*r9))) + (2*(1 - 2*nu)*y*r13*(r11*(x*r11 + (2*depth + z)*r9) - (depth*r14*(-x + r12*r9))/r12))/(r12*r22) + (-1 + 2*nu)*(y/(r10*(-z + r10)) + y/(r12*(2*depth + z + r12)) - r11*(y/(r10*(r10 - z*r11 - x*r9)) + y/(r12*(r12 + (2*depth + z)*r11 - x*r9)))) + (2*(depth + z)*r13*((-3*depth*x*y*(2*depth + z)*r14)/r8 + ((-x + r12*r9)*((y*(2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12*r22) + (depth*y*(2*depth + z + r12*r11)*r14)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) - (y*r11*(1 + (depth*r14)/r12))/(r12*(r12 + (2*depth + z)*r11 - x*r9))))/r12 + (y*r9*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r1 + r2 + r4) - (y*(-x + r12*r9)*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/r6))/(r12 + (2*depth + z)*r11 - x*r9) - (2*y*(depth + z)*r13*((depth*x*(2*depth + z)*r14)/r6 - r11*r9 + ((-x + r12*r9)*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/r12))/(r12*r22) - (2*(1 - 2*nu)*r13*((depth*y*r14*(-x + r12*r9))/r6 - (depth*y*r15)/(r1 + r2 + r4)))/(r12 + (2*depth + z)*r11 - x*r9)))/(8.*PI*(1 - nu));
        return uxy;
    }
    double uxzcalc(double x, double y, double z) override
    {
        double r1 = pow(x,2);
        double r2 = pow(y,2);
        double r3 = pow(z,2);
        double r4 = pow(2*depth + z,2);
        double r5 = pow(r1 + r2 + r3,1.5);
        double r6 = pow(r1 + r2 + r4,1.5);
        double r7 = pow(r1 + r2 + r4,2);
        double r8 = pow(r1 + r2 + r4,2.5);
        double r9 = sin(kappa);
        double r10 = sqrt(r1 + r2 + r3);
        double r11 = cos(kappa);
        double r12 = sqrt(r1 + r2 + r4);
        double r13 = 1/tan(kappa);
        double r14 = 1/cos(kappa);
        double r15 = tan(kappa);
        double r16 = pow(r10 - z*r11 - x*r9,2);
        double r17 = pow(2*depth + z + r12,2);
        double r18 = pow(-z + r10,2);
        double r19 = pow(x*r11 - z*r9,2);
        double r20 = pow(r9,2);
        double r21 = pow(r13,2);
        double r22 = pow(r12 + (2*depth + z)*r11 - x*r9,2);
        double r23 = pow(x*r11 + (2*depth + z)*r9,2);
        double r24 = pow(r2*r11 + x*(x*r11 - z*r9),2);
        double r25 = pow(r2*r11 + x*(x*r11 + (2*depth + z)*r9),2);
        double uxz=(burgers_vector.c[2]*(y*r9*((z*r9)/((r1 + r2 + r3)*(r10 - z*r11 - x*r9)) + ((2*depth + z)*r9)/((r1 + r2 + r4)*(r12 + (2*depth + z)*r11 - x*r9)) - ((z/r10 - r11)*(-x + r10*r9))/(r10*r16) - (z*(-x + r10*r9))/(r5*(r10 - z*r11 - x*r9)) - (((2*depth + z)/r12 + r11)*(-x + r12*r9))/(r12*r22) - ((2*depth + z)*(-x + r12*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) + 2*(-((y*(depth + z)*((-2*depth*(2*depth + z))/r7 - (1 + (2*depth + z)/r12)/r17))/r12) + (y*(depth + z)*(2*depth + z)*(depth/(r1 + r2 + r4) + 1/(2*depth + z + r12)))/r6 - (y*(depth/(r1 + r2 + r4) + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*(-((y*(1 + depth/r12)*(1 + (2*depth + z)/r12))/r17) - (depth*y*(2*depth + z))/(r6*(2*depth + z + r12)) + (y*r11*(depth/r12 + r11)*((2*depth + z)/r12 + r11))/r22 + (depth*y*(2*depth + z)*r11)/(r6*(r12 + (2*depth + z)*r11 - x*r9))) + (y*(depth + z)*r11*((-2*depth*r4)/r7 + depth/(r1 + r2 + r4) - ((depth/r12 + r11)*((2*depth + z)/r12 + r11)*(2*depth + z + r12*r11))/r22 + ((depth/r12 + r11)*(1 + ((2*depth + z)*r11)/r12))/(r12 + (2*depth + z)*r11 - x*r9) - (depth*(2*depth + z)*(2*depth + z + r12*r11))/(r6*(r12 + (2*depth + z)*r11 - x*r9))))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(depth + z)*r11*((2*depth + z)/r12 + r11)*((depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r12 + r11)*(2*depth + z + r12*r11))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*r22) - (y*(depth + z)*(2*depth + z)*r11*((depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r12 + r11)*(2*depth + z + r12*r11))/(r12 + (2*depth + z)*r11 - x*r9)))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (y*r11*((depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r12 + r11)*(2*depth + z + r12*r11))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(-(x*y*(-((-1 + z/r10)/(r10*r18)) - z/(r5*(-z + r10)) - (1 + (2*depth + z)/r12)/(r12*r17) - (2*depth + z)/(r6*(2*depth + z + r12)))) - y*r11*((z*r9)/((r1 + r2 + r3)*(r10 - z*r11 - x*r9)) + ((2*depth + z)*r9)/((r1 + r2 + r4)*(r12 + (2*depth + z)*r11 - x*r9)) - ((z/r10 - r11)*(-x + r10*r9))/(r10*r16) - (z*(-x + r10*r9))/(r5*(r10 - z*r11 - x*r9)) - (((2*depth + z)/r12 + r11)*(-x + r12*r9))/(r12*r22) - ((2*depth + z)*(-x + r12*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) + 2*(1 - nu)*((y*r9)/(r19*(1 + r2/r19)) - (y*r9)/(r23*(1 + r2/r23)) + ((x*y*r10*r20)/r24 + (y*z*r9)/(r10*(r2*r11 + x*(x*r11 - z*r9))))/(1 + (r2*(r1 + r2 + r3)*r20)/r24) + (-((x*y*r12*r20)/r25) + (y*(2*depth + z)*r9)/(r12*(r2*r11 + x*(x*r11 + (2*depth + z)*r9))))/(1 + (r2*(r1 + r2 + r4)*r20)/r25)) + 2*((y*(depth + z)*((-2*depth*x*(2*depth + z))/r7 - (x*(2*nu + depth/r12)*(1 + (2*depth + z)/r12))/r17 - (depth*x*(2*depth + z))/(r6*(2*depth + z + r12))))/(r12*(2*depth + z + r12)) - (3*depth*y*(depth + z)*(2*depth + z)*r13)/r8 + (depth*y*r13)/r6 - (y*(depth + z)*(1 + (2*depth + z)/r12)*((depth*x)/(r1 + r2 + r4) + (x*(2*nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*r13))/(r12*r17) - (y*(depth + z)*(2*depth + z)*((depth*x)/(r1 + r2 + r4) + (x*(2*nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*r13))/(r6*(2*depth + z + r12)) + (y*((depth*x)/(r1 + r2 + r4) + (x*(2*nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*r13))/(r12*(2*depth + z + r12)) + ((1 - 2*nu)*y*((x*(nu + depth/r12)*(1 + (2*depth + z)/r12))/r17 + (depth*x*(2*depth + z))/(r6*(2*depth + z + r12)) + (depth*(2*depth + z)*r13)/r6))/(2*depth + z + r12) - ((1 - 2*nu)*y*(1 + (2*depth + z)/r12)*(-((x*(nu + depth/r12))/(2*depth + z + r12)) + (1 - 2*nu - depth/r12)*r13))/r17 - ((1 - 2*nu)*y*r11*(depth/r12 + r11)*((2*depth + z)/r12 + r11)*r13)/r22 - (depth*(1 - 2*nu)*y*(2*depth + z)*r11*r13)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (y*(depth + z)*((2*depth*r4*r11*r13)/r7 - (depth*r11*r13)/(r1 + r2 + r4) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(1 + ((2*depth + z)*r11)/r12)*r13 + (depth*(2*depth + z)*(2*depth + z + r12*r11)*r13)/r6 + (2*(1 - nu)*(2*depth + z)*r11*r9)/r12))/(r12 + (2*depth + z)*r11 - x*r9) - (r11*((2*depth + z)/r12 + r11)*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/r22))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(depth + z)*((2*depth + z)/r12 + r11)*(-((depth*(2*depth + z)*r11*r13)/(r1 + r2 + r4)) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*r22) - (y*(depth + z)*(2*depth + z)*(-((depth*(2*depth + z)*r11*r13)/(r1 + r2 + r4)) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12 + (2*depth + z)*r11 - x*r9)))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (y*(-((depth*(2*depth + z)*r11*r13)/(r1 + r2 + r4)) + (r11*((-(depth/r12) + (1 - 2*nu)*r11)*(2*depth + z + r12*r11)*r13 + 2*(1 - nu)*r11*(-x + r12*r9)))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - 2*(1 - 2*nu)*(1 - nu)*r21*(-((y*r9)/(r23*(1 + r2/r23))) + (-((x*y*r12*r20)/r25) + (y*(2*depth + z)*r9)/(r12*(r2*r11 + x*(x*r11 + (2*depth + z)*r9))))/(1 + (r2*(r1 + r2 + r4)*r20)/r25)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[1]*(r1*(-((-1 + z/r10)/(r10*r18)) - z/(r5*(-z + r10)) - (1 + (2*depth + z)/r12)/(r12*r17) - (2*depth + z)/(r6*(2*depth + z + r12))) + (6*depth*x*(depth + z)*(2*depth + z)*r13)/r8 - (2*depth*x*r13)/r6 + (2*(1 - 2*nu)*(nu - (r1*(nu + depth/r12)*(1 + (2*depth + z)/r12))/r17 - (depth*r1*(2*depth + z))/(r6*(2*depth + z + r12)) - (depth*x*(2*depth + z)*r13)/r6))/(2*depth + z + r12) - (2*(1 - 2*nu)*(1 + (2*depth + z)/r12)*(-depth + nu*(2*depth + z) + (r1*(nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu)*x*r13 + (depth*x*r13)/r12))/r17 + (2*(depth + z)*((3*depth*r1*(2*depth + z))/r8 + (r1*(2*nu + depth/r10)*(1 + (2*depth + z)/r12))/(r12*r17) + (depth*r1*z)/(r5*r12*(2*depth + z + r12)) + (r1*(2*depth + z)*(2*nu + depth/r10))/(r6*(2*depth + z + r12)) - ((2*depth + z)*(depth + (1 - 2*nu)*x*r13))/r6))/(2*depth + z + r12) - (2*(depth + z)*(1 + (2*depth + z)/r12)*(2*nu - (depth*r1)/r6 - (r1*(2*nu + depth/r10))/(r12*(2*depth + z + r12)) + (depth + (1 - 2*nu)*x*r13)/r12))/r17 + (2*(2*nu - (depth*r1)/r6 - (r1*(2*nu + depth/r10))/(r12*(2*depth + z + r12)) + (depth + (1 - 2*nu)*x*r13)/r12))/(2*depth + z + r12) + (z*r9*(x*r11 - z*r9))/((r1 + r2 + r3)*(r10 - z*r11 - x*r9)) + ((2*depth + z)*r9*(x*r11 + (2*depth + z)*r9))/((r1 + r2 + r4)*(r12 + (2*depth + z)*r11 - x*r9)) - (r9*(-x + r10*r9))/(r10*(r10 - z*r11 - x*r9)) - ((z/r10 - r11)*(x*r11 - z*r9)*(-x + r10*r9))/(r10*r16) - (z*(x*r11 - z*r9)*(-x + r10*r9))/(r5*(r10 - z*r11 - x*r9)) + (r9*(-x + r12*r9))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (((2*depth + z)/r12 + r11)*(x*r11 + (2*depth + z)*r9)*(-x + r12*r9))/(r12*r22) - ((2*depth + z)*(x*r11 + (2*depth + z)*r9)*(-x + r12*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + 2*(1 - 2*nu)*(((1 + (2*depth + z)/r12)*(nu + 2*(1 - nu)*r21))/(2*depth + z + r12) - (r11*((2*depth + z)/r12 + r11)*(1 + 2*(1 - nu)*r21))/(r12 + (2*depth + z)*r11 - x*r9)) + (2*(1 - 2*nu)*((2*depth + z)/r12 + r11)*r13*(r11*(x*r11 + (2*depth + z)*r9) - (depth*r14*(-x + r12*r9))/r12))/r22 + (-1 + 2*nu)*((-1 + z/r10)/(-z + r10) + (1 + (2*depth + z)/r12)/(2*depth + z + r12) - r11*((z/r10 - r11)/(r10 - z*r11 - x*r9) + ((2*depth + z)/r12 + r11)/(r12 + (2*depth + z)*r11 - x*r9))) + (2*(depth + z)*r13*((-3*depth*x*r4*r14)/r8 + (depth*x*r14)/r6 + ((-x + r12*r9)*((((2*depth + z)/r12 + r11)*(2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/r22 + (depth*(2*depth + z)*(2*depth + z + r12*r11)*r14)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) - ((1 + ((2*depth + z)*r11)/r12)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/r12 + ((2*depth + z)*r9*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r1 + r2 + r4) - ((2*depth + z)*(-x + r12*r9)*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/r6))/(r12 + (2*depth + z)*r11 - x*r9) - (2*(depth + z)*((2*depth + z)/r12 + r11)*r13*((depth*x*(2*depth + z)*r14)/r6 - r11*r9 + ((-x + r12*r9)*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/r12))/r22 + (2*r13*((depth*x*(2*depth + z)*r14)/r6 - r11*r9 + ((-x + r12*r9)*(2*(1 - nu)*r11 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/r12))/(r12 + (2*depth + z)*r11 - x*r9) - (2*(1 - 2*nu)*r13*(r11*r9 + (depth*(2*depth + z)*r14*(-x + r12*r9))/r6 - (depth*(2*depth + z)*r15)/(r1 + r2 + r4)))/(r12 + (2*depth + z)*r11 - x*r9)))/(8.*PI*(1 - nu));
        return uxz;
    }
    double uyxcalc(double x, double y, double z) override
    {
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = pow(2*depth + z,2);
        double r6 = pow(r2 + r1 + r5,1.5);
        double r7 = pow(r2 + r1 + r5,2);
        double r8 = pow(r2 + r1 + r5,2.5);
        double r9 = sin(kappa);
        double r10 = sqrt(r2 + r1 + r3);
        double r11 = cos(kappa);
        double r12 = sqrt(r2 + r1 + r5);
        double r13 = 1/tan(kappa);
        double r14 = 1/cos(kappa);
        double r15 = 1/sin(kappa);
        double r16 = pow(r10 - z*r11 - x*r9,2);
        double r17 = pow(2*depth + z + r12,2);
        double r18 = pow(-z + r10,2);
        double r19 = pow(r13,2);
        double r20 = pow(r11,2);
        double r21 = pow(x*r11 - z*r9,2);
        double r22 = pow(r9,2);
        double r23 = pow(r12 + (2*depth + z)*r11 - x*r9,2);
        double r24 = pow(x*r11 + (2*depth + z)*r9,2);
        double r25 = pow(r1*r11 + x*(x*r11 - z*r9),2);
        double r26 = pow(r1*r11 + x*(x*r11 + (2*depth + z)*r9),2);
        double uyx=(burgers_vector.c[2]*(-(r1*r9*(-((x/r10 - r9)/(r10*r16)) - x/(r4*(r10 - z*r11 - x*r9)) - (x/r12 - r9)/(r12*r23) - x/(r6*(r12 + (2*depth + z)*r11 - x*r9)))) + (1 - 2*nu)*r9*((x/r10 - r9)/(r10 - z*r11 - x*r9) + (x/r12 - r9)/(r12 + (2*depth + z)*r11 - x*r9)) + 2*((x*(depth + z)*((-2*depth*x)/r7 - x/(r12*r17)))/r12 - (r2*(depth + z)*(depth/(r2 + r1 + r5) + 1/(2*depth + z + r12)))/r6 + ((depth + z)*(depth/(r2 + r1 + r5) + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*((r2*(1 + depth/r12))/(r12*r17) + (depth*r2)/(r6*(2*depth + z + r12)) - (1 + depth/r12)/(2*depth + z + r12) + (r11*(depth/r12 + r11))/(r12 + (2*depth + z)*r11 - x*r9) - ((x/r12 - r9)*r9)/(r12 + (2*depth + z)*r11 - x*r9) - ((depth/r12 + r11)*(x/r12 - r9)*(x*r11 + (2*depth + z)*r9))/r23 - (depth*x*(x*r11 + (2*depth + z)*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) - ((depth + z)*(((1 + (depth*(2*depth + z))/(r2 + r1 + r5))*r11)/r12 + (depth*x*r9)/r6 - (2*depth*x*(2*depth + z)*(x*r11 + (2*depth + z)*r9))/r8 - (x*(1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r11 + (2*depth + z)*r9))/r6 - (-((depth*r11*(2*depth + z + r12*r11))/r12) - (depth*x*r11*(x*r11 + (2*depth + z)*r9))/(r2 + r1 + r5) + (depth*x*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r6)/(r12*(r12 + (2*depth + z)*r11 - x*r9)) + ((x/r12 - r9)*(r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12))/(r12*r23) + (x*(r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12))/(r6*(r12 + (2*depth + z)*r11 - x*r9))))/(r12 + (2*depth + z)*r11 - x*r9) + ((depth + z)*(x/r12 - r9)*((-(depth/r12) + r11)*r9 + ((1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r11 + (2*depth + z)*r9))/r12 - (r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12)/(r12*(r12 + (2*depth + z)*r11 - x*r9))))/r23)))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(-(r1*(-(x/((r2 + r1 + r3)*r18)) - x/(r4*(-z + r10)) - x/((r2 + r1 + r5)*r17) - x/(r6*(2*depth + z + r12)) - r11*(-((x/r10 - r9)/(r10*r16)) - x/(r4*(r10 - z*r11 - x*r9)) - (x/r12 - r9)/(r12*r23) - x/(r6*(r12 + (2*depth + z)*r11 - x*r9))))) + (1 - 2*nu)*(x/(r10*(-z + r10)) + x/(r12*(2*depth + z + r12)) - r11*((x/r10 - r9)/(r10 - z*r11 - x*r9) + (x/r12 - r9)/(r12 + (2*depth + z)*r11 - x*r9))) + 2*((3*depth*r2*(depth + z)*r13)/r8 - (depth*(depth + z)*r13)/r6 - ((1 - 2*nu)*(-((x*r1*(nu + depth/r12))/(r12*r17)) - (depth*x*r1)/(r6*(2*depth + z + r12)) + (depth*r2*r13)/r6 + (1 - 2*nu - depth/r12)*r13))/(2*depth + z + r12) + ((1 - 2*nu)*x*(-depth + nu*(2*depth + z) + (r1*(nu + depth/r12))/(2*depth + z + r12) + x*(1 - 2*nu - depth/r12)*r13))/(r12*r17) + ((depth + z)*((-3*depth*x*r1)/r8 - (x*r1*(2*nu + depth/r12))/((r2 + r1 + r5)*r17) - (depth*x*r1)/(r7*(2*depth + z + r12)) - (x*r1*(2*nu + depth/r12))/(r6*(2*depth + z + r12)) + ((1 - 2*nu)*r13)/r12 - (x*(-depth + (1 - 2*nu)*x*r13))/r6))/(2*depth + z + r12) - (x*(depth + z)*(-2*nu + (depth*r1)/r6 + (r1*(2*nu + depth/r12))/(r12*(2*depth + z + r12)) + (-depth + (1 - 2*nu)*x*r13)/r12))/(r12*r17) - ((1 - 2*nu)*r11*(depth/r12 + r11)*r13)/(r12 + (2*depth + z)*r11 - x*r9) + ((1 - 2*nu)*(depth/r12 + r11)*r13*(x/r12 - r9)*(x*r11 + (2*depth + z)*r9))/r23 + (depth*(1 - 2*nu)*x*r13*(x*r11 + (2*depth + z)*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (1 - 2*nu)*((x*(-nu + 2*(1 - nu)*r19))/(r12*(2*depth + z + r12)) - (r11*(1 - 2*nu + 2*(1 - nu)*r19)*(x/r12 - r9))/(r12 + (2*depth + z)*r11 - x*r9)) + ((depth + z)*((depth*(2*depth + z)*r11*r13)/r6 - ((1 - 2*nu)*r11*r13)/r12 - (3*depth*x*(2*depth + z)*r13*(x*r11 + (2*depth + z)*r9))/r8 + (x*(depth*r11 + (1 - 2*nu)*r13*(x*r11 + (2*depth + z)*r9)))/r6 - (-((depth*r11*(2*depth + z + r12*r11)*r13)/r12) - (depth*x*r11*r13*(x*r11 + (2*depth + z)*r9))/(r2 + r1 + r5) + (depth*x*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r6)/(r12*(r12 + (2*depth + z)*r11 - x*r9)) + ((x/r12 - r9)*(r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12))/(r12*r23) + (x*(r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12))/(r6*(r12 + (2*depth + z)*r11 - x*r9))))/(r12 + (2*depth + z)*r11 - x*r9) - ((depth + z)*(x/r12 - r9)*(r20 + (depth*(2*depth + z)*r13*(x*r11 + (2*depth + z)*r9))/r6 - (depth*r11 + (1 - 2*nu)*r13*(x*r11 + (2*depth + z)*r9))/r12 - (r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12)/(r12*(r12 + (2*depth + z)*r11 - x*r9))))/r23)))/(8.*PI*(1 - nu)) + (burgers_vector.c[1]*(x*y*(-(x/((r2 + r1 + r3)*r18)) - x/(r4*(-z + r10)) - x/((r2 + r1 + r5)*r17) - x/(r6*(2*depth + z + r12))) + y*(1/(r10*(-z + r10)) + 1/(r12*(2*depth + z + r12))) - y*(r11/(r10*(r10 - z*r11 - x*r9)) + r11/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - ((x/r10 - r9)*(x*r11 - z*r9))/(r10*r16) - (x*(x*r11 - z*r9))/(r4*(r10 - z*r11 - x*r9)) - ((x/r12 - r9)*(x*r11 + (2*depth + z)*r9))/(r12*r23) - (x*(x*r11 + (2*depth + z)*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) + 2*(1 - nu)*((2*y)/(r2 + r1) - (y*r11)/(r21*(1 + r1/r21)) - (y*r11)/(r24*(1 + r1/r24)) + (-((y*r10*r9*(2*x*r11 - z*r9))/r25) + (x*y*r9)/(r10*(r1*r11 + x*(x*r11 - z*r9))))/(1 + (r1*(r2 + r1 + r3)*r22)/r25) + (-((y*r12*r9*(2*x*r11 + (2*depth + z)*r9))/r26) + (x*y*r9)/(r12*(r1*r11 + x*(x*r11 + (2*depth + z)*r9))))/(1 + (r1*(r2 + r1 + r5)*r22)/r26)) + 2*((y*(depth + z)*((2*nu*r2)/(r12*r17) - (2*nu)/(2*depth + z + r12) - (depth*x*(-(x/r6) - x/(r12*r17)))/r12 + (depth*r2*(1/r12 + 1/(2*depth + z + r12)))/r6 - (depth*(1/r12 + 1/(2*depth + z + r12)))/r12))/(r12*(2*depth + z + r12)) + (3*depth*x*y*(depth + z)*r13)/r8 - (x*y*(depth + z)*((-2*nu*x)/(2*depth + z + r12) - (depth*x*(1/r12 + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*r13))/((r2 + r1 + r5)*r17) - (x*y*(depth + z)*((-2*nu*x)/(2*depth + z + r12) - (depth*x*(1/r12 + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*r13))/(r6*(2*depth + z + r12)) + ((1 - 2*nu)*y*(-((r2*(nu + depth/r12))/(r12*r17)) - (depth*r2)/(r6*(2*depth + z + r12)) + (nu + depth/r12)/(2*depth + z + r12) - (depth*x*r13)/r6))/(2*depth + z + r12) - ((1 - 2*nu)*x*y*((x*(nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu + depth/r12)*r13))/(r12*r17) + ((1 - 2*nu)*y*r13*(1 + (depth*r14)/r12)*(x/r12 - r9))/r23 + (depth*(1 - 2*nu)*x*y*r15)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (y*(depth + z)*r13*((-2*depth*x*(2*depth + z)*r14)/r7 - ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12)*(x/r12 - r9))/r23 - (depth*x*(2*depth + z + r12*r11)*r14)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (x*r11*(1 + (depth*r14)/r12))/(r12*(r12 + (2*depth + z)*r11 - x*r9))))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(depth + z)*r13*(x/r12 - r9)*(-2*(1 - nu)*r11 + (depth*(2*depth + z)*r14)/(r2 + r1 + r5) + ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*r23) - (x*y*(depth + z)*r13*(-2*(1 - nu)*r11 + (depth*(2*depth + z)*r14)/(r2 + r1 + r5) + ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + 2*(1 - 2*nu)*(1 - nu)*r19*(y/(r2 + r1) - (y*r11)/(r24*(1 + r1/r24)) + (-((y*r12*r9*(2*x*r11 + (2*depth + z)*r9))/r26) + (x*y*r9)/(r12*(r1*r11 + x*(x*r11 + (2*depth + z)*r9))))/(1 + (r1*(r2 + r1 + r5)*r22)/r26)))))/(8.*PI*(1 - nu));
        return uyx;
    }
    double uyycalc(double x, double y, double z) override
    {
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = pow(2*depth + z,2);
        double r6 = pow(r2 + r1 + r5,1.5);
        double r7 = pow(r2 + r1 + r5,2);
        double r8 = pow(r2 + r1 + r5,2.5);
        double r9 = pow(y,3);
        double r10 = sin(kappa);
        double r11 = sqrt(r2 + r1 + r3);
        double r12 = cos(kappa);
        double r13 = sqrt(r2 + r1 + r5);
        double r14 = 1/tan(kappa);
        double r15 = 1/cos(kappa);
        double r16 = 1/sin(kappa);
        double r17 = pow(r11 - z*r12 - x*r10,2);
        double r18 = pow(2*depth + z + r13,2);
        double r19 = pow(-z + r11,2);
        double r20 = pow(r14,2);
        double r21 = pow(r12,2);
        double r22 = pow(x*r12 - z*r10,2);
        double r23 = pow(r10,2);
        double r24 = pow(r13 + (2*depth + z)*r12 - x*r10,2);
        double r25 = pow(x*r12 + (2*depth + z)*r10,2);
        double r26 = pow(r1*r12 + x*(x*r12 - z*r10),2);
        double r27 = pow(r1*r12 + x*(x*r12 + (2*depth + z)*r10),2);
        double uyy=(burgers_vector.c[2]*(-(r1*r10*(-(y/((r2 + r1 + r3)*r17)) - y/(r4*(r11 - z*r12 - x*r10)) - y/((r2 + r1 + r5)*r24) - y/(r6*(r13 + (2*depth + z)*r12 - x*r10)))) - 2*y*r10*(1/(r11*(r11 - z*r12 - x*r10)) + 1/(r13*(r13 + (2*depth + z)*r12 - x*r10))) + (1 - 2*nu)*r10*(y/(r11*(r11 - z*r12 - x*r10)) + y/(r13*(r13 + (2*depth + z)*r12 - x*r10))) + 2*((x*(depth + z)*((-2*depth*y)/r7 - y/(r13*r18)))/r13 - (x*y*(depth + z)*(depth/(r2 + r1 + r5) + 1/(2*depth + z + r13)))/r6 + (1 - 2*nu)*((x*y*(1 + depth/r13))/(r13*r18) + (depth*x*y)/(r6*(2*depth + z + r13)) - (y*r10)/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - (y*(depth/r13 + r12)*(x*r12 + (2*depth + z)*r10))/(r13*r24) - (depth*y*(x*r12 + (2*depth + z)*r10))/(r6*(r13 + (2*depth + z)*r12 - x*r10))) - ((depth + z)*((depth*y*r10)/r6 - (2*depth*y*(2*depth + z)*(x*r12 + (2*depth + z)*r10))/r8 - (y*(1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r12 + (2*depth + z)*r10))/r6 - (2*y*r12*r10 - (depth*y*r12*(x*r12 + (2*depth + z)*r10))/(r2 + r1 + r5) + (depth*y*(2*depth + z + r13*r12)*(x*r12 + (2*depth + z)*r10))/r6)/(r13*(r13 + (2*depth + z)*r12 - x*r10)) + (y*(r1*r12*r10 - (depth*(2*depth + z + r13*r12)*(x*r12 + (2*depth + z)*r10))/r13))/((r2 + r1 + r5)*r24) + (y*(r1*r12*r10 - (depth*(2*depth + z + r13*r12)*(x*r12 + (2*depth + z)*r10))/r13))/(r6*(r13 + (2*depth + z)*r12 - x*r10))))/(r13 + (2*depth + z)*r12 - x*r10) + (y*(depth + z)*((-(depth/r13) + r12)*r10 + ((1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r12 + (2*depth + z)*r10))/r13 - (r1*r12*r10 - (depth*(2*depth + z + r13*r12)*(x*r12 + (2*depth + z)*r10))/r13)/(r13*(r13 + (2*depth + z)*r12 - x*r10))))/(r13*r24))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(-(r1*(-(y/((r2 + r1 + r3)*r19)) - y/(r4*(-z + r11)) - y/((r2 + r1 + r5)*r18) - y/(r6*(2*depth + z + r13)) - r12*(-(y/((r2 + r1 + r3)*r17)) - y/(r4*(r11 - z*r12 - x*r10)) - y/((r2 + r1 + r5)*r24) - y/(r6*(r13 + (2*depth + z)*r12 - x*r10))))) - 2*y*(1/(r11*(-z + r11)) + 1/(r13*(2*depth + z + r13)) - r12*(1/(r11*(r11 - z*r12 - x*r10)) + 1/(r13*(r13 + (2*depth + z)*r12 - x*r10)))) + (1 - 2*nu)*(y/(r11*(-z + r11)) + y/(r13*(2*depth + z + r13)) - r12*(y/(r11*(r11 - z*r12 - x*r10)) + y/(r13*(r13 + (2*depth + z)*r12 - x*r10)))) + 2*((3*depth*x*y*(depth + z)*r14)/r8 - ((1 - 2*nu)*(-((r9*(nu + depth/r13))/(r13*r18)) - (depth*r9)/(r6*(2*depth + z + r13)) + (2*y*(nu + depth/r13))/(2*depth + z + r13) + (depth*x*y*r14)/r6))/(2*depth + z + r13) + ((1 - 2*nu)*y*(-depth + nu*(2*depth + z) + (r1*(nu + depth/r13))/(2*depth + z + r13) + x*(1 - 2*nu - depth/r13)*r14))/(r13*r18) + ((depth + z)*((-3*depth*r9)/r8 + (2*depth*y)/r6 - (r9*(2*nu + depth/r13))/((r2 + r1 + r5)*r18) - (depth*r9)/(r7*(2*depth + z + r13)) - (r9*(2*nu + depth/r13))/(r6*(2*depth + z + r13)) + (2*y*(2*nu + depth/r13))/(r13*(2*depth + z + r13)) - (y*(-depth + (1 - 2*nu)*x*r14))/r6))/(2*depth + z + r13) - (y*(depth + z)*(-2*nu + (depth*r1)/r6 + (r1*(2*nu + depth/r13))/(r13*(2*depth + z + r13)) + (-depth + (1 - 2*nu)*x*r14)/r13))/(r13*r18) + ((1 - 2*nu)*y*(depth/r13 + r12)*r14*(x*r12 + (2*depth + z)*r10))/(r13*r24) + (depth*(1 - 2*nu)*y*r14*(x*r12 + (2*depth + z)*r10))/(r6*(r13 + (2*depth + z)*r12 - x*r10)) + (1 - 2*nu)*((y*(-nu + 2*(1 - nu)*r20))/(r13*(2*depth + z + r13)) - (y*r12*(1 - 2*nu + 2*(1 - nu)*r20))/(r13*(r13 + (2*depth + z)*r12 - x*r10))) + ((depth + z)*((-3*depth*y*(2*depth + z)*r14*(x*r12 + (2*depth + z)*r10))/r8 + (y*(depth*r12 + (1 - 2*nu)*r14*(x*r12 + (2*depth + z)*r10)))/r6 - (2*y*r21 - (depth*y*r12*r14*(x*r12 + (2*depth + z)*r10))/(r2 + r1 + r5) + (depth*y*(2*depth + z + r13*r12)*r14*(x*r12 + (2*depth + z)*r10))/r6)/(r13*(r13 + (2*depth + z)*r12 - x*r10)) + (y*(r1*r21 - (depth*(2*depth + z + r13*r12)*r14*(x*r12 + (2*depth + z)*r10))/r13))/((r2 + r1 + r5)*r24) + (y*(r1*r21 - (depth*(2*depth + z + r13*r12)*r14*(x*r12 + (2*depth + z)*r10))/r13))/(r6*(r13 + (2*depth + z)*r12 - x*r10))))/(r13 + (2*depth + z)*r12 - x*r10) - (y*(depth + z)*(r21 + (depth*(2*depth + z)*r14*(x*r12 + (2*depth + z)*r10))/r6 - (depth*r12 + (1 - 2*nu)*r14*(x*r12 + (2*depth + z)*r10))/r13 - (r1*r21 - (depth*(2*depth + z + r13*r12)*r14*(x*r12 + (2*depth + z)*r10))/r13)/(r13*(r13 + (2*depth + z)*r12 - x*r10))))/(r13*r24))))/(8.*PI*(1 - nu)) + (burgers_vector.c[1]*(x*y*(-(y/((r2 + r1 + r3)*r19)) - y/(r4*(-z + r11)) - y/((r2 + r1 + r5)*r18) - y/(r6*(2*depth + z + r13))) + x*(1/(r11*(-z + r11)) + 1/(r13*(2*depth + z + r13))) - (x*r12 - z*r10)/(r11*(r11 - z*r12 - x*r10)) - (x*r12 + (2*depth + z)*r10)/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - y*(-((y*(x*r12 - z*r10))/((r2 + r1 + r3)*r17)) - (y*(x*r12 - z*r10))/(r4*(r11 - z*r12 - x*r10)) - (y*(x*r12 + (2*depth + z)*r10))/((r2 + r1 + r5)*r24) - (y*(x*r12 + (2*depth + z)*r10))/(r6*(r13 + (2*depth + z)*r12 - x*r10))) + 2*(1 - nu)*((-2*x)/(r2 + r1) + 1/((x*r12 - z*r10)*(1 + r1/r22)) + 1/((x*r12 + (2*depth + z)*r10)*(1 + r1/r25)) + ((-2*r1*r11*r12*r10)/r26 + (r1*r10)/(r11*(r1*r12 + x*(x*r12 - z*r10))) + (r11*r10)/(r1*r12 + x*(x*r12 - z*r10)))/(1 + (r1*(r2 + r1 + r3)*r23)/r26) + ((-2*r1*r13*r12*r10)/r27 + (r1*r10)/(r13*(r1*r12 + x*(x*r12 + (2*depth + z)*r10))) + (r13*r10)/(r1*r12 + x*(x*r12 + (2*depth + z)*r10)))/(1 + (r1*(r2 + r1 + r5)*r23)/r27)) + 2*((y*(depth + z)*((2*nu*x*y)/(r13*r18) - (depth*x*(-(y/r6) - y/(r13*r18)))/r13 + (depth*x*y*(1/r13 + 1/(2*depth + z + r13)))/r6))/(r13*(2*depth + z + r13)) + (3*depth*r1*(depth + z)*r14)/r8 - (depth*(depth + z)*r14)/r6 - (r1*(depth + z)*((-2*nu*x)/(2*depth + z + r13) - (depth*x*(1/r13 + 1/(2*depth + z + r13)))/r13 + (1 - 2*nu)*r14))/((r2 + r1 + r5)*r18) - (r1*(depth + z)*((-2*nu*x)/(2*depth + z + r13) - (depth*x*(1/r13 + 1/(2*depth + z + r13)))/r13 + (1 - 2*nu)*r14))/(r6*(2*depth + z + r13)) + ((depth + z)*((-2*nu*x)/(2*depth + z + r13) - (depth*x*(1/r13 + 1/(2*depth + z + r13)))/r13 + (1 - 2*nu)*r14))/(r13*(2*depth + z + r13)) + ((1 - 2*nu)*y*(-((x*y*(nu + depth/r13))/(r13*r18)) - (depth*x*y)/(r6*(2*depth + z + r13)) - (depth*y*r14)/r6))/(2*depth + z + r13) - ((1 - 2*nu)*r1*((x*(nu + depth/r13))/(2*depth + z + r13) + (-1 + 2*nu + depth/r13)*r14))/(r13*r18) + ((1 - 2*nu)*((x*(nu + depth/r13))/(2*depth + z + r13) + (-1 + 2*nu + depth/r13)*r14))/(2*depth + z + r13) + ((1 - 2*nu)*r1*r14*(1 + (depth*r15)/r13))/(r13*r24) + (depth*(1 - 2*nu)*r1*r16)/(r6*(r13 + (2*depth + z)*r12 - x*r10)) - ((1 - 2*nu)*r14*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10) + (y*(depth + z)*r14*((-2*depth*y*(2*depth + z)*r15)/r7 - (y*(2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13*r24) - (depth*y*(2*depth + z + r13*r12)*r15)/(r6*(r13 + (2*depth + z)*r12 - x*r10)) + (y*r12*(1 + (depth*r15)/r13))/(r13*(r13 + (2*depth + z)*r12 - x*r10))))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) - (r1*(depth + z)*r14*(-2*(1 - nu)*r12 + (depth*(2*depth + z)*r15)/(r2 + r1 + r5) + ((2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10)))/((r2 + r1 + r5)*r24) - (r1*(depth + z)*r14*(-2*(1 - nu)*r12 + (depth*(2*depth + z)*r15)/(r2 + r1 + r5) + ((2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10)))/(r6*(r13 + (2*depth + z)*r12 - x*r10)) + ((depth + z)*r14*(-2*(1 - nu)*r12 + (depth*(2*depth + z)*r15)/(r2 + r1 + r5) + ((2*depth + z + r13*r12)*(1 + (depth*r15)/r13))/(r13 + (2*depth + z)*r12 - x*r10)))/(r13*(r13 + (2*depth + z)*r12 - x*r10)) + 2*(1 - 2*nu)*(1 - nu)*r20*(-(x/(r2 + r1)) + 1/((x*r12 + (2*depth + z)*r10)*(1 + r1/r25)) + ((-2*r1*r13*r12*r10)/r27 + (r1*r10)/(r13*(r1*r12 + x*(x*r12 + (2*depth + z)*r10))) + (r13*r10)/(r1*r12 + x*(x*r12 + (2*depth + z)*r10)))/(1 + (r1*(r2 + r1 + r5)*r23)/r27)))))/(8.*PI*(1 - nu));
        return uyy;
    }
    double uyzcalc(double x, double y, double z) override
    {
        double r1 = pow(y,2);
        double r2 = pow(x,2);
        double r3 = pow(z,2);
        double r4 = pow(r2 + r1 + r3,1.5);
        double r5 = pow(2*depth + z,2);
        double r6 = pow(r2 + r1 + r5,1.5);
        double r7 = pow(r2 + r1 + r5,2);
        double r8 = pow(r2 + r1 + r5,2.5);
        double r9 = sin(kappa);
        double r10 = sqrt(r2 + r1 + r3);
        double r11 = cos(kappa);
        double r12 = sqrt(r2 + r1 + r5);
        double r13 = 1/tan(kappa);
        double r14 = 1/cos(kappa);
        double r15 = 1/sin(kappa);
        double r16 = pow(r10 - z*r11 - x*r9,2);
        double r17 = pow(2*depth + z + r12,2);
        double r18 = pow(-z + r10,2);
        double r19 = pow(r13,2);
        double r20 = pow(r11,2);
        double r21 = pow(x*r11 - z*r9,2);
        double r22 = pow(r9,2);
        double r23 = pow(r12 + (2*depth + z)*r11 - x*r9,2);
        double r24 = pow(x*r11 + (2*depth + z)*r9,2);
        double r25 = pow(r1*r11 + x*(x*r11 - z*r9),2);
        double r26 = pow(r1*r11 + x*(x*r11 + (2*depth + z)*r9),2);
        double uyz=(burgers_vector.c[2]*(-(r1*r9*(-((z/r10 - r11)/(r10*r16)) - z/(r4*(r10 - z*r11 - x*r9)) - ((2*depth + z)/r12 + r11)/(r12*r23) - (2*depth + z)/(r6*(r12 + (2*depth + z)*r11 - x*r9)))) + (1 - 2*nu)*r9*((z/r10 - r11)/(r10 - z*r11 - x*r9) + ((2*depth + z)/r12 + r11)/(r12 + (2*depth + z)*r11 - x*r9)) + 2*((x*(depth + z)*((-2*depth*(2*depth + z))/r7 - (1 + (2*depth + z)/r12)/r17))/r12 - (x*(depth + z)*(2*depth + z)*(depth/(r2 + r1 + r5) + 1/(2*depth + z + r12)))/r6 + (x*(depth/(r2 + r1 + r5) + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*((x*(1 + depth/r12)*(1 + (2*depth + z)/r12))/r17 + (depth*x*(2*depth + z))/(r6*(2*depth + z + r12)) + ((depth/r12 + r11)*r9)/(r12 + (2*depth + z)*r11 - x*r9) - (((2*depth + z)/r12 + r11)*r9)/(r12 + (2*depth + z)*r11 - x*r9) - ((depth/r12 + r11)*((2*depth + z)/r12 + r11)*(x*r11 + (2*depth + z)*r9))/r23 - (depth*(2*depth + z)*(x*r11 + (2*depth + z)*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) - ((depth + z)*((depth*(2*depth + z)*r9)/r6 + ((1 + (depth*(2*depth + z))/(r2 + r1 + r5))*r9)/r12 + (((-2*depth*r5)/r7 + depth/(r2 + r1 + r5))*(x*r11 + (2*depth + z)*r9))/r12 - ((2*depth + z)*(1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r11 + (2*depth + z)*r9))/r6 - (-((depth*(2*depth + z + r12*r11)*r9)/r12) - (depth*(1 + ((2*depth + z)*r11)/r12)*(x*r11 + (2*depth + z)*r9))/r12 + (depth*(2*depth + z)*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r6)/(r12*(r12 + (2*depth + z)*r11 - x*r9)) + (((2*depth + z)/r12 + r11)*(r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12))/(r12*r23) + ((2*depth + z)*(r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12))/(r6*(r12 + (2*depth + z)*r11 - x*r9))))/(r12 + (2*depth + z)*r11 - x*r9) + ((depth + z)*((2*depth + z)/r12 + r11)*((-(depth/r12) + r11)*r9 + ((1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r11 + (2*depth + z)*r9))/r12 - (r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12)/(r12*(r12 + (2*depth + z)*r11 - x*r9))))/r23 - ((-(depth/r12) + r11)*r9 + ((1 + (depth*(2*depth + z))/(r2 + r1 + r5))*(x*r11 + (2*depth + z)*r9))/r12 - (r1*r11*r9 - (depth*(2*depth + z + r12*r11)*(x*r11 + (2*depth + z)*r9))/r12)/(r12*(r12 + (2*depth + z)*r11 - x*r9)))/(r12 + (2*depth + z)*r11 - x*r9))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(-(r1*(-((-1 + z/r10)/(r10*r18)) - z/(r4*(-z + r10)) - (1 + (2*depth + z)/r12)/(r12*r17) - (2*depth + z)/(r6*(2*depth + z + r12)) - r11*(-((z/r10 - r11)/(r10*r16)) - z/(r4*(r10 - z*r11 - x*r9)) - ((2*depth + z)/r12 + r11)/(r12*r23) - (2*depth + z)/(r6*(r12 + (2*depth + z)*r11 - x*r9))))) + (1 - 2*nu)*((-1 + z/r10)/(-z + r10) + (1 + (2*depth + z)/r12)/(2*depth + z + r12) - r11*((z/r10 - r11)/(r10 - z*r11 - x*r9) + ((2*depth + z)/r12 + r11)/(r12 + (2*depth + z)*r11 - x*r9))) + 2*((3*depth*x*(depth + z)*(2*depth + z)*r13)/r8 - (depth*x*r13)/r6 - ((1 - 2*nu)*(nu - (r1*(nu + depth/r12)*(1 + (2*depth + z)/r12))/r17 - (depth*r1*(2*depth + z))/(r6*(2*depth + z + r12)) + (depth*x*(2*depth + z)*r13)/r6))/(2*depth + z + r12) + ((1 - 2*nu)*(1 + (2*depth + z)/r12)*(-depth + nu*(2*depth + z) + (r1*(nu + depth/r12))/(2*depth + z + r12) + x*(1 - 2*nu - depth/r12)*r13))/r17 + ((depth + z)*((-3*depth*r1*(2*depth + z))/r8 - (r1*(2*nu + depth/r12)*(1 + (2*depth + z)/r12))/(r12*r17) - (depth*r1*(2*depth + z))/(r7*(2*depth + z + r12)) - (r1*(2*depth + z)*(2*nu + depth/r12))/(r6*(2*depth + z + r12)) - ((2*depth + z)*(-depth + (1 - 2*nu)*x*r13))/r6))/(2*depth + z + r12) - ((depth + z)*(1 + (2*depth + z)/r12)*(-2*nu + (depth*r1)/r6 + (r1*(2*nu + depth/r12))/(r12*(2*depth + z + r12)) + (-depth + (1 - 2*nu)*x*r13)/r12))/r17 + (-2*nu + (depth*r1)/r6 + (r1*(2*nu + depth/r12))/(r12*(2*depth + z + r12)) + (-depth + (1 - 2*nu)*x*r13)/r12)/(2*depth + z + r12) - ((1 - 2*nu)*r11*(depth/r12 + r11))/(r12 + (2*depth + z)*r11 - x*r9) + ((1 - 2*nu)*(depth/r12 + r11)*((2*depth + z)/r12 + r11)*r13*(x*r11 + (2*depth + z)*r9))/r23 + (depth*(1 - 2*nu)*(2*depth + z)*r13*(x*r11 + (2*depth + z)*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (1 - 2*nu)*(((1 + (2*depth + z)/r12)*(-nu + 2*(1 - nu)*r19))/(2*depth + z + r12) - (r11*((2*depth + z)/r12 + r11)*(1 - 2*nu + 2*(1 - nu)*r19))/(r12 + (2*depth + z)*r11 - x*r9)) + ((depth + z)*((depth*(2*depth + z)*r11)/r6 - ((1 - 2*nu)*r11)/r12 - (3*depth*r5*r13*(x*r11 + (2*depth + z)*r9))/r8 + (depth*r13*(x*r11 + (2*depth + z)*r9))/r6 + ((2*depth + z)*(depth*r11 + (1 - 2*nu)*r13*(x*r11 + (2*depth + z)*r9)))/r6 - (-((depth*r11*(2*depth + z + r12*r11))/r12) - (depth*(1 + ((2*depth + z)*r11)/r12)*r13*(x*r11 + (2*depth + z)*r9))/r12 + (depth*(2*depth + z)*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r6)/(r12*(r12 + (2*depth + z)*r11 - x*r9)) + (((2*depth + z)/r12 + r11)*(r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12))/(r12*r23) + ((2*depth + z)*(r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12))/(r6*(r12 + (2*depth + z)*r11 - x*r9))))/(r12 + (2*depth + z)*r11 - x*r9) - ((depth + z)*((2*depth + z)/r12 + r11)*(r20 + (depth*(2*depth + z)*r13*(x*r11 + (2*depth + z)*r9))/r6 - (depth*r11 + (1 - 2*nu)*r13*(x*r11 + (2*depth + z)*r9))/r12 - (r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12)/(r12*(r12 + (2*depth + z)*r11 - x*r9))))/r23 + (r20 + (depth*(2*depth + z)*r13*(x*r11 + (2*depth + z)*r9))/r6 - (depth*r11 + (1 - 2*nu)*r13*(x*r11 + (2*depth + z)*r9))/r12 - (r1*r20 - (depth*(2*depth + z + r12*r11)*r13*(x*r11 + (2*depth + z)*r9))/r12)/(r12*(r12 + (2*depth + z)*r11 - x*r9)))/(r12 + (2*depth + z)*r11 - x*r9))))/(8.*PI*(1 - nu)) + (burgers_vector.c[1]*(x*y*(-((-1 + z/r10)/(r10*r18)) - z/(r4*(-z + r10)) - (1 + (2*depth + z)/r12)/(r12*r17) - (2*depth + z)/(r6*(2*depth + z + r12))) - y*(-(r9/(r10*(r10 - z*r11 - x*r9))) + r9/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - ((z/r10 - r11)*(x*r11 - z*r9))/(r10*r16) - (z*(x*r11 - z*r9))/(r4*(r10 - z*r11 - x*r9)) - (((2*depth + z)/r12 + r11)*(x*r11 + (2*depth + z)*r9))/(r12*r23) - ((2*depth + z)*(x*r11 + (2*depth + z)*r9))/(r6*(r12 + (2*depth + z)*r11 - x*r9))) + 2*(1 - nu)*((y*r9)/(r21*(1 + r1/r21)) - (y*r9)/(r24*(1 + r1/r24)) + ((x*y*r10*r22)/r25 + (y*z*r9)/(r10*(r1*r11 + x*(x*r11 - z*r9))))/(1 + (r1*(r2 + r1 + r3)*r22)/r25) + (-((x*y*r12*r22)/r26) + (y*(2*depth + z)*r9)/(r12*(r1*r11 + x*(x*r11 + (2*depth + z)*r9))))/(1 + (r1*(r2 + r1 + r5)*r22)/r26)) + 2*((y*(depth + z)*((2*nu*x*(1 + (2*depth + z)/r12))/r17 - (depth*x*(-((2*depth + z)/r6) - (1 + (2*depth + z)/r12)/r17))/r12 + (depth*x*(2*depth + z)*(1/r12 + 1/(2*depth + z + r12)))/r6))/(r12*(2*depth + z + r12)) + (3*depth*y*(depth + z)*(2*depth + z)*r13)/r8 - (depth*y*r13)/r6 - (y*(depth + z)*(1 + (2*depth + z)/r12)*((-2*nu*x)/(2*depth + z + r12) - (depth*x*(1/r12 + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*r13))/(r12*r17) - (y*(depth + z)*(2*depth + z)*((-2*nu*x)/(2*depth + z + r12) - (depth*x*(1/r12 + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*r13))/(r6*(2*depth + z + r12)) + (y*((-2*nu*x)/(2*depth + z + r12) - (depth*x*(1/r12 + 1/(2*depth + z + r12)))/r12 + (1 - 2*nu)*r13))/(r12*(2*depth + z + r12)) + ((1 - 2*nu)*y*(-((x*(nu + depth/r12)*(1 + (2*depth + z)/r12))/r17) - (depth*x*(2*depth + z))/(r6*(2*depth + z + r12)) - (depth*(2*depth + z)*r13)/r6))/(2*depth + z + r12) - ((1 - 2*nu)*y*(1 + (2*depth + z)/r12)*((x*(nu + depth/r12))/(2*depth + z + r12) + (-1 + 2*nu + depth/r12)*r13))/r17 + ((1 - 2*nu)*y*((2*depth + z)/r12 + r11)*r13*(1 + (depth*r14)/r12))/r23 + (depth*(1 - 2*nu)*y*(2*depth + z)*r15)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (y*(depth + z)*r13*((-2*depth*r5*r14)/r7 + (depth*r14)/(r2 + r1 + r5) - (((2*depth + z)/r12 + r11)*(2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/r23 - (depth*(2*depth + z)*(2*depth + z + r12*r11)*r14)/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + ((1 + ((2*depth + z)*r11)/r12)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) - (y*(depth + z)*((2*depth + z)/r12 + r11)*r13*(-2*(1 - nu)*r11 + (depth*(2*depth + z)*r14)/(r2 + r1 + r5) + ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*r23) - (y*(depth + z)*(2*depth + z)*r13*(-2*(1 - nu)*r11 + (depth*(2*depth + z)*r14)/(r2 + r1 + r5) + ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r6*(r12 + (2*depth + z)*r11 - x*r9)) + (y*r13*(-2*(1 - nu)*r11 + (depth*(2*depth + z)*r14)/(r2 + r1 + r5) + ((2*depth + z + r12*r11)*(1 + (depth*r14)/r12))/(r12 + (2*depth + z)*r11 - x*r9)))/(r12*(r12 + (2*depth + z)*r11 - x*r9)) + 2*(1 - 2*nu)*(1 - nu)*r19*(-((y*r9)/(r24*(1 + r1/r24))) + (-((x*y*r12*r22)/r26) + (y*(2*depth + z)*r9)/(r12*(r1*r11 + x*(x*r11 + (2*depth + z)*r9))))/(1 + (r1*(r2 + r1 + r5)*r22)/r26)))))/(8.*PI*(1 - nu));
        return uyz;
    }
    double uzxcalc(double x, double y, double z) override
    {
        double r1 = pow(x,2);
        double r2 = pow(y,2);
        double r3 = pow(z,2);
        double r4 = pow(2*depth + z,2);
        double r5 = pow(r1 + r2 + r3,1.5);
        double r6 = pow(r1 + r2 + r4,1.5);
        double r7 = pow(r1 + r2 + r4,2);
        double r8 = sqrt(r1 + r2 + r3);
        double r9 = sqrt(r1 + r2 + r4);
        double r10 = cos(kappa);
        double r11 = sin(kappa);
        double r12 = 1/tan(kappa);
        double r13 = pow(r8 - z*r10 - x*r11,2);
        double r14 = pow(2*depth + z + r9,2);
        double r15 = pow(x*r10 - z*r11,2);
        double r16 = pow(r11,2);
        double r17 = pow(r9 + (2*depth + z)*r10 - x*r11,2);
        double r18 = pow(x*r10 + (2*depth + z)*r11,2);
        double r19 = pow(r2*r10 + x*(x*r10 - z*r11),2);
        double r20 = pow(r2*r10 + x*(x*r10 + (2*depth + z)*r11),2);
        double uzx=(burgers_vector.c[1]*(-(1/r8) + 1/r9 - x*(-(x/r5) + x/r6) + (r10*(-z + r8*r10))/(r8*(r8 - z*r10 - x*r11)) - (r10*(2*depth + z + r9*r10))/(r9*(r9 + (2*depth + z)*r10 - x*r11)) - ((-z + r8*r10)*(x/r8 - r11)*(x*r10 - z*r11))/(r8*r13) + (x*r10*(x*r10 - z*r11))/((r1 + r2 + r3)*(r8 - z*r10 - x*r11)) - (x*(-z + r8*r10)*(x*r10 - z*r11))/(r5*(r8 - z*r10 - x*r11)) + ((2*depth + z + r9*r10)*(x/r9 - r11)*(x*r10 + (2*depth + z)*r11))/(r9*r17) - (x*r10*(x*r10 + (2*depth + z)*r11))/((r1 + r2 + r4)*(r9 + (2*depth + z)*r10 - x*r11)) + (x*(2*depth + z + r9*r10)*(x*r10 + (2*depth + z)*r11))/(r6*(r9 + (2*depth + z)*r10 - x*r11)) + (-1 + 2*nu)*r11*((x/r8 - r11)/(r8 - z*r10 - x*r11) - (x/r9 - r11)/(r9 + (2*depth + z)*r10 - x*r11)) + 2*((2*(1 - nu)*r1*(2*nu + depth/r9))/(r9*r14) + (2*depth*(1 - nu)*r1)/(r6*(2*depth + z + r9)) - (2*(1 - nu)*(2*nu + depth/r9))/(2*depth + z + r9) + ((depth + z)*((2*depth*r1)/r7 - depth/(r1 + r2 + r4) + (2*nu*r1)/(r9*r14) - (2*nu)/(2*depth + z + r9)))/r9 - (x*(depth + z)*(-((depth*x)/(r1 + r2 + r4)) - (2*nu*x)/(2*depth + z + r9) + (1 - 2*nu)*r12))/r6 + (2*(1 - nu)*r10*(depth/r9 + r10))/(r9 + (2*depth + z)*r10 - x*r11) - (2*(1 - nu)*(depth/r9 + r10)*(x/r9 - r11)*(x*r10 + (2*depth + z)*r11))/r17 - (2*depth*(1 - nu)*x*(x*r10 + (2*depth + z)*r11))/(r6*(r9 + (2*depth + z)*r10 - x*r11)) - 2*(1 - 2*nu)*(1 - nu)*r12*(x/(r9*(2*depth + z + r9)) - (r10*(x/r9 - r11))/(r9 + (2*depth + z)*r10 - x*r11)) - ((depth + z)*(((2*depth + z + r9*r10)*r12*(((2*depth + z + r9*r10)*(x/r9 - r11))/r17 - (x*r10)/(r9*(r9 + (2*depth + z)*r10 - x*r11))))/r9 + (x*r10*r12*(2*(1 - nu)*r10 - (2*depth + z + r9*r10)/(r9 + (2*depth + z)*r10 - x*r11)))/(r1 + r2 + r4) - (x*(2*depth + z + r9*r10)*r12*(2*(1 - nu)*r10 - (2*depth + z + r9*r10)/(r9 + (2*depth + z)*r10 - x*r11)))/r6 + (depth*(-(((2*depth + z)*r10)/(r1 + r2 + r4)) - (r10*(2*depth + z + r9*r10))/(r9*(r9 + (2*depth + z)*r10 - x*r11)) + (2*x*(2*depth + z)*(x*r10 + (2*depth + z)*r11))/r7 + ((2*depth + z + r9*r10)*(x/r9 - r11)*(x*r10 + (2*depth + z)*r11))/(r9*r17) - (x*r10*(x*r10 + (2*depth + z)*r11))/((r1 + r2 + r4)*(r9 + (2*depth + z)*r10 - x*r11)) + (x*(2*depth + z + r9*r10)*(x*r10 + (2*depth + z)*r11))/(r6*(r9 + (2*depth + z)*r10 - x*r11))))/r9 - (depth*x*(r11 - ((2*depth + z)*(x*r10 + (2*depth + z)*r11))/(r1 + r2 + r4) - ((2*depth + z + r9*r10)*(x*r10 + (2*depth + z)*r11))/(r9*(r9 + (2*depth + z)*r10 - x*r11))))/r6))/(r9 + (2*depth + z)*r10 - x*r11) + ((depth + z)*(x/r9 - r11)*(r10*r11 + ((2*depth + z + r9*r10)*r12*(2*(1 - nu)*r10 - (2*depth + z + r9*r10)/(r9 + (2*depth + z)*r10 - x*r11)))/r9 + (depth*(r11 - ((2*depth + z)*(x*r10 + (2*depth + z)*r11))/(r1 + r2 + r4) - ((2*depth + z + r9*r10)*(x*r10 + (2*depth + z)*r11))/(r9*(r9 + (2*depth + z)*r10 - x*r11))))/r9))/r17)))/(8.*PI*(1 - nu)) + (burgers_vector.c[2]*(y*r11*(-(((-z + r8*r10)*(x/r8 - r11))/(r8*r13)) + (x*r10)/((r1 + r2 + r3)*(r8 - z*r10 - x*r11)) - (x*(-z + r8*r10))/(r5*(r8 - z*r10 - x*r11)) + ((2*depth + z + r9*r10)*(x/r9 - r11))/(r9*r17) - (x*r10)/((r1 + r2 + r4)*(r9 + (2*depth + z)*r10 - x*r11)) + (x*(2*depth + z + r9*r10))/(r6*(r9 + (2*depth + z)*r10 - x*r11))) + 2*(1 - nu)*(-((y*r10)/(r15*(1 + r2/r15))) + (y*r10)/(r18*(1 + r2/r18)) + (-((y*r8*r11*(2*x*r10 - z*r11))/r19) + (x*y*r11)/(r8*(r2*r10 + x*(x*r10 - z*r11))))/(1 + (r2*(r1 + r2 + r3)*r16)/r19) - (-((y*r9*r11*(2*x*r10 + (2*depth + z)*r11))/r20) + (x*y*r11)/(r9*(r2*r10 + x*(x*r10 + (2*depth + z)*r11))))/(1 + (r2*(r1 + r2 + r4)*r16)/r20)) + 2*((y*(depth + z)*r11*((-2*depth*x*(2*depth + z))/r7 - ((depth/r9 + r10)*(2*depth + z + r9*r10)*(x/r9 - r11))/r17 + (x*r10*(depth/r9 + r10))/(r9*(r9 + (2*depth + z)*r10 - x*r11)) - (depth*x*(2*depth + z + r9*r10))/(r6*(r9 + (2*depth + z)*r10 - x*r11))))/(r9*(r9 + (2*depth + z)*r10 - x*r11)) - (y*(depth + z)*(x/r9 - r11)*r11*(1 + (depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r9 + r10)*(2*depth + z + r9*r10))/(r9 + (2*depth + z)*r10 - x*r11)))/(r9*r17) - (x*y*(depth + z)*r11*(1 + (depth*(2*depth + z))/(r1 + r2 + r4) + ((depth/r9 + r10)*(2*depth + z + r9*r10))/(r9 + (2*depth + z)*r10 - x*r11)))/(r6*(r9 + (2*depth + z)*r10 - x*r11)) + 2*(1 - nu)*(y/(r1 + r2) - (y*(depth/r9 + r10)*(x/r9 - r11)*r11)/r17 - (depth*x*y*r11)/(r6*(r9 + (2*depth + z)*r10 - x*r11)) - (y*r10)/(r18*(1 + r2/r18)) + (-((y*r9*r11*(2*x*r10 + (2*depth + z)*r11))/r20) + (x*y*r11)/(r9*(r2*r10 + x*(x*r10 + (2*depth + z)*r11))))/(1 + (r2*(r1 + r2 + r4)*r16)/r20)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(y*(-(x/r5) + x/r6 - r10*(-(((-z + r8*r10)*(x/r8 - r11))/(r8*r13)) + (x*r10)/((r1 + r2 + r3)*(r8 - z*r10 - x*r11)) - (x*(-z + r8*r10))/(r5*(r8 - z*r10 - x*r11)) + ((2*depth + z + r9*r10)*(x/r9 - r11))/(r9*r17) - (x*r10)/((r1 + r2 + r4)*(r9 + (2*depth + z)*r10 - x*r11)) + (x*(2*depth + z + r9*r10))/(r6*(r9 + (2*depth + z)*r10 - x*r11)))) + 2*((y*(depth + z)*((-2*depth*x)/r7 - (2*nu*x)/(r9*r14)))/r9 - (x*y*(depth + z)*(depth/(r1 + r2 + r4) + (2*nu)/(2*depth + z + r9)))/r6 + (y*(depth + z)*r10*((2*depth*x*(2*depth + z))/r7 + ((depth/r9 + r10)*(2*depth + z + r9*r10)*(x/r9 - r11))/r17 - (x*r10*(depth/r9 + r10))/(r9*(r9 + (2*depth + z)*r10 - x*r11)) + (depth*x*(2*depth + z + r9*r10))/(r6*(r9 + (2*depth + z)*r10 - x*r11))))/(r9*(r9 + (2*depth + z)*r10 - x*r11)) - (y*(depth + z)*r10*(x/r9 - r11)*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r4) - ((depth/r9 + r10)*(2*depth + z + r9*r10))/(r9 + (2*depth + z)*r10 - x*r11)))/(r9*r17) - (x*y*(depth + z)*r10*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r4) - ((depth/r9 + r10)*(2*depth + z + r9*r10))/(r9 + (2*depth + z)*r10 - x*r11)))/(r6*(r9 + (2*depth + z)*r10 - x*r11)) + 2*(1 - nu)*(-((x*y*(2*nu + depth/r9))/(r9*r14)) - (depth*x*y)/(r6*(2*depth + z + r9)) + (y*r10*(depth/r9 + r10)*(x/r9 - r11))/r17 + (depth*x*y*r10)/(r6*(r9 + (2*depth + z)*r10 - x*r11)) + (1 - 2*nu)*r12*(y/(r1 + r2) - (y*r10)/(r18*(1 + r2/r18)) + (-((y*r9*r11*(2*x*r10 + (2*depth + z)*r11))/r20) + (x*y*r11)/(r9*(r2*r10 + x*(x*r10 + (2*depth + z)*r11))))/(1 + (r2*(r1 + r2 + r4)*r16)/r20))))))/(8.*PI*(1 - nu));
        return uzx;
    }
    double uzycalc(double x, double y, double z) override
    {
        double r1 = pow(x,2);
        double r2 = pow(y,2);
        double r3 = pow(z,2);
        double r4 = pow(r1 + r2 + r3,1.5);
        double r5 = pow(2*depth + z,2);
        double r6 = pow(r1 + r2 + r5,1.5);
        double r7 = pow(r1 + r2 + r5,2);
        double r8 = sqrt(r1 + r2 + r3);
        double r9 = cos(kappa);
        double r10 = sin(kappa);
        double r11 = sqrt(r1 + r2 + r5);
        double r12 = 1/tan(kappa);
        double r13 = pow(r8 - z*r9 - x*r10,2);
        double r14 = pow(2*depth + z + r11,2);
        double r15 = pow(x*r9 - z*r10,2);
        double r16 = pow(r10,2);
        double r17 = pow(r11 + (2*depth + z)*r9 - x*r10,2);
        double r18 = pow(x*r9 + (2*depth + z)*r10,2);
        double r19 = pow(r2*r9 + x*(x*r9 - z*r10),2);
        double r20 = pow(r2*r9 + x*(x*r9 + (2*depth + z)*r10),2);
        double uzy=(burgers_vector.c[1]*(-(x*(-(y/r4) + y/r6)) - (y*(-z + r8*r9)*(x*r9 - z*r10))/((r1 + r2 + r3)*r13) + (y*r9*(x*r9 - z*r10))/((r1 + r2 + r3)*(r8 - z*r9 - x*r10)) - (y*(-z + r8*r9)*(x*r9 - z*r10))/(r4*(r8 - z*r9 - x*r10)) + (y*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/((r1 + r2 + r5)*r17) - (y*r9*(x*r9 + (2*depth + z)*r10))/((r1 + r2 + r5)*(r11 + (2*depth + z)*r9 - x*r10)) + (y*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + (-1 + 2*nu)*r10*(y/(r8*(r8 - z*r9 - x*r10)) - y/(r11*(r11 + (2*depth + z)*r9 - x*r10))) + 2*((2*(1 - nu)*x*y*(2*nu + depth/r11))/(r11*r14) + (2*depth*(1 - nu)*x*y)/(r6*(2*depth + z + r11)) + ((depth + z)*((2*depth*x*y)/r7 + (2*nu*x*y)/(r11*r14)))/r11 - (y*(depth + z)*(-((depth*x)/(r1 + r2 + r5)) - (2*nu*x)/(2*depth + z + r11) + (1 - 2*nu)*r12))/r6 - (2*(1 - nu)*y*(depth/r11 + r9)*(x*r9 + (2*depth + z)*r10))/(r11*r17) - (2*depth*(1 - nu)*y*(x*r9 + (2*depth + z)*r10))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) - 2*(1 - 2*nu)*(1 - nu)*r12*(y/(r11*(2*depth + z + r11)) - (y*r9)/(r11*(r11 + (2*depth + z)*r9 - x*r10))) - ((depth + z)*(((2*depth + z + r11*r9)*r12*((y*(2*depth + z + r11*r9))/(r11*r17) - (y*r9)/(r11*(r11 + (2*depth + z)*r9 - x*r10))))/r11 + (y*r9*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/(r1 + r2 + r5) - (y*(2*depth + z + r11*r9)*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/r6 + (depth*((2*y*(2*depth + z)*(x*r9 + (2*depth + z)*r10))/r7 + (y*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/((r1 + r2 + r5)*r17) - (y*r9*(x*r9 + (2*depth + z)*r10))/((r1 + r2 + r5)*(r11 + (2*depth + z)*r9 - x*r10)) + (y*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r6*(r11 + (2*depth + z)*r9 - x*r10))))/r11 - (depth*y*(r10 - ((2*depth + z)*(x*r9 + (2*depth + z)*r10))/(r1 + r2 + r5) - ((2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10))))/r6))/(r11 + (2*depth + z)*r9 - x*r10) + (y*(depth + z)*(r9*r10 + ((2*depth + z + r11*r9)*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/r11 + (depth*(r10 - ((2*depth + z)*(x*r9 + (2*depth + z)*r10))/(r1 + r2 + r5) - ((2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10))))/r11))/(r11*r17))))/(8.*PI*(1 - nu)) + (burgers_vector.c[2]*(y*r10*(-((y*(-z + r8*r9))/((r1 + r2 + r3)*r13)) + (y*r9)/((r1 + r2 + r3)*(r8 - z*r9 - x*r10)) - (y*(-z + r8*r9))/(r4*(r8 - z*r9 - x*r10)) + (y*(2*depth + z + r11*r9))/((r1 + r2 + r5)*r17) - (y*r9)/((r1 + r2 + r5)*(r11 + (2*depth + z)*r9 - x*r10)) + (y*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10))) + r10*((-z + r8*r9)/(r8*(r8 - z*r9 - x*r10)) - (2*depth + z + r11*r9)/(r11*(r11 + (2*depth + z)*r9 - x*r10))) + 2*(1 - nu)*(1/((x*r9 - z*r10)*(1 + r2/r15)) - 1/((x*r9 + (2*depth + z)*r10)*(1 + r2/r18)) + ((-2*r2*r8*r9*r10)/r19 + (r2*r10)/(r8*(r2*r9 + x*(x*r9 - z*r10))) + (r8*r10)/(r2*r9 + x*(x*r9 - z*r10)))/(1 + (r2*(r1 + r2 + r3)*r16)/r19) - ((-2*r2*r11*r9*r10)/r20 + (r2*r10)/(r11*(r2*r9 + x*(x*r9 + (2*depth + z)*r10))) + (r11*r10)/(r2*r9 + x*(x*r9 + (2*depth + z)*r10)))/(1 + (r2*(r1 + r2 + r5)*r16)/r20)) + 2*((y*(depth + z)*r10*((-2*depth*y*(2*depth + z))/r7 - (y*(depth/r11 + r9)*(2*depth + z + r11*r9))/(r11*r17) + (y*r9*(depth/r11 + r9))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) - (depth*y*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10))))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) - (r2*(depth + z)*r10*(1 + (depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/((r1 + r2 + r5)*r17) - (r2*(depth + z)*r10*(1 + (depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + ((depth + z)*r10*(1 + (depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + 2*(1 - nu)*(-(x/(r1 + r2)) - (r2*(depth/r11 + r9)*r10)/(r11*r17) - (depth*r2*r10)/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + ((depth/r11 + r9)*r10)/(r11 + (2*depth + z)*r9 - x*r10) + 1/((x*r9 + (2*depth + z)*r10)*(1 + r2/r18)) + ((-2*r2*r11*r9*r10)/r20 + (r2*r10)/(r11*(r2*r9 + x*(x*r9 + (2*depth + z)*r10))) + (r11*r10)/(r2*r9 + x*(x*r9 + (2*depth + z)*r10)))/(1 + (r2*(r1 + r2 + r5)*r16)/r20)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(1/r8 - 1/r11 - r9*((-z + r8*r9)/(r8*(r8 - z*r9 - x*r10)) - (2*depth + z + r11*r9)/(r11*(r11 + (2*depth + z)*r9 - x*r10))) + y*(-(y/r4) + y/r6 - r9*(-((y*(-z + r8*r9))/((r1 + r2 + r3)*r13)) + (y*r9)/((r1 + r2 + r3)*(r8 - z*r9 - x*r10)) - (y*(-z + r8*r9))/(r4*(r8 - z*r9 - x*r10)) + (y*(2*depth + z + r11*r9))/((r1 + r2 + r5)*r17) - (y*r9)/((r1 + r2 + r5)*(r11 + (2*depth + z)*r9 - x*r10)) + (y*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10)))) + 2*((y*(depth + z)*((-2*depth*y)/r7 - (2*nu*y)/(r11*r14)))/r11 - (r2*(depth + z)*(depth/(r1 + r2 + r5) + (2*nu)/(2*depth + z + r11)))/r6 + ((depth + z)*(depth/(r1 + r2 + r5) + (2*nu)/(2*depth + z + r11)))/r11 + (y*(depth + z)*r9*((2*depth*y*(2*depth + z))/r7 + (y*(depth/r11 + r9)*(2*depth + z + r11*r9))/(r11*r17) - (y*r9*(depth/r11 + r9))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + (depth*y*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10))))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) - (r2*(depth + z)*r9*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r5) - ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/((r1 + r2 + r5)*r17) - (r2*(depth + z)*r9*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r5) - ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + ((depth + z)*r9*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r5) - ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + 2*(1 - nu)*(-((r2*(2*nu + depth/r11))/(r11*r14)) - (depth*r2)/(r6*(2*depth + z + r11)) + (2*nu + depth/r11)/(2*depth + z + r11) + (r2*r9*(depth/r11 + r9))/(r11*r17) + (depth*r2*r9)/(r6*(r11 + (2*depth + z)*r9 - x*r10)) - (r9*(depth/r11 + r9))/(r11 + (2*depth + z)*r9 - x*r10) + (1 - 2*nu)*r12*(-(x/(r1 + r2)) + 1/((x*r9 + (2*depth + z)*r10)*(1 + r2/r18)) + ((-2*r2*r11*r9*r10)/r20 + (r2*r10)/(r11*(r2*r9 + x*(x*r9 + (2*depth + z)*r10))) + (r11*r10)/(r2*r9 + x*(x*r9 + (2*depth + z)*r10)))/(1 + (r2*(r1 + r2 + r5)*r16)/r20))))))/(8.*PI*(1 - nu));
        return uzy;
    }
    double uzzcalc(double x, double y, double z) override
    {
        double r1 = pow(x,2);
        double r2 = pow(y,2);
        double r3 = pow(z,2);
        double r4 = pow(r1 + r2 + r3,1.5);
        double r5 = pow(2*depth + z,2);
        double r6 = pow(r1 + r2 + r5,1.5);
        double r7 = pow(r1 + r2 + r5,2);
        double r8 = sqrt(r1 + r2 + r3);
        double r9 = cos(kappa);
        double r10 = sin(kappa);
        double r11 = sqrt(r1 + r2 + r5);
        double r12 = 1/tan(kappa);
        double r13 = pow(r8 - z*r9 - x*r10,2);
        double r14 = pow(2*depth + z + r11,2);
        double r15 = pow(x*r9 - z*r10,2);
        double r16 = pow(r10,2);
        double r17 = pow(r11 + (2*depth + z)*r9 - x*r10,2);
        double r18 = pow(x*r9 + (2*depth + z)*r10,2);
        double r19 = pow(r2*r9 + x*(x*r9 - z*r10),2);
        double r20 = pow(r2*r9 + x*(x*r9 + (2*depth + z)*r10),2);
        double uzz=(burgers_vector.c[1]*(-(x*(-(z/r4) + (2*depth + z)/r6)) - ((-z + r8*r9)*r10)/(r8*(r8 - z*r9 - x*r10)) - ((2*depth + z + r11*r9)*r10)/(r11*(r11 + (2*depth + z)*r9 - x*r10)) - ((z/r8 - r9)*(-z + r8*r9)*(x*r9 - z*r10))/(r8*r13) + ((-1 + (z*r9)/r8)*(x*r9 - z*r10))/(r8*(r8 - z*r9 - x*r10)) - (z*(-z + r8*r9)*(x*r9 - z*r10))/(r4*(r8 - z*r9 - x*r10)) + (((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*r17) - ((1 + ((2*depth + z)*r9)/r11)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + ((2*depth + z)*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + (-1 + 2*nu)*r10*((z/r8 - r9)/(r8 - z*r9 - x*r10) - ((2*depth + z)/r11 + r9)/(r11 + (2*depth + z)*r9 - x*r10)) + 2*((2*(1 - nu)*x*(2*nu + depth/r11)*(1 + (2*depth + z)/r11))/r14 + (2*depth*(1 - nu)*x*(2*depth + z))/(r6*(2*depth + z + r11)) + ((depth + z)*((2*depth*x*(2*depth + z))/r7 + (2*nu*x*(1 + (2*depth + z)/r11))/r14))/r11 - ((depth + z)*(2*depth + z)*(-((depth*x)/(r1 + r2 + r5)) - (2*nu*x)/(2*depth + z + r11) + (1 - 2*nu)*r12))/r6 + (-((depth*x)/(r1 + r2 + r5)) - (2*nu*x)/(2*depth + z + r11) + (1 - 2*nu)*r12)/r11 + (2*(1 - nu)*(depth/r11 + r9)*r10)/(r11 + (2*depth + z)*r9 - x*r10) - (2*(1 - nu)*(depth/r11 + r9)*((2*depth + z)/r11 + r9)*(x*r9 + (2*depth + z)*r10))/r17 - (2*depth*(1 - nu)*(2*depth + z)*(x*r9 + (2*depth + z)*r10))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) - 2*(1 - 2*nu)*(1 - nu)*r12*((1 + (2*depth + z)/r11)/(2*depth + z + r11) - (r9*((2*depth + z)/r11 + r9))/(r11 + (2*depth + z)*r9 - x*r10)) - ((depth + z)*(((2*depth + z + r11*r9)*r12*((((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9))/r17 - (1 + ((2*depth + z)*r9)/r11)/(r11 + (2*depth + z)*r9 - x*r10)))/r11 + ((1 + ((2*depth + z)*r9)/r11)*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/r11 - ((2*depth + z)*(2*depth + z + r11*r9)*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/r6 + (depth*(-(((2*depth + z)*r10)/(r1 + r2 + r5)) - ((2*depth + z + r11*r9)*r10)/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + (2*r5*(x*r9 + (2*depth + z)*r10))/r7 - (x*r9 + (2*depth + z)*r10)/(r1 + r2 + r5) + (((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*r17) - ((1 + ((2*depth + z)*r9)/r11)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + ((2*depth + z)*(2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r6*(r11 + (2*depth + z)*r9 - x*r10))))/r11 - (depth*(2*depth + z)*(r10 - ((2*depth + z)*(x*r9 + (2*depth + z)*r10))/(r1 + r2 + r5) - ((2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10))))/r6))/(r11 + (2*depth + z)*r9 - x*r10) + ((depth + z)*((2*depth + z)/r11 + r9)*(r9*r10 + ((2*depth + z + r11*r9)*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/r11 + (depth*(r10 - ((2*depth + z)*(x*r9 + (2*depth + z)*r10))/(r1 + r2 + r5) - ((2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10))))/r11))/r17 - (r9*r10 + ((2*depth + z + r11*r9)*r12*(2*(1 - nu)*r9 - (2*depth + z + r11*r9)/(r11 + (2*depth + z)*r9 - x*r10)))/r11 + (depth*(r10 - ((2*depth + z)*(x*r9 + (2*depth + z)*r10))/(r1 + r2 + r5) - ((2*depth + z + r11*r9)*(x*r9 + (2*depth + z)*r10))/(r11*(r11 + (2*depth + z)*r9 - x*r10))))/r11)/(r11 + (2*depth + z)*r9 - x*r10))))/(8.*PI*(1 - nu)) + (burgers_vector.c[2]*(y*r10*(-(((z/r8 - r9)*(-z + r8*r9))/(r8*r13)) + (-1 + (z*r9)/r8)/(r8*(r8 - z*r9 - x*r10)) - (z*(-z + r8*r9))/(r4*(r8 - z*r9 - x*r10)) + (((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9))/(r11*r17) - (1 + ((2*depth + z)*r9)/r11)/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + ((2*depth + z)*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10))) + 2*(1 - nu)*((y*r10)/(r15*(1 + r2/r15)) + (y*r10)/(r18*(1 + r2/r18)) + ((x*y*r8*r16)/r19 + (y*z*r10)/(r8*(r2*r9 + x*(x*r9 - z*r10))))/(1 + (r2*(r1 + r2 + r3)*r16)/r19) - (-((x*y*r11*r16)/r20) + (y*(2*depth + z)*r10)/(r11*(r2*r9 + x*(x*r9 + (2*depth + z)*r10))))/(1 + (r2*(r1 + r2 + r5)*r16)/r20)) + 2*((y*(depth + z)*r10*((-2*depth*r5)/r7 + depth/(r1 + r2 + r5) - ((depth/r11 + r9)*((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9))/r17 + ((depth/r11 + r9)*(1 + ((2*depth + z)*r9)/r11))/(r11 + (2*depth + z)*r9 - x*r10) - (depth*(2*depth + z)*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10))))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) - (y*(depth + z)*((2*depth + z)/r11 + r9)*r10*(1 + (depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r11*r17) - (y*(depth + z)*(2*depth + z)*r10*(1 + (depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + (y*r10*(1 + (depth*(2*depth + z))/(r1 + r2 + r5) + ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + 2*(1 - nu)*(-((y*(depth/r11 + r9)*((2*depth + z)/r11 + r9)*r10)/r17) - (depth*y*(2*depth + z)*r10)/(r6*(r11 + (2*depth + z)*r9 - x*r10)) - (y*r10)/(r18*(1 + r2/r18)) + (-((x*y*r11*r16)/r20) + (y*(2*depth + z)*r10)/(r11*(r2*r9 + x*(x*r9 + (2*depth + z)*r10))))/(1 + (r2*(r1 + r2 + r5)*r16)/r20)))))/(8.*PI*(1 - nu)) + (burgers_vector.c[0]*(y*(-(z/r4) + (2*depth + z)/r6 - r9*(-(((z/r8 - r9)*(-z + r8*r9))/(r8*r13)) + (-1 + (z*r9)/r8)/(r8*(r8 - z*r9 - x*r10)) - (z*(-z + r8*r9))/(r4*(r8 - z*r9 - x*r10)) + (((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9))/(r11*r17) - (1 + ((2*depth + z)*r9)/r11)/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + ((2*depth + z)*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10)))) + 2*((y*(depth + z)*((-2*depth*(2*depth + z))/r7 - (2*nu*(1 + (2*depth + z)/r11))/r14))/r11 - (y*(depth + z)*(2*depth + z)*(depth/(r1 + r2 + r5) + (2*nu)/(2*depth + z + r11)))/r6 + (y*(depth/(r1 + r2 + r5) + (2*nu)/(2*depth + z + r11)))/r11 + (y*(depth + z)*r9*((2*depth*r5)/r7 - depth/(r1 + r2 + r5) + ((depth/r11 + r9)*((2*depth + z)/r11 + r9)*(2*depth + z + r11*r9))/r17 - ((depth/r11 + r9)*(1 + ((2*depth + z)*r9)/r11))/(r11 + (2*depth + z)*r9 - x*r10) + (depth*(2*depth + z)*(2*depth + z + r11*r9))/(r6*(r11 + (2*depth + z)*r9 - x*r10))))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) - (y*(depth + z)*r9*((2*depth + z)/r11 + r9)*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r5) - ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r11*r17) - (y*(depth + z)*(2*depth + z)*r9*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r5) - ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + (y*r9*(1 - 2*nu - (depth*(2*depth + z))/(r1 + r2 + r5) - ((depth/r11 + r9)*(2*depth + z + r11*r9))/(r11 + (2*depth + z)*r9 - x*r10)))/(r11*(r11 + (2*depth + z)*r9 - x*r10)) + 2*(1 - nu)*(-((y*(2*nu + depth/r11)*(1 + (2*depth + z)/r11))/r14) - (depth*y*(2*depth + z))/(r6*(2*depth + z + r11)) + (y*r9*(depth/r11 + r9)*((2*depth + z)/r11 + r9))/r17 + (depth*y*(2*depth + z)*r9)/(r6*(r11 + (2*depth + z)*r9 - x*r10)) + (1 - 2*nu)*r12*(-((y*r10)/(r18*(1 + r2/r18))) + (-((x*y*r11*r16)/r20) + (y*(2*depth + z)*r10)/(r11*(r2*r9 + x*(x*r9 + (2*depth + z)*r10))))/(1 + (r2*(r1 + r2 + r5)*r16)/r20))))))/(8.*PI*(1 - nu));
        return uzz;
    }
};

class DisplacmentGradientSystemReplace: public virtual DisplacmentGradient{
public:
    Rotation_Matrix_Z *rotate;
    Rotation_Matrix_Z_Vector *rotate_vector;
    DisplacmentGradient *distortion_gradients;
    double phi;
    DisplacmentGradientSystemReplace(Vector<double> burgers_vector, double depth, double nu, double phi, double kappa, DisplacmentGradient& distorsion_gradients)//mock
    {
        rotate = new Rotation_Matrix_Z(phi);
        rotate_vector = new Rotation_Matrix_Z_Vector(phi);
        distortion_gradients=&distorsion_gradients;
        this->phi=phi;
        this->depth=depth;
        this->nu=nu;
        this->kappa=kappa;
        rotate_vector->Basis(burgers_vector);
        this->burgers_vector=rotate_vector->vector;
        distortion_gradients->burgers_vector=this->burgers_vector;
    }
    double uxxcalc(double x, double y, double z) override
    {
        rotate->Basis(x,y,z);
        double uxx=distortion_gradients->uxxcalc(rotate->xc, rotate->yc, rotate->zc)*cos(phi)*cos(phi) - distortion_gradients->uxycalc(rotate->xc, rotate->yc, rotate->zc)*cos(phi)*sin(phi) - distortion_gradients->uyxcalc(rotate->xc, rotate->yc, rotate->zc)*cos(phi)*sin(phi) + distortion_gradients->uyycalc(rotate->xc, rotate->yc, rotate->zc)*sin(phi)*sin(phi);
        return uxx;
    }
    double uxycalc(double x, double y, double z) override
    {
        double uxy=distortion_gradients->uxycalc (rotate -> xc, rotate -> yc, rotate -> zc)*pow(cos(phi), 2) + distortion_gradients->uxxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos(phi)*sin(phi) - distortion_gradients->uyycalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos(phi)*sin(phi) -distortion_gradients->uyxcalc(rotate -> xc, rotate -> yc, rotate -> zc)*pow(sin(phi), 2);
        return uxy;
    }
    double uxzcalc(double x, double y, double z) override
    {
        double uxz=distortion_gradients->uxzcalc(rotate -> xc, rotate -> yc, rotate -> zc)*cos(phi) - distortion_gradients->uyzcalc(rotate -> xc, rotate -> yc, rotate -> zc)*sin (phi);
        return uxz;
    }
    double uyxcalc(double x, double y, double z) override
    {
        double uyx=distortion_gradients->uyxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*pow (cos (phi), 2) + distortion_gradients ->uxxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi)*sin (phi) - distortion_gradients ->uyycalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi)*sin (phi) - distortion_gradients ->uxycalc (rotate -> xc, rotate -> yc, rotate -> zc)*pow (sin (phi), 2);
        return uyx;
    }
    double uyycalc(double x, double y, double z) override
    {
        double uyy=distortion_gradients ->uyycalc (rotate -> xc, rotate -> yc, rotate -> zc)*pow (cos (phi), 2) + distortion_gradients ->uxycalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi)*sin (phi) + distortion_gradients ->uyxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi)*sin (phi) + distortion_gradients ->uxxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*pow (sin (phi), 2);
        return uyy;
    }
    double uyzcalc(double x, double y, double z) override
    {
        double uyz=distortion_gradients ->uyzcalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi) +distortion_gradients ->uxzcalc (rotate -> xc, rotate -> yc, rotate -> zc)*sin (phi);
        return uyz;
    }
    double uzxcalc(double x, double y, double z) override
    {
        double uzx=distortion_gradients ->uzxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi) -distortion_gradients ->uzycalc (rotate -> xc, rotate -> yc, rotate -> zc)*sin (phi);
        return uzx;
    }
    double uzycalc(double x, double y, double z) override
    {
        double uzy=distortion_gradients ->uzycalc (rotate -> xc, rotate -> yc, rotate -> zc)*cos (phi) +distortion_gradients ->uzxcalc (rotate -> xc, rotate -> yc, rotate -> zc)*sin (phi);
        return uzy;
    }
    double uzzcalc(double x, double y, double z) override
    {
        double uzz=distortion_gradients ->uzzcalc (rotate -> xc, rotate -> yc, rotate -> zc);
        return uzz;
    }
};

class InitialisationGeometry{
public:
    Vector<double> x_vector,y_vector,z_vector, glide_plane_vector, b_vector;
    std::vector <double> kappa, phi;
    std::vector <Vector<double>> exit_point;
    double dislocation_depth;
    InitialisationGeometry(Vector<double> diffraction_vector,Vector<double> normal_vector,std::vector <Vector<double>> direction_vector_list, Vector<double> burgers_vector, int nubmer_of_dislocation, double dislocation_depth, std::vector <double> segment_lenght){
        x_vector=Vector_Normalization<double, double>(diffraction_vector);
        z_vector=Vector_Normalization<double, double>(Vector_Inverse(normal_vector));
        y_vector=Vector_Multiplication<double, double>(z_vector, x_vector);
        try{
        Glide_Plane(direction_vector_list);
        }
        catch (const char *str){
            std::cout << str;
        }
        burgers_vector.c[0]=burgers_vector.c[0]*nubmer_of_dislocation;
        burgers_vector.c[1]=burgers_vector.c[1]*nubmer_of_dislocation;
        burgers_vector.c[2]=burgers_vector.c[2]*nubmer_of_dislocation;
        Burgers_Vector_Into_System_Coordinates(burgers_vector);
        this->dislocation_depth=dislocation_depth;
        Angle_Between_Dislocation_Axis_And_Calculation_Axis(direction_vector_list);
    }
    void Glide_Plane(std::vector <Vector<double>> direction_vector_list){//untested
        switch (direction_vector_list.size()) {
            case 0:
                std::cerr<<"Can't calculate a glide plane, list is empty!"<<std::endl;
                break;
            case 1:
                std::cerr<<"Can't calculate a glide plane, list has only one vector!"<<std::endl;
                break;
            default:
                Glide_Plane_Calculate(direction_vector_list);
                break;
        }
    }
    void Glide_Plane_Calculate(std::vector <Vector<double>> direction_vector_list){//untested
        Vector<double> comparison_vector;
        for(int i=1;i<direction_vector_list.size();i++){
            glide_plane_vector=Vector_Multiplication<double, double>(direction_vector_list[i-1], direction_vector_list[i]);
            if (i!=1 and comparison_vector!=glide_plane_vector){
                throw "This vectors haven't overall glide plane";
            }
            comparison_vector=glide_plane_vector;
        }
    }
    void Exit_Point_Coordinate(std::vector <Vector<double>> direction_vector_list, std::vector <double> segment_lenght){//untested
        Vector<double> exit_point_calculation;
        for(int i=0;i<direction_vector_list.size();i++)
        {
            exit_point_calculation.c[2]=-dislocation_depth;
            if(kappa[i]>=(PI_2-0.005*PI_2) && kappa[i]<=(PI_2+0.005*PI_2)){
                exit_point_calculation.c[0]=(segment_lenght[i])*cos(phi[i]);
                exit_point_calculation.c[1]=(segment_lenght[i])*sin(phi[i]);
            }
            else{
                exit_point_calculation.c[0]=(dislocation_depth/tan(kappa[i])+segment_lenght[i])*cos(phi[i]);
                exit_point_calculation.c[1]=(dislocation_depth/tan(kappa[i])+segment_lenght[i])*sin(phi[i]);
            }
            exit_point.push_back(exit_point_calculation);
        }
    }
    void Burgers_Vector_Into_System_Coordinates(Vector<double> b_initial){//not tested
        b_vector.c[0]=-((-(b_initial.c[2]*y_vector.c[1]*z_vector.c[0]) + b_initial.c[1]*y_vector.c[2]*z_vector.c[0] + b_initial.c[2]*y_vector.c[0]*z_vector.c[1] - b_initial.c[0]*y_vector.c[2]*z_vector.c[1] - b_initial.c[1]*y_vector.c[0]*z_vector.c[2] + b_initial.c[0]*y_vector.c[1]*z_vector.c[2])/ (x_vector.c[2]*y_vector.c[1]*z_vector.c[0] - x_vector.c[1]*y_vector.c[2]*z_vector.c[0] - x_vector.c[2]*y_vector.c[0]*z_vector.c[1] + x_vector.c[0]*y_vector.c[2]*z_vector.c[1] + x_vector.c[1]*y_vector.c[0]*z_vector.c[2] - x_vector.c[0]*y_vector.c[1]*z_vector.c[2]));
        b_vector.c[1]=-((b_initial.c[2]*x_vector.c[1]*z_vector.c[0] - b_initial.c[1]*x_vector.c[2]*z_vector.c[0] - b_initial.c[2]*x_vector.c[0]*z_vector.c[1] + b_initial.c[0]*x_vector.c[2]*z_vector.c[1] + b_initial.c[1]*x_vector.c[0]*z_vector.c[2] - b_initial.c[0]*x_vector.c[1]*z_vector.c[2])/(x_vector.c[2]* y_vector.c[1]*z_vector.c[0] - x_vector.c[1]*y_vector.c[2]*z_vector.c[0] - x_vector.c[2]*y_vector.c[0]*z_vector.c[1] + x_vector.c[0]*y_vector.c[2]*z_vector.c[1] + x_vector.c[1]*y_vector.c[0]*z_vector.c[2] - x_vector.c[0]*y_vector.c[1]*z_vector.c[2]));
        b_vector.c[2]=-((b_initial.c[2]*x_vector.c[1]*y_vector.c[0] - b_initial.c[1]*x_vector.c[2]*y_vector.c[0] - b_initial.c[2]*x_vector.c[0]*y_vector.c[1] + b_initial.c[0]*x_vector.c[2]*y_vector.c[1] + b_initial.c[1]*x_vector.c[0]*y_vector.c[2] - b_initial.c[0]*x_vector.c[1]* y_vector.c[2])/(-(x_vector.c[2]*y_vector.c[1]*z_vector.c[0]) + x_vector.c[1]*y_vector.c[2]*z_vector.c[0] + x_vector.c[2]*y_vector.c[0]*z_vector.c[1] - x_vector.c[0]*y_vector.c[2]*z_vector.c[1] - x_vector.c[1]*y_vector.c[0]*z_vector.c[2] + x_vector.c[0]*y_vector.c[1]*z_vector.c[2]));
    }
    void Angle_Between_Dislocation_Axis_And_Calculation_Axis(std::vector <Vector<double>> direction_vector_list){//untested
        double kappa_calculate,phi_calculate;
        for(int i=0;i<direction_vector_list.size();i++)
        {
            Vector <double> vector_normal_tayz=Vector_Multiplication<double, double>(direction_vector_list[i], z_vector);
            Vector <double> vector_normal_xz=Vector_Multiplication<double, double>(x_vector, z_vector);
            if(Vector_Absolute_Value(vector_normal_tayz)==0 || Vector_Absolute_Value(vector_normal_tayz)==0){
                phi_calculate=0;
            }
            else{
                phi_calculate=acos(Scalar_Multiplication(vector_normal_tayz, vector_normal_xz)/(Vector_Absolute_Value(vector_normal_xz)*Vector_Absolute_Value(vector_normal_tayz)));
            }
            kappa_calculate=acos(Scalar_Multiplication(z_vector, direction_vector_list[i])/(Vector_Absolute_Value(z_vector)*Vector_Absolute_Value(direction_vector_list[i])));
            if(kappa_calculate>PI_2){
                kappa_calculate=kappa_calculate-PI_2;
            }
            kappa.push_back(kappa_calculate);
            phi.push_back(phi_calculate);
        }
    }
};

int main(int argc, const char * argv[]) {
    //Input data
    //Diffraction vector:
    Vector<double> diffraction_vector;
    diffraction_vector.c[0]=1;
    diffraction_vector.c[1]=0;
    diffraction_vector.c[2]=0;
    //Normal to surface vector:
    Vector<double> normal_vector;
    normal_vector.c[0]=0;
    normal_vector.c[1]=0;
    normal_vector.c[2]=-1;
    //Vector of tay-vectors:
    std::vector <Vector<double>> tay_vector;
    Vector<double> tay_1;
    tay_1.c[0]=-1;
    tay_1.c[1]=0;
    tay_1.c[2]=-1;
    tay_vector.push_back(tay_1);
    Vector<double> tay_2;
    tay_2.c[0]=1;
    tay_2.c[1]=0;
    tay_2.c[2]=0;
    tay_vector.push_back(tay_2);
    //Burger's vectorof dislocation:
    Vector<double> burgers_vector;
    burgers_vector.c[0]=1;
    burgers_vector.c[1]=1;
    burgers_vector.c[2]=1;
    //Number of dislocation in one place:
    int number_of_dislocation=1;
    //Dislocation depth:
    double dislocation_depth=100;
    //Segment lengt (thi first and second position must be zeros! If the dislocation have more, then to segments, then add into third position a value of mid segment lenght)
    std::vector<double> segment_lenght;
    segment_lenght.push_back(0);
    segment_lenght.push_back(0);
    //Start of initialization
    InitialisationGeometry *init_obj = new InitialisationGeometry(diffraction_vector, normal_vector,tay_vector, burgers_vector, number_of_dislocation,dislocation_depth,segment_lenght);
//    AngularDislocation *test = new AngularDislocation();
//    test->burgers_vector=burgers_vector;
//    test->depth=dislocation_depth;
//    test->kappa=1.0;
//    test->nu=0.4;
//    std::cout<<test->uxxcalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uxycalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uxzcalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uyxcalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uyycalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uyzcalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uzxcalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uzycalc(5, 5, 5)<<std::endl;
//    std::cout<<test->uzzcalc(5, 5, 5)<<std::endl;
    //
//    BeamDislocation *test1 = new BeamDislocation();
//    test1->burgers_vector=burgers_vector;
//    test1->depth=dislocation_depth;
//    test1->theta=1.0;
//    test1->nu=0.4;
//    std::cout<<test1->uxxcalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uxycalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uxzcalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uyxcalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uyycalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uyzcalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uzxcalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uzycalc(5, 5, 5)<<std::endl;
//    std::cout<<test1->uzzcalc(5, 5, 5)<<std::endl;
    return 0;
}
